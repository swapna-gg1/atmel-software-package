###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         24/Mar/2021  13:23:14
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode                    
#    Endian                   =  little
#    Source file              =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\peripherals\rstc.c
#    Command line             =
#        -f C:\Users\c40450\AppData\Local\Temp\EW51B1.tmp
#        (C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\peripherals\rstc.c
#        -D "SOFTPACK_VERSION=\"2.17\"" -D TRACE_LEVEL=5 -D VARIANT_SRAM -D
#        CONFIG_ARCH_ARMV5TE -D CONFIG_ARCH_ARM -D CONFIG_SOC_SAM9X60 -D
#        CONFIG_CHIP_SAM9X60 -D CONFIG_BOARD_SAM9X60_EK -D CONFIG_HAVE_AIC5 -D
#        CONFIG_HAVE_FLEXCOM -D CONFIG_HAVE_PIO3 -D CONFIG_HAVE_PIT -D
#        CONFIG_HAVE_SMC -D CONFIG_HAVE_SDRAMC -D CONFIG_HAVE_MPDDRC -D
#        CONFIG_HAVE_MPDDRC_DATA_PATH -D CONFIG_HAVE_MPDDRC_IO_CALIBRATION -D
#        CONFIG_HAVE_MPDDRC_DDR2 -D CONFIG_HAVE_ADC_LOW_RES -D
#        CONFIG_HAVE_PMC_FAST_STARTUP -D CONFIG_HAVE_PMC_GENERATED_CLOCKS -D
#        CONFIG_HAVE_SCKC -D CONFIG_HAVE_NFD0_ON_D16 -D CONFIG_HAVE_XDMAC -D
#        CONFIG_HAVE_PWMC -D CONFIG_HAVE_DDR2_W972GG6KB -D
#        CONFIG_HAVE_RSTC_EXTERNAL_RESET -D CONFIG_HAVE_RSTC_INDEPENDENT_RESET
#        -D CONFIG_HAVE_RTT -D CONFIG_HAVE_SHDWC -D CONFIG_HAVE_LED -D
#        CONFIG_HAVE_MMU -D CONFIG_HAVE_L1CACHE -D CONFIG_HAVE_OTPC -D
#        CONFIG_HAVE_DBGU -D CONFIG_HAVE_SERIALD_DBGU -D CONFIG_HAVE_USART -D
#        CONFIG_HAVE_USART_FIFO -D CONFIG_HAVE_DWDT --preprocess
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sam9x60-ek\sram\List
#        -lC
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sam9x60-ek\sram\List
#        --diag_suppress Pa050 -o
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sam9x60-ek\sram\Obj
#        --debug --endian=little --cpu=ARM926EJ-S -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\arch\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\utils\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\target\common\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\target\sam9x60\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\drivers\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\lib\
#        --section .text=SOFTPACK --cpu_mode arm -Oh)
#    Locale                   =  C
#    List file                =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sam9x60-ek\sram\List\rstc.lst
#    Object file              =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sam9x60-ek\sram\Obj\rstc.o
#    Runtime model:              
#      __SystemLibrary        =  DLib
#      __dlib_file_descriptor =  0
#      __dlib_version         =  6
#      __iar_require _Printf     
#
###############################################################################

C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\peripherals\rstc.c
      1          /* ----------------------------------------------------------------------------
      2           *         SAM Software Package License
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2015, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /** \file */
     31          /*---------------------------------------------------------------------------
     32           *         Headers
     33           *---------------------------------------------------------------------------*/
     34          
     35          #include "chip.h"
     36          #include "trace.h"
     37          #include "peripherals/rstc.h"
     38          
     39          /*---------------------------------------------------------------------------
     40           *         Exported functions
     41           *---------------------------------------------------------------------------*/
     42          
     43          #ifdef CONFIG_HAVE_RSTC_CONFIGURABLE_USER_RESET
     44          
     45          void rstc_set_user_reset_enable(bool enable)
     46          {
     47          	uint32_t mr = RSTC->RSTC_MR;
     48          	if (enable) {
     49          		mr |= RSTC_MR_URSTEN;
     50          	} else {
     51          		mr &= ~RSTC_MR_URSTEN;
     52          	}
     53          	RSTC->RSTC_MR = mr | RSTC_MR_KEY_PASSWD;
     54          }
     55          
     56          void rstc_set_user_reset_interrupt_enable(bool enable)
     57          {
     58          	uint32_t mr = RSTC->RSTC_MR;
     59          	if (enable) {
     60          		mr |= RSTC_MR_URSTIEN;
     61          	} else {
     62          		mr &= ~RSTC_MR_URSTIEN;
     63          	}
     64          	RSTC->RSTC_MR = mr | RSTC_MR_KEY_PASSWD;
     65          }
     66          
     67          #endif /* CONFIG_HAVE_RSTC_CONFIGURABLE_USER_RESET */
     68          
     69          #ifdef CONFIG_HAVE_RSTC_EXTERNAL_RESET
     70          

   \                                 In section SOFTPACK, align 4, keep-with-next
     71          void rstc_set_ext_reset_length(uint8_t length)
     72          {
     73          	RSTC->RSTC_MR = RSTC->RSTC_MR | RSTC_MR_ERSTL(length) | RSTC_MR_KEY_PASSWD;
   \                     rstc_set_ext_reset_length:
   \        0x0   0xE3E0'10F7        MVN      R1,#+247
   \        0x4   0xE3C1'1F40        BIC      R1,R1,#0x100
   \        0x8   0xE3A0'3EF0        MOV      R3,#+3840
   \        0xC   0xE591'2000        LDR      R2,[R1, #+0]
   \       0x10   0xE003'0400        AND      R0,R3,R0, LSL #+8
   \       0x14   0xE380'C4A5        ORR      R12,R0,#0xA5000000
   \       0x18   0xE18C'C002        ORR      R12,R12,R2
   \       0x1C   0xE581'C000        STR      R12,[R1, #+0]
     74          }
   \       0x20   0xE12F'FF1E        BX       LR               ;; return
     75          

   \                                 In section SOFTPACK, align 4, keep-with-next
     76          void rstc_reset_processor_and_peripherals_and_ext(void)
     77          {
     78          	RSTC->RSTC_CR = RSTC_CR_EXTRST | RSTC_MR_KEY_PASSWD;
   \                     rstc_reset_processor_and_peripherals_and_ext:
   \        0x0   0xE3A0'0008        MOV      R0,#+8
   \        0x4   0x....'....        B        ??Subroutine0_0
     79          }

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?Subroutine0:
   \        0x0   0xE3A0'0001        MOV      R0,#+1
   \                     ??Subroutine0_0:
   \        0x4   0xE3E0'10FF        MVN      R1,#+255
   \        0x8   0xE380'04A5        ORR      R0,R0,#0xA5000000
   \        0xC   0xE3C1'1F40        BIC      R1,R1,#0x100
   \       0x10   0xE581'0000        STR      R0,[R1, #+0]
   \       0x14   0xE12F'FF1E        BX       LR               ;; return
     80          
     81          #endif /* CONFIG_HAVE_RSTC_EXTERNAL_RESET */
     82          

   \                                 In section SOFTPACK, align 4, keep-with-next
     83          void rstc_reset_processor_and_peripherals(void)
     84          {
     85          #ifdef RSTC_CR_PERRST
     86          	RSTC->RSTC_CR = RSTC_CR_PERRST | RSTC_CR_PROCRST | RSTC_MR_KEY_PASSWD;
     87          #else
     88          	RSTC->RSTC_CR = RSTC_CR_PROCRST | RSTC_MR_KEY_PASSWD;
   \                     rstc_reset_processor_and_peripherals:
   \        0x0   0x....'....        B        ?Subroutine0
     89          #endif
     90          }
     91          
     92          #ifdef CONFIG_HAVE_RSTC_INDEPENDENT_RESET
     93          

   \                                 In section SOFTPACK, align 4, keep-with-next
     94          void rstc_reset_processor(void)
     95          {
     96          	RSTC->RSTC_CR = RSTC_CR_PROCRST | RSTC_MR_KEY_PASSWD;
   \                     rstc_reset_processor:
   \        0x0   0xE1A0'0000        Nop
   \        0x4                      REQUIRE ?Subroutine0
   \        0x4                      ;; // Fall through to label ?Subroutine0
     97          }
     98          

   \                                 In section SOFTPACK, align 4, keep-with-next
     99          void rstc_reset_peripherals(void)
    100          {
    101          #ifdef RSTC_CR_PERRST
    102          	RSTC->RSTC_CR = RSTC_CR_PERRST | RSTC_MR_KEY_PASSWD;
    103          #else
    104          	trace_warning("peripheral reset not supported\n\r");
   \                     rstc_reset_peripherals:
   \        0x0   0x....'....        LDR      R0,??DataTable1
   \        0x4   0xE590'1000        LDR      R1,[R0, #+0]
   \        0x8   0xE351'0003        CMP      R1,#+3
   \        0xC   0x....'....        LDRCS    R0,??DataTable1_1
   \       0x10   0x....'....        BCS      printf           ;; tailcall
    105          #endif
    106          }
   \       0x14   0xE12F'FF1E        BX       LR               ;; return
    107          
    108          #endif /* CONFIG_HAVE_RSTC_INDEPENDENT_RESET */
    109          

   \                                 In section SOFTPACK, align 4, keep-with-next
    110          void rstc_reset_all(void)
    111          {
    112          	uint32_t cr = RSTC_CR_PROCRST | RSTC_CR_KEY_PASSWD;
    113          
    114          #ifdef RSTC_CR_PERRST
    115          	cr |= RSTC_CR_PERRST;
    116          #endif
    117          
    118          #ifdef RSTC_CR_EXTRST
    119          	cr |= RSTC_CR_EXTRST;
    120          #endif
    121          
    122          	RSTC->RSTC_CR = cr;
   \                     rstc_reset_all:
   \        0x0   0xE3A0'0009        MOV      R0,#+9
   \        0x4   0x....'....        B        ??Subroutine0_0
    123          }
    124          

   \                                 In section SOFTPACK, align 4, keep-with-next
    125          bool rstc_get_nrst_level(void)
    126          {
    127          	return (RSTC->RSTC_SR & RSTC_SR_NRSTL) != 0;
   \                     rstc_get_nrst_level:
   \        0x0   0xE3E0'00FB        MVN      R0,#+251
   \        0x4   0xE3C0'0F40        BIC      R0,R0,#0x100
   \        0x8   0xE590'1000        LDR      R1,[R0, #+0]
   \        0xC   0xE1A0'2821        LSR      R2,R1,#+16
   \       0x10   0xE202'0001        AND      R0,R2,#0x1
   \       0x14   0xE12F'FF1E        BX       LR               ;; return
    128          }
    129          

   \                                 In section SOFTPACK, align 4, keep-with-next
    130          bool rstc_is_user_reset_detected(void)
    131          {
    132          	return (RSTC->RSTC_SR & RSTC_SR_URSTS) != 0;
   \                     rstc_is_user_reset_detected:
   \        0x0   0xE3E0'00FB        MVN      R0,#+251
   \        0x4   0xE3C0'0F40        BIC      R0,R0,#0x100
   \        0x8   0xE590'1000        LDR      R1,[R0, #+0]
   \        0xC   0xE201'0001        AND      R0,R1,#0x1
   \       0x10   0xE12F'FF1E        BX       LR               ;; return
    133          }
    134          

   \                                 In section SOFTPACK, align 4, keep-with-next
    135          bool rstc_is_busy(void)
    136          {
    137          	return (RSTC->RSTC_SR & RSTC_SR_SRCMP) != 0;
   \                     rstc_is_busy:
   \        0x0   0xE3E0'00FB        MVN      R0,#+251
   \        0x4   0xE3C0'0F40        BIC      R0,R0,#0x100
   \        0x8   0xE590'1000        LDR      R1,[R0, #+0]
   \        0xC   0xE1A0'28A1        LSR      R2,R1,#+17
   \       0x10   0xE202'0001        AND      R0,R2,#0x1
   \       0x14   0xE12F'FF1E        BX       LR               ;; return
    138          }
    139          

   \                                 In section SOFTPACK, align 4, keep-with-next
    140          uint32_t rstc_get_status(void)
    141          {
    142          	return RSTC->RSTC_SR;
   \                     rstc_get_status:
   \        0x0   0xE3E0'00FB        MVN      R0,#+251
   \        0x4   0xE3C0'0F40        BIC      R0,R0,#0x100
   \        0x8   0xE590'0000        LDR      R0,[R0, #+0]
   \        0xC   0xE12F'FF1E        BX       LR               ;; return
    143          }

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable1:
   \        0x0   0x....'....        DC32     trace_level

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable1_1:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x2D 0x57          DC8 "-W- peripheral reset not supported\012\015"

   \              0x2D 0x20    

   \              0x70 0x65    

   \              0x72 0x69    

   \              0x70 0x68    

   \              0x65 0x72    

   \              0x61 0x6C    

   \              0x20 0x72    

   \              0x65 0x73    

   \              0x65 0x74    

   \              0x20 0x6E    

   \              0x6F 0x74    

   \              0x20 0x73    

   \              0x75 0x70    

   \              0x70 0x6F    

   \              0x72 0x74    

   \              0x65 0x64    

   \              0x0A 0x0D    

   \              0x00
   \       0x25   0x00 0x00          DC8 0, 0, 0

   \              0x00

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   rstc_get_nrst_level
       0   rstc_get_status
       0   rstc_is_busy
       0   rstc_is_user_reset_detected
       0   rstc_reset_all
       0   rstc_reset_peripherals
         0   -> printf
       0   rstc_reset_processor
       0   rstc_reset_processor_and_peripherals
       0   rstc_reset_processor_and_peripherals_and_ext
       0   rstc_set_ext_reset_length


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
      24  ?Subroutine0
      40  ?_0
      24  rstc_get_nrst_level
      16  rstc_get_status
      24  rstc_is_busy
      20  rstc_is_user_reset_detected
       8  rstc_reset_all
      24  rstc_reset_peripherals
       4  rstc_reset_processor
       4  rstc_reset_processor_and_peripherals
       8  rstc_reset_processor_and_peripherals_and_ext
      36  rstc_set_ext_reset_length

 
  40 bytes in section .rodata
 200 bytes in section SOFTPACK
 
 200 bytes of CODE  memory
  40 bytes of CONST memory

Errors: none
Warnings: none
