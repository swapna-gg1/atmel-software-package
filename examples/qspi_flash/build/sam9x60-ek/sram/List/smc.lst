###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         17/Feb/2021  15:29:26
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode                    
#    Endian                   =  little
#    Source file              =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\extram\smc.c
#    Command line             =
#        -f C:\Users\c40450\AppData\Local\Temp\EW51C3.tmp
#        (C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\extram\smc.c
#        -D "SOFTPACK_VERSION=\"2.17\"" -D TRACE_LEVEL=5 -D VARIANT_SRAM -D
#        CONFIG_ARCH_ARMV5TE -D CONFIG_ARCH_ARM -D CONFIG_SOC_SAM9X60 -D
#        CONFIG_CHIP_SAM9X60 -D CONFIG_BOARD_SAM9X60_EK -D CONFIG_HAVE_AIC5 -D
#        CONFIG_HAVE_FLEXCOM -D CONFIG_HAVE_PIO3 -D CONFIG_HAVE_QSPI -D
#        CONFIG_HAVE_QSPI_DMA -D CONFIG_HAVE_PIT -D CONFIG_HAVE_SMC -D
#        CONFIG_HAVE_SDRAMC -D CONFIG_HAVE_MPDDRC -D
#        CONFIG_HAVE_MPDDRC_DATA_PATH -D CONFIG_HAVE_MPDDRC_IO_CALIBRATION -D
#        CONFIG_HAVE_MPDDRC_DDR2 -D CONFIG_HAVE_ADC_LOW_RES -D
#        CONFIG_HAVE_PMC_FAST_STARTUP -D CONFIG_HAVE_PMC_GENERATED_CLOCKS -D
#        CONFIG_HAVE_SCKC -D CONFIG_HAVE_NFD0_ON_D16 -D CONFIG_HAVE_XDMAC -D
#        CONFIG_HAVE_TRNG -D CONFIG_HAVE_PWMC -D CONFIG_HAVE_DDR2_W972GG6KB -D
#        CONFIG_HAVE_RSTC_EXTERNAL_RESET -D CONFIG_HAVE_RSTC_INDEPENDENT_RESET
#        -D CONFIG_HAVE_RTT -D CONFIG_HAVE_SHDWC -D CONFIG_HAVE_SPI -D
#        CONFIG_HAVE_SPI_NOR -D CONFIG_HAVE_MMU -D CONFIG_HAVE_L1CACHE -D
#        CONFIG_HAVE_OTPC -D CONFIG_HAVE_SPI_BUS -D CONFIG_HAVE_DBGU -D
#        CONFIG_HAVE_SERIALD_DBGU -D CONFIG_HAVE_USART -D
#        CONFIG_HAVE_USART_FIFO -D CONFIG_HAVE_DWDT --preprocess
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\build\sam9x60-ek\sram\List
#        -lC
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\build\sam9x60-ek\sram\List
#        --diag_suppress Pa050 -o
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\build\sam9x60-ek\sram\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=ARM926EJ-S -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\arch\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\utils\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\target\common\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\target\sam9x60\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\drivers\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\lib\
#        --section .text=SOFTPACK --cpu_mode arm -On)
#    Locale                   =  C
#    List file                =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\build\sam9x60-ek\sram\List\smc.lst
#    Object file              =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\build\sam9x60-ek\sram\Obj\smc.o
#    Runtime model:              
#      __SystemLibrary        =  DLib
#      __dlib_file_descriptor =  0
#      __dlib_version         =  6
#
###############################################################################

C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\extram\smc.c
      1          /* ----------------------------------------------------------------------------
      2           *         SAM Software Package License
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2015, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /**
     31            *  \file
     32            *
     33            *  Implementation of SMC functions.
     34            */
     35          
     36          /*----------------------------------------------------------------------------
     37           *        Headers
     38           *----------------------------------------------------------------------------*/
     39          
     40          #include "chip.h"
     41          #include "trace.h"
     42          
     43          #include "peripherals/pmc.h"
     44          #include "extram/smc.h"
     45          
     46          /*----------------------------------------------------------------------------
     47           *        Exported functions
     48           *----------------------------------------------------------------------------*/
     49          

   \                                 In section SOFTPACK, align 4, keep-with-next
     50          void smc_nand_configure(uint8_t bus_width)
     51          {
     52          #ifdef ID_SMC
     53          	pmc_configure_peripheral(ID_SMC, NULL, true);
     54          #endif
     55          
     56          	SMC->SMC_CS[NAND_EBI_CS].SMC_SETUP =
     57          		SMC_SETUP_NWE_SETUP(2) |
     58          		SMC_SETUP_NCS_WR_SETUP(2) |
     59          		SMC_SETUP_NRD_SETUP(2) |
     60          		SMC_SETUP_NCS_RD_SETUP(2);
   \                     smc_nand_configure:
   \        0x0   0x....'....        LDR      R1,??DataTable1  ;; 0x2020202
   \        0x4   0xE3E0'20CF        MVN      R2,#+207
   \        0x8   0xE3C2'2D54        BIC      R2,R2,#0x1500
   \        0xC   0xE582'1000        STR      R1,[R2, #+0]
     61          
     62          	SMC->SMC_CS[NAND_EBI_CS].SMC_PULSE =
     63          		SMC_PULSE_NWE_PULSE(7) |
     64          		SMC_PULSE_NCS_WR_PULSE(7) |
     65          		SMC_PULSE_NRD_PULSE(7) |
     66          		SMC_PULSE_NCS_RD_PULSE(7);
   \       0x10   0x....'....        LDR      R1,??DataTable1_1  ;; 0x7070707
   \       0x14   0xE3E0'20CB        MVN      R2,#+203
   \       0x18   0xE3C2'2D54        BIC      R2,R2,#0x1500
   \       0x1C   0xE582'1000        STR      R1,[R2, #+0]
     67          
     68          	SMC->SMC_CS[NAND_EBI_CS].SMC_CYCLE =
     69          		SMC_CYCLE_NWE_CYCLE(13) |
     70          		SMC_CYCLE_NRD_CYCLE(13);
   \       0x20   0xE3A0'100D        MOV      R1,#+13
   \       0x24   0xE381'1AD0        ORR      R1,R1,#0xD0000
   \       0x28   0xE3E0'20C7        MVN      R2,#+199
   \       0x2C   0xE3C2'2D54        BIC      R2,R2,#0x1500
   \       0x30   0xE582'1000        STR      R1,[R2, #+0]
     71          
     72          #ifdef SMC_TIMINGS_NFSEL
     73          	SMC->SMC_CS[NAND_EBI_CS].SMC_TIMINGS =
     74          		SMC_TIMINGS_TCLR(3) |
     75          		SMC_TIMINGS_TADL(27) |
     76          		SMC_TIMINGS_TAR(3) |
     77          		SMC_TIMINGS_TRR(6) |
     78          		SMC_TIMINGS_TWB(5) |
     79          		SMC_TIMINGS_NFSEL;
     80          #endif
     81          
     82          	SMC->SMC_CS[NAND_EBI_CS].SMC_MODE =
     83          		SMC_MODE_READ_MODE |
     84          		SMC_MODE_WRITE_MODE |
     85          		((bus_width == 8 ) ? SMC_MODE_DBW_BIT_8 : SMC_MODE_DBW_BIT_16) |
     86          		SMC_MODE_TDF_CYCLES(1);
   \       0x34   0xE1B0'1000        MOVS     R1,R0
   \       0x38   0xE211'10FF        ANDS     R1,R1,#0xFF      ;; Zero extend
   \       0x3C   0xE351'0008        CMP      R1,#+8
   \       0x40   0x1A00'0001        BNE      ??smc_nand_configure_0
   \       0x44   0xE3A0'1000        MOV      R1,#+0
   \       0x48   0xEA00'0000        B        ??smc_nand_configure_1
   \                     ??smc_nand_configure_0:
   \       0x4C   0xE3A0'1D40        MOV      R1,#+4096
   \                     ??smc_nand_configure_1:
   \       0x50   0xE391'1003        ORRS     R1,R1,#0x3
   \       0x54   0xE391'1B40        ORRS     R1,R1,#0x10000
   \       0x58   0xE3E0'20C3        MVN      R2,#+195
   \       0x5C   0xE3C2'2D54        BIC      R2,R2,#0x1500
   \       0x60   0xE582'1000        STR      R1,[R2, #+0]
     87          }
   \       0x64   0xE12F'FF1E        BX       LR               ;; return
     88          

   \                                 In section SOFTPACK, align 4, keep-with-next
     89          void smc_nor_configure(uint8_t cs, uint8_t bus_width)
     90          {
     91          #ifdef ID_SMC
     92          	pmc_configure_peripheral(ID_SMC, NULL, true);
     93          #endif
     94          
     95          	SMC->SMC_CS[cs].SMC_SETUP =
     96          		SMC_SETUP_NWE_SETUP(1) |
     97          		SMC_SETUP_NCS_WR_SETUP(0) |
     98          		SMC_SETUP_NRD_SETUP(2) |
     99          		SMC_SETUP_NCS_RD_SETUP(0);
   \                     smc_nor_configure:
   \        0x0   0xE3E0'20FF        MVN      R2,#+255
   \        0x4   0xE3C2'2D54        BIC      R2,R2,#0x1500
   \        0x8   0xE3A0'3001        MOV      R3,#+1
   \        0xC   0xE383'3B80        ORR      R3,R3,#0x20000
   \       0x10   0xE1B0'C000        MOVS     R12,R0
   \       0x14   0xE21C'C0FF        ANDS     R12,R12,#0xFF    ;; Zero extend
   \       0x18   0xE1B0'C20C        LSLS     R12,R12,#+4
   \       0x1C   0xE782'300C        STR      R3,[R2, +R12]
    100          
    101          	SMC->SMC_CS[cs].SMC_PULSE =
    102          		SMC_PULSE_NWE_PULSE(10) |
    103          		SMC_PULSE_NCS_WR_PULSE(10) |
    104          		SMC_PULSE_NRD_PULSE(11) |
    105          		SMC_PULSE_NCS_RD_PULSE(11);
   \       0x20   0x....'....        LDR      R3,??DataTable1_2  ;; 0xb0b0a0a
   \       0x24   0xE1B0'C000        MOVS     R12,R0
   \       0x28   0xE21C'C0FF        ANDS     R12,R12,#0xFF    ;; Zero extend
   \       0x2C   0xE1B0'C20C        LSLS     R12,R12,#+4
   \       0x30   0xE092'C00C        ADDS     R12,R2,R12
   \       0x34   0xE58C'3004        STR      R3,[R12, #+4]
    106          
    107          	SMC->SMC_CS[cs].SMC_CYCLE =
    108          		SMC_CYCLE_NWE_CYCLE(11) |
    109          		SMC_CYCLE_NRD_CYCLE(14);
   \       0x38   0xE3A0'300B        MOV      R3,#+11
   \       0x3C   0xE383'3AE0        ORR      R3,R3,#0xE0000
   \       0x40   0xE1B0'C000        MOVS     R12,R0
   \       0x44   0xE21C'C0FF        ANDS     R12,R12,#0xFF    ;; Zero extend
   \       0x48   0xE1B0'C20C        LSLS     R12,R12,#+4
   \       0x4C   0xE092'C00C        ADDS     R12,R2,R12
   \       0x50   0xE58C'3008        STR      R3,[R12, #+8]
    110          
    111          #ifdef SMC_TIMINGS_NFSEL
    112          	SMC->SMC_CS[cs].SMC_TIMINGS = 0;
    113          #endif
    114          
    115          	SMC->SMC_CS[cs].SMC_MODE =
    116          		SMC_MODE_READ_MODE |
    117          		SMC_MODE_WRITE_MODE |
    118          		(bus_width == 8 ? SMC_MODE_DBW_BIT_8 : SMC_MODE_DBW_BIT_16) |
    119          		SMC_MODE_EXNW_MODE_DISABLED |
    120          		SMC_MODE_TDF_CYCLES(1);
   \       0x54   0xE1B0'3001        MOVS     R3,R1
   \       0x58   0xE213'30FF        ANDS     R3,R3,#0xFF      ;; Zero extend
   \       0x5C   0xE353'0008        CMP      R3,#+8
   \       0x60   0x1A00'0001        BNE      ??smc_nor_configure_0
   \       0x64   0xE3A0'3000        MOV      R3,#+0
   \       0x68   0xEA00'0000        B        ??smc_nor_configure_1
   \                     ??smc_nor_configure_0:
   \       0x6C   0xE3A0'3D40        MOV      R3,#+4096
   \                     ??smc_nor_configure_1:
   \       0x70   0xE393'3003        ORRS     R3,R3,#0x3
   \       0x74   0xE393'3B40        ORRS     R3,R3,#0x10000
   \       0x78   0xE1B0'C000        MOVS     R12,R0
   \       0x7C   0xE21C'C0FF        ANDS     R12,R12,#0xFF    ;; Zero extend
   \       0x80   0xE1B0'C20C        LSLS     R12,R12,#+4
   \       0x84   0xE092'200C        ADDS     R2,R2,R12
   \       0x88   0xE582'300C        STR      R3,[R2, #+12]
    121          }
   \       0x8C   0xE12F'FF1E        BX       LR               ;; return

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable1:
   \        0x0   0x0202'0202        DC32     0x2020202

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable1_1:
   \        0x0   0x0707'0707        DC32     0x7070707

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable1_2:
   \        0x0   0x0B0B'0A0A        DC32     0xb0b0a0a
    122          
    123          #ifdef CONFIG_HAVE_SMC_SCRAMBLING
    124          
    125          void smc_scrambling_set_key(uint32_t key1, uint32_t key2)
    126          {
    127          	SMC->SMC_KEY1 = key1;
    128          	SMC->SMC_KEY2 = key2;
    129          }
    130          
    131          void smc_scrambling_enable(void)
    132          {
    133          	SMC->SMC_OCMS |= SMC_OCMS_SMSE;
    134          }
    135          
    136          void smc_scrambling_disable(void)
    137          {
    138          	SMC->SMC_OCMS &= ~SMC_OCMS_SMSE;
    139          }
    140          
    141          bool smc_scrambling_is_enabled(void)
    142          {
    143          	return SMC->SMC_OCMS & SMC_OCMS_SMSE;
    144          }
    145          
    146          #endif /* CONFIG_HAVE_SMC_SCRAMBLING */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   smc_nand_configure
       0   smc_nor_configure


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
     104  smc_nand_configure
     144  smc_nor_configure

 
 260 bytes in section SOFTPACK
 
 260 bytes of CODE memory

Errors: none
Warnings: none
