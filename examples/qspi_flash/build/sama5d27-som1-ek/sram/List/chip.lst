###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         18/Feb/2021  16:03:14
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode             
#    Endian            =  little
#    Source file       =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\target\sama5d2\chip.c
#    Command line      =
#        -f C:\Users\c40450\AppData\Local\Temp\EWA060.tmp
#        (C:\work\AtmelSoftPAck\atmel-software-package-2.17\target\sama5d2\chip.c
#        -D "SOFTPACK_VERSION=\"2.17\"" -D TRACE_LEVEL=5 -D VARIANT_SRAM -D
#        CONFIG_ARCH_ARMV7A -D CONFIG_ARCH_ARM -D CONFIG_SOC_SAMA5D2 -D
#        CONFIG_CHIP_SAMA5D27 -D CONFIG_PACKAGE_289PIN -D
#        CONFIG_BOARD_SAMA5D27_SOM1_EK -D CONFIG_HAVE_AIC5 -D
#        CONFIG_HAVE_FLEXCOM -D CONFIG_HAVE_PIO4 -D CONFIG_HAVE_PIO4_SECURE -D
#        CONFIG_HAVE_QSPI -D CONFIG_HAVE_QSPI_DMA -D CONFIG_HAVE_NFC -D
#        CONFIG_HAVE_PIT -D CONFIG_HAVE_SMC -D CONFIG_HAVE_SMC_SCRAMBLING -D
#        CONFIG_HAVE_GMAC_QUEUES -D CONFIG_HAVE_MPDDRC -D
#        CONFIG_HAVE_MPDDRC_DATA_PATH -D CONFIG_HAVE_MPDDRC_IO_CALIBRATION -D
#        CONFIG_HAVE_MPDDRC_DDR2 -D CONFIG_HAVE_MPDDRC_LPDDR2 -D
#        CONFIG_HAVE_MPDDRC_DDR3 -D CONFIG_HAVE_MPDDRC_LPDDR3 -D
#        CONFIG_HAVE_ADC_SETTLING_TIME -D CONFIG_HAVE_ADC_DIFF_INPUT -D
#        CONFIG_HAVE_ADC_SEQ_R2 -D CONFIG_HAVE_PMC_FAST_STARTUP -D
#        CONFIG_HAVE_PMC_GENERATED_CLOCKS -D CONFIG_HAVE_PMC_AUDIO_CLOCK -D
#        CONFIG_HAVE_PMC_PLLADIV2 -D CONFIG_HAVE_PMC_H32MXDIV -D
#        CONFIG_HAVE_PMC_UPLL_BIAS -D CONFIG_HAVE_SCKC -D CONFIG_HAVE_PWMC_DMA
#        -D CONFIG_HAVE_PWMC_SPREAD_SPECTRUM -D
#        CONFIG_HAVE_PWMC_EXTERNAL_TRIGGER -D CONFIG_HAVE_PWMC_FAULT_PROT_HIZ
#        -D CONFIG_HAVE_PWMC_STEPPER_MOTOR -D CONFIG_HAVE_PWMC_CMP_UNIT -D
#        CONFIG_HAVE_PWMC_SYNC_MODE -D CONFIG_HAVE_PWMC_OOV -D
#        CONFIG_HAVE_PWMC_FMODE -D CONFIG_HAVE_PWMC_WP -D
#        CONFIG_HAVE_PWMC_DTIME -D CONFIG_HAVE_PWMC_ELINE -D CONFIG_HAVE_SFRBU
#        -D CONFIG_HAVE_L2CC -D CONFIG_HAVE_SAIC -D CONFIG_HAVE_XDMAC -D
#        CONFIG_HAVE_XDMAC_DATA_WIDTH_DWORD -D CONFIG_HAVE_TRNG -D
#        CONFIG_HAVE_SECUMOD -D CONFIG_HAVE_SFC -D CONFIG_HAVE_PWMC -D
#        CONFIG_HAVE_SECURE_MATRIX -D CONFIG_HAVE_DDR2_W971GG6SB -D
#        CONFIG_HAVE_RSTC_CONFIGURABLE_USER_RESET -D CONFIG_HAVE_TC_FAULT_MODE
#        -D CONFIG_HAVE_TC_DMA_MODE -D CONFIG_HAVE_RTC_CALIBRATION -D
#        CONFIG_HAVE_RTC_MODE_PERSIAN -D CONFIG_HAVE_RTC_MODE_UTC -D
#        CONFIG_HAVE_RTC_TAMPER -D CONFIG_HAVE_SHDWC -D CONFIG_HAVE_SPI -D
#        CONFIG_HAVE_SPI_FIFO -D CONFIG_HAVE_SPI_NOR -D CONFIG_HAVE_MMU -D
#        CONFIG_HAVE_L1CACHE -D CONFIG_HAVE_L2CACHE -D CONFIG_HAVE_SPI_BUS -D
#        CONFIG_HAVE_UART -D CONFIG_HAVE_SERIALD_UART -D CONFIG_HAVE_USART -D
#        CONFIG_HAVE_USART_FIFO --preprocess
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\build\sama5d27-som1-ek\sram\List
#        -lC
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\build\sama5d27-som1-ek\sram\List
#        --diag_suppress Pa050 -o
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\build\sama5d27-som1-ek\sram\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-A5 -e --fpu=VFPv4_D16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\arch\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\utils\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\target\common\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\target\sama5d2\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\drivers\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\lib\
#        --section .text=SOFTPACK --cpu_mode arm -On)
#    Locale            =  C
#    List file         =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\build\sama5d27-som1-ek\sram\List\chip.lst
#    Object file       =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\build\sama5d27-som1-ek\sram\Obj\chip.o
#    Runtime model:       
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\work\AtmelSoftPAck\atmel-software-package-2.17\target\sama5d2\chip.c
      1          /* ----------------------------------------------------------------------------
      2           *         SAM Software Package License
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2014, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /*----------------------------------------------------------------------------
     31           *        Headers
     32           *----------------------------------------------------------------------------*/
     33          
     34          #include <assert.h>
     35          #include <string.h>
     36          
     37          #include "chip.h"
     38          #include "compiler.h"
     39          #include "nvm/sfc.h"
     40          #include "peripherals/matrix.h"
     41          #include "serial/console.h"
     42          
     43          /*----------------------------------------------------------------------------
     44           *        Definitions
     45           *----------------------------------------------------------------------------*/
     46          
     47          struct chipid {
     48          	uint32_t    exid; /**< EXID */
     49          	const char* name; /**< Chip Name */
     50          };
     51          
     52          struct peripheral_xdma {
     53          	uint32_t id;   /**< Peripheral ID */
     54          	uint8_t  iftx; /**< DMA Interface for TX */
     55          	uint8_t  ifrx; /**< DMA Interface for RX */
     56          };
     57          
     58          /*----------------------------------------------------------------------------
     59           *        Local constants
     60           *----------------------------------------------------------------------------*/
     61          

   \                                 In section .rodata, align 4
     62          static const struct chipid _exid_names[] = {
   \                     _exid_names:
   \        0x0   0x0000'005A        DC32 90, ?_0, 89, ?_1, 105, ?_2, 88, ?_3, 4, ?_4, 20, ?_5, 18, ?_6, 17

   \              0x....'....  

   \              0x0000'0059  

   \              0x....'....  

   \              0x0000'0069  

   \              0x....'....  

   \              0x0000'0058  

   \              0x....'....  

   \              0x0000'0004  

   \              0x....'....  

   \              0x0000'0014  

   \              0x....'....  

   \              0x0000'0012  

   \              0x....'....  

   \              0x0000'0011
   \       0x3C   0x....'....        DC32 ?_7, 33, ?_8, 16, ?_9, 32, ?_10, 83, ?_11, 50, ?_12, 51, ?_13, 19

   \              0x0000'0021  

   \              0x....'....  

   \              0x0000'0010  

   \              0x....'....  

   \              0x0000'0020  

   \              0x....'....  

   \              0x0000'0053  

   \              0x....'....  

   \              0x0000'0032  

   \              0x....'....  

   \              0x0000'0033  

   \              0x....'....  

   \              0x0000'0013
   \       0x74   0x....'....        DC32 ?_14
     63          	{ CHIPID_EXID_SAMA5D21_CU, "SAMA5D21-CU" },
     64          	{ CHIPID_EXID_SAMA5D22_CU, "SAMA5D22-CU" },
     65          	{ CHIPID_EXID_SAMA5D22_CN, "SAMA5D22-CN" },
     66          	{ CHIPID_EXID_SAMA5D23_CU, "SAMA5D23-CU" },
     67          	{ CHIPID_EXID_SAMA5D24_CX, "SAMA5D24-CX" },
     68          	{ CHIPID_EXID_SAMA5D24_CU, "SAMA5D24-CU" },
     69          	{ CHIPID_EXID_SAMA5D26_CU, "SAMA5D26-CU" },
     70          	{ CHIPID_EXID_SAMA5D27_CU, "SAMA5D27-CU" },
     71          	{ CHIPID_EXID_SAMA5D27_CN, "SAMA5D27-CN" },
     72          	{ CHIPID_EXID_SAMA5D28_CU, "SAMA5D28-CU" },
     73          	{ CHIPID_EXID_SAMA5D28_CN, "SAMA5D28-CN" },
     74          	{ CHIPID_EXID_SAMA5D225_D1M, "SAMA5D225-D1M" },
     75          	{ CHIPID_EXID_SAMA5D27_D5M, "SAMA5D27-D5M" },
     76          	{ CHIPID_EXID_SAMA5D27_D1G, "SAMA5D27-D1G" },
     77          	{ CHIPID_EXID_SAMA5D28_D1G, "SAMA5D28-D1G" },
     78          };
     79          
     80          /* default console used by ROM-code */

   \                                 In section .rodata, align 4
     81          static const struct _console_cfg _console_cfg[] = {
   \                     _console_cfg:
   \        0x0   0xF802'0000        DC32 0xf802'0000, 115'200

   \              0x0001'C200
   \        0x8   0x03 0x00          DC8 3, 0, 0, 0

   \              0x00 0x00
   \        0xC   0x0000'0008        DC32 8
   \       0x10   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \       0x14   0x0000'0000        DC32 0
   \       0x18   0x03 0x00          DC8 3, 0, 0, 0

   \              0x00 0x00
   \       0x1C   0x0000'0004        DC32 4
   \       0x20   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \       0x24   0x0000'0000        DC32 0, 0xf801'c000, 115'200

   \              0xF801'C000  

   \              0x0001'C200
   \       0x30   0x01 0x00          DC8 1, 0, 0, 0

   \              0x00 0x00
   \       0x34   0x0800'0000        DC32 134'217'728
   \       0x38   0x02 0x00          DC8 2, 0, 0, 0

   \              0x00 0x00
   \       0x3C   0x0000'0000        DC32 0
   \       0x40   0x01 0x00          DC8 1, 0, 0, 0

   \              0x00 0x00
   \       0x44   0x0400'0000        DC32 67'108'864
   \       0x48   0x02 0x00          DC8 2, 0, 0, 0

   \              0x00 0x00
   \       0x4C   0x0000'0000        DC32 0, 0xf802'0000, 115'200

   \              0xF802'0000  

   \              0x0001'C200
   \       0x58   0x02 0x00          DC8 2, 0, 0, 0

   \              0x00 0x00
   \       0x5C   0x0000'0100        DC32 256
   \       0x60   0x04 0x00          DC8 4, 0, 0, 0

   \              0x00 0x00
   \       0x64   0x0000'0000        DC32 0
   \       0x68   0x02 0x00          DC8 2, 0, 0, 0

   \              0x00 0x00
   \       0x6C   0x0000'0080        DC32 128
   \       0x70   0x04 0x00          DC8 4, 0, 0, 0

   \              0x00 0x00
   \       0x74   0x0000'0000        DC32 0, 0xf802'4000, 115'200

   \              0xF802'4000  

   \              0x0001'C200
   \       0x80   0x03 0x00          DC8 3, 0, 0, 0

   \              0x00 0x00
   \       0x84   0x0000'0020        DC32 32
   \       0x88   0x01 0x00          DC8 1, 0, 0, 0

   \              0x00 0x00
   \       0x8C   0x0000'0000        DC32 0
   \       0x90   0x03 0x00          DC8 3, 0, 0, 0

   \              0x00 0x00
   \       0x94   0x0000'0010        DC32 16
   \       0x98   0x01 0x00          DC8 1, 0, 0, 0

   \              0x00 0x00
   \       0x9C   0x0000'0000        DC32 0, 0xf802'4000, 115'200

   \              0xF802'4000  

   \              0x0001'C200
   \       0xA8   0x03 0x00          DC8 3, 0, 0, 0

   \              0x00 0x00
   \       0xAC   0x0100'0000        DC32 16'777'216
   \       0xB0   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \       0xB4   0x0000'0000        DC32 0
   \       0xB8   0x03 0x00          DC8 3, 0, 0, 0

   \              0x00 0x00
   \       0xBC   0x0080'0000        DC32 8'388'608
   \       0xC0   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \       0xC4   0x0000'0000        DC32 0, 0xf802'4000, 115'200

   \              0xF802'4000  

   \              0x0001'C200
   \       0xD0   0x03 0x00          DC8 3, 0, 0, 0

   \              0x00 0x00
   \       0xD4   0x0010'0000        DC32 1'048'576
   \       0xD8   0x02 0x00          DC8 2, 0, 0, 0

   \              0x00 0x00
   \       0xDC   0x0000'0000        DC32 0
   \       0xE0   0x03 0x00          DC8 3, 0, 0, 0

   \              0x00 0x00
   \       0xE4   0x0008'0000        DC32 524'288
   \       0xE8   0x02 0x00          DC8 2, 0, 0, 0

   \              0x00 0x00
   \       0xEC   0x0000'0000        DC32 0, 0xfc00'8000, 115'200

   \              0xFC00'8000  

   \              0x0001'C200
   \       0xF8   0x02 0x00          DC8 2, 0, 0, 0

   \              0x00 0x00
   \       0xFC   0x0000'2000        DC32 8'192
   \      0x100   0x03 0x00          DC8 3, 0, 0, 0

   \              0x00 0x00
   \      0x104   0x0000'0000        DC32 0
   \      0x108   0x02 0x00          DC8 2, 0, 0, 0

   \              0x00 0x00
   \      0x10C   0x0000'1000        DC32 4'096
   \      0x110   0x03 0x00          DC8 3, 0, 0, 0

   \              0x00 0x00
   \      0x114   0x0000'0000        DC32 0, 0xfc00'8000, 115'200

   \              0xFC00'8000  

   \              0x0001'C200
   \      0x120   0x03 0x00          DC8 3, 0, 0, 0

   \              0x00 0x00
   \      0x124   0x0000'0001        DC32 1
   \      0x128   0x02 0x00          DC8 2, 0, 0, 0

   \              0x00 0x00
   \      0x12C   0x0000'0000        DC32 0
   \      0x130   0x03 0x00          DC8 3, 0, 0, 0

   \              0x00 0x00
   \      0x134   0x8000'0000        DC32 2'147'483'648
   \      0x138   0x02 0x00          DC8 2, 0, 0, 0

   \              0x00 0x00
   \      0x13C   0x0000'0000        DC32 0, 0xfc00'8000, 115'200

   \              0xFC00'8000  

   \              0x0001'C200
   \      0x148   0x01 0x00          DC8 1, 0, 0, 0

   \              0x00 0x00
   \      0x14C   0x0000'1000        DC32 4'096
   \      0x150   0x02 0x00          DC8 2, 0, 0, 0

   \              0x00 0x00
   \      0x154   0x0000'0000        DC32 0
   \      0x158   0x01 0x00          DC8 1, 0, 0, 0

   \              0x00 0x00
   \      0x15C   0x0000'0800        DC32 2'048
   \      0x160   0x02 0x00          DC8 2, 0, 0, 0

   \              0x00 0x00
   \      0x164   0x0000'0000        DC32 0, 0xfc00'c000, 115'200

   \              0xFC00'C000  

   \              0x0001'C200
   \      0x170   0x01 0x00          DC8 1, 0, 0, 0

   \              0x00 0x00
   \      0x174   0x0000'0010        DC32 16
   \      0x178   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \      0x17C   0x0000'0000        DC32 0
   \      0x180   0x01 0x00          DC8 1, 0, 0, 0

   \              0x00 0x00
   \      0x184   0x0000'0008        DC32 8
   \      0x188   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \      0x18C   0x0000'0000        DC32 0
     82          	{ UART1, 115200, PIN_UART1_TXD_IOS1, PIN_UART1_RXD_IOS1 },
     83          	{ UART0, 115200, PIN_UART0_TXD_IOS1, PIN_UART0_RXD_IOS1 },
     84          	{ UART1, 115200, PIN_UART1_TXD_IOS2, PIN_UART1_RXD_IOS2 },
     85          	{ UART2, 115200, PIN_UART2_TXD_IOS1, PIN_UART2_RXD_IOS1 },
     86          	{ UART2, 115200, PIN_UART2_TXD_IOS2, PIN_UART2_RXD_IOS2 },
     87          	{ UART2, 115200, PIN_UART2_TXD_IOS3, PIN_UART2_RXD_IOS3 },
     88          	{ UART3, 115200, PIN_UART3_TXD_IOS1, PIN_UART3_RXD_IOS1 },
     89          	{ UART3, 115200, PIN_UART3_TXD_IOS2, PIN_UART3_RXD_IOS2 },
     90          	{ UART3, 115200, PIN_UART3_TXD_IOS3, PIN_UART3_RXD_IOS3 },
     91          	{ UART4, 115200, PIN_UART4_TXD_IOS1, PIN_UART4_RXD_IOS1 },
     92          };
     93          

   \                                 In section .rodata, align 4
     94          static const uint8_t _h64_peripherals[] = {
   \                     _h64_peripherals:
   \        0x0   0x02 0x06          DC8 2, 6, 7, 9, 10, 12, 13, 15, 31, 32, 45, 46, 52, 53, 63, 0

   \              0x07 0x09    

   \              0x0A 0x0C    

   \              0x0D 0x0F    

   \              0x1F 0x20    

   \              0x2D 0x2E    

   \              0x34 0x35    

   \              0x3F 0x00
     95          	ID_ARM_PMU, /*  2: Performance Monitor Unit (PMU) (ARM_PMU) */
     96          	ID_XDMAC0,  /*  6: DMA Controller 0 (XDMAC0) */
     97          	ID_XDMAC1,  /*  7: DMA Controller 1 (XDMAC1) */
     98          	ID_AES,     /*  9: Advanced Enion Standard (AES) */
     99          	ID_AESB,    /* 10: AES bridge (AESB) */
    100          	ID_SHA,     /* 12: SHA Signature (SHA) */
    101          	ID_MPDDRC,  /* 13: MPDDR controller (MPDDRC) */
    102          	ID_MATRIX0, /* 15: H64MX, 64-bit AHB Matrix (MATRIX0) */
    103          	ID_SDMMC0,  /* 31: Secure Digital Multimedia Card Controller 0 (SDMMC0) */
    104          	ID_SDMMC1,  /* 32: Secure Digital Multimedia Card Controller 1 (SDMMC1) */
    105          	ID_LCDC,    /* 45: LCD Controller (LCDC) */
    106          	ID_ISC,     /* 46: Camera Interface (ISC) */
    107          	ID_QSPI0,   /* 52: QSPI 0 (QSPI0) */
    108          	ID_QSPI1,   /* 53: QSPI 1 (QSPI1) */
    109          	ID_L2CC,    /* 63: L2 Cache Controller (L2CC) */
    110          };
    111          

   \                                 In section .rodata, align 4
    112          static const struct peripheral_xdma _xdmac_peripherals[] = {
   \                     _xdmac_peripherals:
   \        0x0   0x0000'001D        DC32 29
   \        0x4   0x00 0x01          DC8 0, 1, 0, 0

   \              0x00 0x00
   \        0x8   0x0000'001E        DC32 30
   \        0xC   0x02 0x03          DC8 2, 3, 0, 0

   \              0x00 0x00
   \       0x10   0x0000'0034        DC32 52
   \       0x14   0x04 0x05          DC8 4, 5, 0, 0

   \              0x00 0x00
   \       0x18   0x0000'0021        DC32 33
   \       0x1C   0x06 0x07          DC8 6, 7, 0, 0

   \              0x00 0x00
   \       0x20   0x0000'0022        DC32 34
   \       0x24   0x08 0x09          DC8 8, 9, 0, 0

   \              0x00 0x00
   \       0x28   0x0000'0026        DC32 38
   \       0x2C   0x0A 0xFF          DC8 10, 255, 0, 0

   \              0x00 0x00
   \       0x30   0x0000'0013        DC32 19
   \       0x34   0x0B 0x0C          DC8 11, 12, 0, 0

   \              0x00 0x00
   \       0x38   0x0000'0014        DC32 20
   \       0x3C   0x0D 0x0E          DC8 13, 14, 0, 0

   \              0x00 0x00
   \       0x40   0x0000'0015        DC32 21
   \       0x44   0x0F 0x10          DC8 15, 16, 0, 0

   \              0x00 0x00
   \       0x48   0x0000'0016        DC32 22
   \       0x4C   0x11 0x12          DC8 17, 18, 0, 0

   \              0x00 0x00
   \       0x50   0x0000'0017        DC32 23
   \       0x54   0x13 0x14          DC8 19, 20, 0, 0

   \              0x00 0x00
   \       0x58   0x0000'002B        DC32 43
   \       0x5C   0x15 0x16          DC8 21, 22, 0, 0

   \              0x00 0x00
   \       0x60   0x0000'002C        DC32 44
   \       0x64   0x17 0x18          DC8 23, 24, 0, 0

   \              0x00 0x00
   \       0x68   0x0000'0028        DC32 40
   \       0x6C   0xFF 0x19          DC8 255, 25, 0, 0

   \              0x00 0x00
   \       0x70   0x0000'0009        DC32 9
   \       0x74   0x1A 0x1B          DC8 26, 27, 0, 0

   \              0x00 0x00
   \       0x78   0x0000'000B        DC32 11
   \       0x7C   0x1C 0x1D          DC8 28, 29, 0, 0

   \              0x00 0x00
   \       0x80   0x0000'000C        DC32 12
   \       0x84   0x1E 0xFF          DC8 30, 255, 0, 0

   \              0x00 0x00
   \       0x88   0x0000'0036        DC32 54
   \       0x8C   0x1F 0x20          DC8 31, 32, 0, 0

   \              0x00 0x00
   \       0x90   0x0000'0037        DC32 55
   \       0x94   0x21 0x22          DC8 33, 34, 0, 0

   \              0x00 0x00
   \       0x98   0x0000'0018        DC32 24
   \       0x9C   0x23 0x24          DC8 35, 36, 0, 0

   \              0x00 0x00
   \       0xA0   0x0000'0019        DC32 25
   \       0xA4   0x25 0x26          DC8 37, 38, 0, 0

   \              0x00 0x00
   \       0xA8   0x0000'001A        DC32 26
   \       0xAC   0x27 0x28          DC8 39, 40, 0, 0

   \              0x00 0x00
   \       0xB0   0x0000'001B        DC32 27
   \       0xB4   0x29 0x2A          DC8 41, 42, 0, 0

   \              0x00 0x00
   \       0xB8   0x0000'001C        DC32 28
   \       0xBC   0x2B 0x2C          DC8 43, 44, 0, 0

   \              0x00 0x00
   \       0xC0   0x0000'0023        DC32 35
   \       0xC4   0xFF 0x2D          DC8 255, 45, 0, 0

   \              0x00 0x00
   \       0xC8   0x0000'0024        DC32 36
   \       0xCC   0xFF 0x2E          DC8 255, 46, 0, 0

   \              0x00 0x00
   \       0xD0   0x0000'003B        DC32 59
   \       0xD4   0x2F 0xFF          DC8 47, 255, 0, 0

   \              0x00 0x00
   \       0xD8   0x0000'0034        DC32 52
   \       0xDC   0x30 0x31          DC8 48, 49, 0, 0

   \              0x00 0x00
   \       0xE0   0x0000'0030        DC32 48
   \       0xE4   0xFF 0x32          DC8 255, 50, 0, 0

   \              0x00 0x00
    113          	{ ID_TWI0,        0,    1 },
    114          	{ ID_TWI1,        2,    3 },
    115          	{ ID_QSPI0,       4,    5 },
    116          	{ ID_SPI0,        6,    7 },
    117          	{ ID_SPI1,        8,    9 },
    118          	{ ID_PWM0,       10, 0xff },
    119          	{ ID_FLEXCOM0,   11,   12 },
    120          	{ ID_FLEXCOM1,   13,   14 },
    121          	{ ID_FLEXCOM2,   15,   16 },
    122          	{ ID_FLEXCOM3,   17,   18 },
    123          	{ ID_FLEXCOM4,   19,   20 },
    124          	{ ID_SSC0,       21,   22 },
    125          	{ ID_SSC1,       23,   24 },
    126          	{ ID_ADC,      0xff,   25 },
    127          	{ ID_AES,        26,   27 },
    128          	{ ID_TDES,       28,   29 },
    129          	{ ID_SHA,        30, 0xff },
    130          	{ ID_I2SC0,      31,   32 },
    131          	{ ID_I2SC1,      33,   34 },
    132          	{ ID_UART0,      35,   36 },
    133          	{ ID_UART1,      37,   38 },
    134          	{ ID_UART2,      39,   40 },
    135          	{ ID_UART3,      41,   42 },
    136          	{ ID_UART4,      43,   44 },
    137          	{ ID_TC0,      0xff,   45 },
    138          	{ ID_TC1,      0xff,   46 },
    139          	{ ID_CLASSD0,    47, 0xff },
    140          	{ ID_QSPI0,      48,   49 },
    141          	{ ID_PDMIC0,   0xff,   50 },
    142          };
    143          
    144          /*----------------------------------------------------------------------------
    145           *        Private functions
    146           *----------------------------------------------------------------------------*/
    147          

   \                                 In section SOFTPACK, align 4, keep-with-next
    148          static const struct peripheral_xdma *get_peripheral_xdma(uint32_t id, Xdmac *xdmac)
    149          {
   \                     get_peripheral_xdma:
   \        0x0   0xE1B0'2000        MOVS     R2,R0
    150          	int i;
    151          
    152          	if (xdmac != XDMAC0 && xdmac != XDMAC1) {
   \        0x4   0xE3A0'04F0        MOV      R0,#-268435456
   \        0x8   0xE380'0B40        ORR      R0,R0,#0x10000
   \        0xC   0xE151'0000        CMP      R1,R0
   \       0x10   0x0A00'0005        BEQ      ??get_peripheral_xdma_0
   \       0x14   0xE3A0'04F0        MOV      R0,#-268435456
   \       0x18   0xE380'0C40        ORR      R0,R0,#0x4000
   \       0x1C   0xE151'0000        CMP      R1,R0
   \       0x20   0x0A00'0001        BEQ      ??get_peripheral_xdma_0
    153          		return NULL;
   \       0x24   0xE3A0'0000        MOV      R0,#+0
   \       0x28   0xEA00'000D        B        ??get_peripheral_xdma_1
    154          	}
    155          
    156          	for (i = 0; i < ARRAY_SIZE(_xdmac_peripherals); i++) {
   \                     ??get_peripheral_xdma_0:
   \       0x2C   0xE3A0'3000        MOV      R3,#+0
   \                     ??get_peripheral_xdma_2:
   \       0x30   0xE353'001D        CMP      R3,#+29
   \       0x34   0x2A00'0009        BCS      ??get_peripheral_xdma_3
    157          		if (_xdmac_peripherals[i].id == id) {
   \       0x38   0x....'....        LDR      R0,??DataTable6
   \       0x3C   0xE1B0'C183        LSLS     R12,R3,#+3
   \       0x40   0xE790'C00C        LDR      R12,[R0, +R12]
   \       0x44   0xE15C'0002        CMP      R12,R2
   \       0x48   0x1A00'0002        BNE      ??get_peripheral_xdma_4
    158          			return &_xdmac_peripherals[i];
   \       0x4C   0xE1B0'3183        LSLS     R3,R3,#+3
   \       0x50   0xE090'0003        ADDS     R0,R0,R3
   \       0x54   0xEA00'0002        B        ??get_peripheral_xdma_1
    159          		}
    160          	}
   \                     ??get_peripheral_xdma_4:
   \       0x58   0xE293'3001        ADDS     R3,R3,#+1
   \       0x5C   0xEAFF'FFF3        B        ??get_peripheral_xdma_2
    161          
    162          	return NULL;
   \                     ??get_peripheral_xdma_3:
   \       0x60   0xE3A0'0000        MOV      R0,#+0
   \                     ??get_peripheral_xdma_1:
   \       0x64   0xE12F'FF1E        BX       LR               ;; return
    163          }
    164          
    165          /*----------------------------------------------------------------------------
    166           *        Exported functions
    167           *----------------------------------------------------------------------------*/
    168          

   \                                 In section SOFTPACK, align 4, keep-with-next
    169          const char* get_chip_name(void)
    170          {
    171          	int i;
    172          
    173          	if ((CHIPID->CHIPID_CIDR & ~CHIPID_CIDR_VERSION_Msk) ==
    174          			CHIPID_CIDR_SAMA5D2) {
   \                     get_chip_name:
   \        0x0   0xE3A0'04FC        MOV      R0,#-67108864
   \        0x4   0xE380'0A69        ORR      R0,R0,#0x69000
   \        0x8   0xE590'0000        LDR      R0,[R0, #+0]
   \        0xC   0xE1B0'02A0        LSRS     R0,R0,#+5
   \       0x10   0x....'....        LDR      R2,??DataTable6_1  ;; 0x8a5c08c0
   \       0x14   0xE152'0280        CMP      R2,R0, LSL #+5
   \       0x18   0x1A00'0010        BNE      ??get_chip_name_0
    175          		uint32_t exid = CHIPID->CHIPID_EXID;
   \       0x1C   0x....'....        LDR      R0,??DataTable6_2  ;; 0xfc069004
   \       0x20   0xE590'2000        LDR      R2,[R0, #+0]
    176          		for (i = 0; i < ARRAY_SIZE(_exid_names); i++) {
   \       0x24   0xE3A0'0000        MOV      R0,#+0
   \       0x28   0xE1B0'1000        MOVS     R1,R0
   \                     ??get_chip_name_1:
   \       0x2C   0xE351'000F        CMP      R1,#+15
   \       0x30   0x2A00'000A        BCS      ??get_chip_name_0
    177          			if (_exid_names[i].exid == exid)
   \       0x34   0x....'....        LDR      R0,??DataTable6_3
   \       0x38   0xE1B0'3181        LSLS     R3,R1,#+3
   \       0x3C   0xE790'3003        LDR      R3,[R0, +R3]
   \       0x40   0xE153'0002        CMP      R3,R2
   \       0x44   0x1A00'0003        BNE      ??get_chip_name_2
    178          				return _exid_names[i].name;
   \       0x48   0xE1B0'1181        LSLS     R1,R1,#+3
   \       0x4C   0xE090'0001        ADDS     R0,R0,R1
   \       0x50   0xE590'0004        LDR      R0,[R0, #+4]
   \       0x54   0xEA00'0002        B        ??get_chip_name_3
    179          		}
   \                     ??get_chip_name_2:
   \       0x58   0xE291'1001        ADDS     R1,R1,#+1
   \       0x5C   0xEAFF'FFF2        B        ??get_chip_name_1
    180          	}
    181          
    182          	return "Unknown";
   \                     ??get_chip_name_0:
   \       0x60   0x....'....        LDR      R0,??DataTable6_4
   \                     ??get_chip_name_3:
   \       0x64   0xE12F'FF1E        BX       LR               ;; return
    183          }
    184          

   \                                 In section SOFTPACK, align 4, keep-with-next
    185          void get_romcode_console(struct _console_cfg* config)
    186          {
   \                     get_romcode_console:
   \        0x0   0xE92D'43F8        PUSH     {R3-R9,LR}
   \        0x4   0xE1B0'4000        MOVS     R4,R0
    187          	uint32_t bcw;
    188          	uint32_t console;
    189          
    190          	/* read boot config word from fuse */
    191          	bcw = sfc_read(16);
   \        0x8   0xE3A0'0010        MOV      R0,#+16
   \        0xC   0x....'....        BL       sfc_read
   \       0x10   0xE1B0'5000        MOVS     R5,R0
    192          
    193          	/* if BSCR is not disabled and BUREG index is valid, use BUREG */
    194          	if ((bcw & BCW_DISABLE_BSCR) == 0) {
   \       0x14   0xE315'0840        TST      R5,#0x400000
   \       0x18   0x1A00'0008        BNE      ??get_romcode_console_0
    195          		uint32_t bsc_cr = BSC->BSC_CR;
   \       0x1C   0x....'....        LDR      R0,??DataTable6_5  ;; 0xf8048054
   \       0x20   0xE590'0000        LDR      R0,[R0, #+0]
    196          		if (bsc_cr & BSC_CR_BUREG_VALID) {
   \       0x24   0xE310'0004        TST      R0,#0x4
   \       0x28   0x0A00'0004        BEQ      ??get_romcode_console_0
    197          			uint32_t index = (bsc_cr & BSC_CR_BUREG_INDEX_Msk) >> BSC_CR_BUREG_INDEX_Pos;
   \       0x2C   0xE210'1003        ANDS     R1,R0,#0x3
    198          			bcw = SECURAM->BUREG[index];
   \       0x30   0x....'....        LDR      R2,??DataTable6_6  ;; 0xf8045400
   \       0x34   0xE1B0'1101        LSLS     R1,R1,#+2
   \       0x38   0xE792'1001        LDR      R1,[R2, +R1]
   \       0x3C   0xE1B0'5001        MOVS     R5,R1
    199          		}
    200          	}
    201          
    202          	/* configure console */
    203          	console = (bcw & BCW_UART_CONSOLE_Msk) >> BCW_UART_CONSOLE_Pos;
   \                     ??get_romcode_console_0:
   \       0x40   0xE7E3'6655        UBFX     R6,R5,#+12,#+4
    204          	if (console < ARRAY_SIZE(_console_cfg))
   \       0x44   0xE356'000A        CMP      R6,#+10
   \       0x48   0x2A00'000A        BCS      ??get_romcode_console_1
    205          		memcpy(config, &_console_cfg[console], sizeof(*config));
   \       0x4C   0xE3A0'7028        MOV      R7,#+40
   \       0x50   0x....'....        LDR      R0,??DataTable6_7
   \       0x54   0xE086'1106        ADD      R1,R6,R6, LSL #+2
   \       0x58   0xE090'8181        ADDS     R8,R0,R1, LSL #+3
   \       0x5C   0xE1B0'9004        MOVS     R9,R4
   \       0x60   0xE1B0'2007        MOVS     R2,R7
   \       0x64   0xE1B0'1008        MOVS     R1,R8
   \       0x68   0xE1B0'0009        MOVS     R0,R9
   \       0x6C   0x....'....        BL       __aeabi_memcpy
   \       0x70   0xE1B0'0009        MOVS     R0,R9
   \       0x74   0xEA00'0007        B        ??get_romcode_console_2
    206          	else
    207          		memset(config, 0, sizeof(*config));
   \                     ??get_romcode_console_1:
   \       0x78   0xE3A0'7028        MOV      R7,#+40
   \       0x7C   0xE3A0'8000        MOV      R8,#+0
   \       0x80   0xE1B0'9004        MOVS     R9,R4
   \       0x84   0xE1B0'2008        MOVS     R2,R8
   \       0x88   0xE1B0'1007        MOVS     R1,R7
   \       0x8C   0xE1B0'0009        MOVS     R0,R9
   \       0x90   0x....'....        BL       __aeabi_memset
   \       0x94   0xE1B0'0009        MOVS     R0,R9
    208          }
   \                     ??get_romcode_console_2:
   \       0x98   0xE8BD'83F1        POP      {R0,R4-R9,PC}    ;; return
    209          

   \                                 In section SOFTPACK, align 4, keep-with-next
    210          Matrix* get_peripheral_matrix(uint32_t id)
    211          {
   \                     get_peripheral_matrix:
   \        0x0   0xE1B0'1000        MOVS     R1,R0
    212          	int i;
    213          
    214          	for (i = 0; i < ARRAY_SIZE(_h64_peripherals); i++)
   \        0x4   0xE3A0'2000        MOV      R2,#+0
   \                     ??get_peripheral_matrix_0:
   \        0x8   0xE352'000F        CMP      R2,#+15
   \        0xC   0x2A00'0008        BCS      ??get_peripheral_matrix_1
    215          		if (_h64_peripherals[i] == id)
   \       0x10   0x....'....        LDR      R0,??DataTable6_8
   \       0x14   0xE7D0'0002        LDRB     R0,[R0, +R2]
   \       0x18   0xE150'0001        CMP      R0,R1
   \       0x1C   0x1A00'0002        BNE      ??get_peripheral_matrix_2
    216          			return MATRIX0; // AHB 64-bit matrix
   \       0x20   0xE3A0'04F0        MOV      R0,#-268435456
   \       0x24   0xE380'0B60        ORR      R0,R0,#0x18000
   \       0x28   0xEA00'0003        B        ??get_peripheral_matrix_3
   \                     ??get_peripheral_matrix_2:
   \       0x2C   0xE292'2001        ADDS     R2,R2,#+1
   \       0x30   0xEAFF'FFF4        B        ??get_peripheral_matrix_0
    217          	return MATRIX1; // AHB 32-bit matrix
   \                     ??get_peripheral_matrix_1:
   \       0x34   0xE3A0'04FC        MOV      R0,#-67108864
   \       0x38   0xE380'0BF0        ORR      R0,R0,#0x3C000
   \                     ??get_peripheral_matrix_3:
   \       0x3C   0xE12F'FF1E        BX       LR               ;; return
    218          }
    219          

   \                                 In section SOFTPACK, align 4, keep-with-next
    220          uint32_t get_peripheral_clock_matrix_div(uint32_t id)
    221          {
   \                     get_peripheral_clock_matrix_div:
   \        0x0   0xE92D'4010        PUSH     {R4,LR}
   \        0x4   0xE1B0'4000        MOVS     R4,R0
    222          	Matrix* matrix = get_peripheral_matrix(id);
   \        0x8   0xE1B0'0004        MOVS     R0,R4
   \        0xC   0x....'....        BL       get_peripheral_matrix
   \       0x10   0xE1B0'1000        MOVS     R1,R0
    223          
    224          	if (matrix == MATRIX1) {
   \       0x14   0xE3A0'04FC        MOV      R0,#-67108864
   \       0x18   0xE380'0BF0        ORR      R0,R0,#0x3C000
   \       0x1C   0xE151'0000        CMP      R1,R0
   \       0x20   0x1A00'0007        BNE      ??get_peripheral_clock_matrix_div_0
    225          		if (PMC->PMC_MCKR & PMC_MCKR_H32MXDIV_H32MXDIV2)
   \       0x24   0x....'....        LDR      R0,??DataTable6_9  ;; 0xf0014030
   \       0x28   0xE590'0000        LDR      R0,[R0, #+0]
   \       0x2C   0xE310'0740        TST      R0,#0x1000000
   \       0x30   0x0A00'0001        BEQ      ??get_peripheral_clock_matrix_div_1
    226          			return 2;
   \       0x34   0xE3A0'0002        MOV      R0,#+2
   \       0x38   0xEA00'0002        B        ??get_peripheral_clock_matrix_div_2
    227          		else
    228          			return 1;
   \                     ??get_peripheral_clock_matrix_div_1:
   \       0x3C   0xE3A0'0001        MOV      R0,#+1
   \       0x40   0xEA00'0000        B        ??get_peripheral_clock_matrix_div_2
    229          	}
    230          
    231          	return 1;
   \                     ??get_peripheral_clock_matrix_div_0:
   \       0x44   0xE3A0'0001        MOV      R0,#+1
   \                     ??get_peripheral_clock_matrix_div_2:
   \       0x48   0xE8BD'8010        POP      {R4,PC}          ;; return
    232          }
    233          

   \                                 In section SOFTPACK, align 4, keep-with-next
    234          uint8_t get_peripheral_dma_channel(uint32_t id, Xdmac *xdmac, bool transmit)
    235          {
   \                     get_peripheral_dma_channel:
   \        0x0   0xE92D'4070        PUSH     {R4-R6,LR}
   \        0x4   0xE1B0'4000        MOVS     R4,R0
   \        0x8   0xE1B0'5001        MOVS     R5,R1
   \        0xC   0xE1B0'6002        MOVS     R6,R2
    236          	const struct peripheral_xdma *periph_xdma = get_peripheral_xdma(id, xdmac);
   \       0x10   0xE1B0'1005        MOVS     R1,R5
   \       0x14   0xE1B0'0004        MOVS     R0,R4
   \       0x18   0x....'....        BL       get_peripheral_xdma
   \       0x1C   0xE1B0'1000        MOVS     R1,R0
    237          	if (periph_xdma) {
   \       0x20   0xE351'0000        CMP      R1,#+0
   \       0x24   0x0A00'0007        BEQ      ??get_peripheral_dma_channel_0
    238          		return transmit ? periph_xdma->iftx : periph_xdma->ifrx;
   \       0x28   0xE6EF'6076        UXTB     R6,R6
   \       0x2C   0xE356'0000        CMP      R6,#+0
   \       0x30   0x0A00'0001        BEQ      ??get_peripheral_dma_channel_1
   \       0x34   0xE5D1'0004        LDRB     R0,[R1, #+4]
   \       0x38   0xEA00'0000        B        ??get_peripheral_dma_channel_2
   \                     ??get_peripheral_dma_channel_1:
   \       0x3C   0xE5D1'0005        LDRB     R0,[R1, #+5]
   \                     ??get_peripheral_dma_channel_2:
   \       0x40   0xE6EF'0070        UXTB     R0,R0
   \       0x44   0xEA00'0000        B        ??get_peripheral_dma_channel_3
    239          	} else {
    240          		return 0xff;
   \                     ??get_peripheral_dma_channel_0:
   \       0x48   0xE3A0'00FF        MOV      R0,#+255
   \                     ??get_peripheral_dma_channel_3:
   \       0x4C   0xE8BD'8070        POP      {R4-R6,PC}       ;; return
    241          	}
    242          }
    243          

   \                                 In section SOFTPACK, align 4, keep-with-next
    244          bool is_peripheral_on_dma_controller(uint32_t peri_id, Xdmac *xdmac)
    245          {
   \                     is_peripheral_on_dma_controller:
   \        0x0   0xE92D'47F0        PUSH     {R4-R10,LR}
   \        0x4   0xE1B0'4000        MOVS     R4,R0
   \        0x8   0xE1B0'5001        MOVS     R5,R1
    246          	Matrix *dmac_mtx = NULL;
   \        0xC   0xE3A0'8000        MOV      R8,#+0
   \       0x10   0xE1B0'6008        MOVS     R6,R8
    247          	Matrix *peri_mtx = get_peripheral_matrix(peri_id);
   \       0x14   0xE1B0'0004        MOVS     R0,R4
   \       0x18   0x....'....        BL       get_peripheral_matrix
   \       0x1C   0xE1B0'9000        MOVS     R9,R0
    248          	uint32_t dmac_id = get_xdmac_id_from_addr(xdmac);
   \       0x20   0xE1B0'0005        MOVS     R0,R5
   \       0x24   0x....'....        BL       get_xdmac_id_from_addr
   \       0x28   0xE1B0'A000        MOVS     R10,R0
    249          
    250          	assert(peri_id < ID_PERIPH_COUNT && dmac_id < ID_PERIPH_COUNT);
   \       0x2C   0xE354'004F        CMP      R4,#+79
   \       0x30   0x2A00'0001        BCS      ??is_peripheral_on_dma_controller_0
   \       0x34   0xE35A'004F        CMP      R10,#+79
   \       0x38   0x3A00'0004        BCC      ??is_peripheral_on_dma_controller_1
   \                     ??is_peripheral_on_dma_controller_0:
   \       0x3C   0xE3A0'20FA        MOV      R2,#+250
   \       0x40   0x....'....        LDR      R1,??DataTable6_10
   \       0x44   0x....'....        LDR      R0,??DataTable6_11
   \       0x48   0x....'....        BL       __aeabi_assert
   \       0x4C   0x....'....        BL       __iar_EmptyStepPoint
    251          	dmac_mtx = get_peripheral_matrix(dmac_id);
   \                     ??is_peripheral_on_dma_controller_1:
   \       0x50   0xE1B0'000A        MOVS     R0,R10
   \       0x54   0x....'....        BL       get_peripheral_matrix
   \       0x58   0xE1B0'7000        MOVS     R7,R0
    252          	assert(peri_mtx != NULL && dmac_mtx != NULL);
   \       0x5C   0xE359'0000        CMP      R9,#+0
   \       0x60   0x0A00'0001        BEQ      ??is_peripheral_on_dma_controller_2
   \       0x64   0xE357'0000        CMP      R7,#+0
   \       0x68   0x1A00'0004        BNE      ??is_peripheral_on_dma_controller_3
   \                     ??is_peripheral_on_dma_controller_2:
   \       0x6C   0xE3A0'20FC        MOV      R2,#+252
   \       0x70   0x....'....        LDR      R1,??DataTable6_10
   \       0x74   0x....'....        LDR      R0,??DataTable6_12
   \       0x78   0x....'....        BL       __aeabi_assert
   \       0x7C   0x....'....        BL       __iar_EmptyStepPoint
    253          	if (matrix_is_peripheral_secured(peri_mtx, peri_id)
    254          		&& !matrix_is_peripheral_secured(dmac_mtx, dmac_id))
   \                     ??is_peripheral_on_dma_controller_3:
   \       0x80   0xE1B0'1004        MOVS     R1,R4
   \       0x84   0xE1B0'0009        MOVS     R0,R9
   \       0x88   0x....'....        BL       matrix_is_peripheral_secured
   \       0x8C   0xE350'0000        CMP      R0,#+0
   \       0x90   0x0A00'0006        BEQ      ??is_peripheral_on_dma_controller_4
   \       0x94   0xE1B0'100A        MOVS     R1,R10
   \       0x98   0xE1B0'0007        MOVS     R0,R7
   \       0x9C   0x....'....        BL       matrix_is_peripheral_secured
   \       0xA0   0xE350'0000        CMP      R0,#+0
   \       0xA4   0x1A00'0001        BNE      ??is_peripheral_on_dma_controller_4
    255          		return false;
   \       0xA8   0xE3A0'0000        MOV      R0,#+0
   \       0xAC   0xEA00'0008        B        ??is_peripheral_on_dma_controller_5
    256          	return get_peripheral_xdma(peri_id, xdmac) != NULL;
   \                     ??is_peripheral_on_dma_controller_4:
   \       0xB0   0xE1B0'1005        MOVS     R1,R5
   \       0xB4   0xE1B0'0004        MOVS     R0,R4
   \       0xB8   0x....'....        BL       get_peripheral_xdma
   \       0xBC   0xE350'0000        CMP      R0,#+0
   \       0xC0   0x0A00'0001        BEQ      ??is_peripheral_on_dma_controller_6
   \       0xC4   0xE3A0'8001        MOV      R8,#+1
   \       0xC8   0xEAFF'FFFF        B        ??is_peripheral_on_dma_controller_7
   \                     ??is_peripheral_on_dma_controller_6:
   \                     ??is_peripheral_on_dma_controller_7:
   \       0xCC   0xE1B0'0008        MOVS     R0,R8
   \       0xD0   0xE6EF'0070        UXTB     R0,R0
   \                     ??is_peripheral_on_dma_controller_5:
   \       0xD4   0xE8BD'87F0        POP      {R4-R10,PC}      ;; return
    257          }
    258          

   \                                 In section SOFTPACK, align 4, keep-with-next
    259          int32_t get_peripheral_fifo_depth(void* addr)
    260          {
   \                     get_peripheral_fifo_depth:
   \        0x0   0xE1B0'1000        MOVS     R1,R0
    261          	uint32_t size = -1;
   \        0x4   0xE3E0'2000        MVN      R2,#+0
    262          	uint32_t tmp = (uint32_t)addr;
   \        0x8   0xE1B0'3001        MOVS     R3,R1
    263          	switch (tmp) {
   \        0xC   0xE1B0'0003        MOVS     R0,R3
   \       0x10   0xE350'04F8        CMP      R0,#-134217728
   \       0x14   0x0A00'0040        BEQ      ??get_peripheral_fifo_depth_0
   \       0x18   0xE3A0'C4F8        MOV      R12,#-134217728
   \       0x1C   0xE38C'CBA0        ORR      R12,R12,#0x28000
   \       0x20   0xE150'000C        CMP      R0,R12
   \       0x24   0x0A00'003E        BEQ      ??get_peripheral_fifo_depth_1
   \       0x28   0x....'....        LDR      R12,??DataTable6_13  ;; 0xf8034200
   \       0x2C   0xE150'000C        CMP      R0,R12
   \       0x30   0x0A00'0035        BEQ      ??get_peripheral_fifo_depth_2
   \       0x34   0xE3A0'C4F8        MOV      R12,#-134217728
   \       0x38   0xE38C'CBD1        ORR      R12,R12,#0x34400
   \       0x3C   0xE150'000C        CMP      R0,R12
   \       0x40   0x0A00'0033        BEQ      ??get_peripheral_fifo_depth_3
   \       0x44   0x....'....        LDR      R12,??DataTable6_14  ;; 0xf8034600
   \       0x48   0xE150'000C        CMP      R0,R12
   \       0x4C   0x0A00'0034        BEQ      ??get_peripheral_fifo_depth_1
   \       0x50   0x....'....        LDR      R12,??DataTable6_15  ;; 0xf8038200
   \       0x54   0xE150'000C        CMP      R0,R12
   \       0x58   0x0A00'002B        BEQ      ??get_peripheral_fifo_depth_2
   \       0x5C   0xE3A0'C4F8        MOV      R12,#-134217728
   \       0x60   0xE38C'CBE1        ORR      R12,R12,#0x38400
   \       0x64   0xE150'000C        CMP      R0,R12
   \       0x68   0x0A00'0029        BEQ      ??get_peripheral_fifo_depth_3
   \       0x6C   0x....'....        LDR      R12,??DataTable6_16  ;; 0xf8038600
   \       0x70   0xE150'000C        CMP      R0,R12
   \       0x74   0x0A00'002A        BEQ      ??get_peripheral_fifo_depth_1
   \       0x78   0xE350'04FC        CMP      R0,#-67108864
   \       0x7C   0x0A00'0026        BEQ      ??get_peripheral_fifo_depth_0
   \       0x80   0x....'....        LDR      R12,??DataTable6_17  ;; 0xfc010200
   \       0x84   0xE150'000C        CMP      R0,R12
   \       0x88   0x0A00'001F        BEQ      ??get_peripheral_fifo_depth_2
   \       0x8C   0xE3A0'C4FC        MOV      R12,#-67108864
   \       0x90   0xE38C'CB41        ORR      R12,R12,#0x10400
   \       0x94   0xE150'000C        CMP      R0,R12
   \       0x98   0x0A00'001D        BEQ      ??get_peripheral_fifo_depth_3
   \       0x9C   0x....'....        LDR      R12,??DataTable6_18  ;; 0xfc010600
   \       0xA0   0xE150'000C        CMP      R0,R12
   \       0xA4   0x0A00'001E        BEQ      ??get_peripheral_fifo_depth_1
   \       0xA8   0x....'....        LDR      R12,??DataTable6_19  ;; 0xfc014200
   \       0xAC   0xE150'000C        CMP      R0,R12
   \       0xB0   0x0A00'0015        BEQ      ??get_peripheral_fifo_depth_2
   \       0xB4   0xE3A0'C4FC        MOV      R12,#-67108864
   \       0xB8   0xE38C'CB51        ORR      R12,R12,#0x14400
   \       0xBC   0xE150'000C        CMP      R0,R12
   \       0xC0   0x0A00'0013        BEQ      ??get_peripheral_fifo_depth_3
   \       0xC4   0x....'....        LDR      R12,??DataTable6_20  ;; 0xfc014600
   \       0xC8   0xE150'000C        CMP      R0,R12
   \       0xCC   0x0A00'0014        BEQ      ??get_peripheral_fifo_depth_1
   \       0xD0   0x....'....        LDR      R12,??DataTable6_21  ;; 0xfc018200
   \       0xD4   0xE150'000C        CMP      R0,R12
   \       0xD8   0x0A00'000B        BEQ      ??get_peripheral_fifo_depth_2
   \       0xDC   0xE3A0'C4FC        MOV      R12,#-67108864
   \       0xE0   0xE38C'CB61        ORR      R12,R12,#0x18400
   \       0xE4   0xE150'000C        CMP      R0,R12
   \       0xE8   0x0A00'0009        BEQ      ??get_peripheral_fifo_depth_3
   \       0xEC   0x....'....        LDR      R12,??DataTable6_22  ;; 0xfc018600
   \       0xF0   0xE150'000C        CMP      R0,R12
   \       0xF4   0x0A00'000A        BEQ      ??get_peripheral_fifo_depth_1
   \       0xF8   0xE3A0'C4FC        MOV      R12,#-67108864
   \       0xFC   0xE38C'CBA0        ORR      R12,R12,#0x28000
   \      0x100   0xE150'000C        CMP      R0,R12
   \      0x104   0x0A00'0006        BEQ      ??get_peripheral_fifo_depth_1
   \      0x108   0xEA00'0007        B        ??get_peripheral_fifo_depth_4
    264          	case (uint32_t)FLEXUSART0:
    265          #ifdef FLEXUSART1
    266          	case (uint32_t)FLEXUSART1:
    267          #endif
    268          #ifdef FLEXUSART2
    269          	case (uint32_t)FLEXUSART2:
    270          #endif
    271          #ifdef FLEXUSART3
    272          	case (uint32_t)FLEXUSART3:
    273          #endif
    274          #ifdef FLEXUSART4
    275          	case (uint32_t)FLEXUSART4:
    276          #endif
    277          		size = FLEXCOM_USART_FIFO_DEPTH;
   \                     ??get_peripheral_fifo_depth_2:
   \      0x10C   0xE3A0'0020        MOV      R0,#+32
    278          		break;
   \      0x110   0xEA00'0006        B        ??get_peripheral_fifo_depth_5
    279          
    280          	case (uint32_t)FLEXSPI0:
    281          #ifdef FLEXSPI1
    282          	case (uint32_t)FLEXSPI1:
    283          #endif
    284          #ifdef FLEXSPI2
    285          	case (uint32_t)FLEXSPI2:
    286          #endif
    287          #ifdef FLEXSPI3
    288          	case (uint32_t)FLEXSPI3:
    289          #endif
    290          #ifdef FLEXSPI4
    291          	case (uint32_t)FLEXSPI4:
    292          #endif
    293          		size = FLEXCOM_SPI_FIFO_DEPTH;
   \                     ??get_peripheral_fifo_depth_3:
   \      0x114   0xE3A0'0020        MOV      R0,#+32
    294          		break;
   \      0x118   0xEA00'0004        B        ??get_peripheral_fifo_depth_5
    295          	case (uint32_t)SPI0:
    296          #ifdef SPI1
    297          	case (uint32_t)SPI1:
    298          #endif
    299          		size = SPI_FIFO_DEPTH;
   \                     ??get_peripheral_fifo_depth_0:
   \      0x11C   0xE3A0'0010        MOV      R0,#+16
    300          		break;
   \      0x120   0xEA00'0002        B        ??get_peripheral_fifo_depth_5
    301          	case (uint32_t)FLEXTWI0:
    302          #ifdef FLEXTWI1
    303          	case (uint32_t)FLEXTWI1:
    304          #endif
    305          #ifdef FLEXTWI2
    306          	case (uint32_t)FLEXTWI2:
    307          #endif
    308          #ifdef FLEXTWI3
    309          	case (uint32_t)FLEXTWI3:
    310          #endif
    311          #ifdef FLEXTWI4
    312          	case (uint32_t)FLEXTWI4:
    313          #endif
    314          #ifdef TWI0
    315          	case (uint32_t)TWI0:
    316          #endif
    317          #ifdef TWI1
    318          	case (uint32_t)TWI1:
    319          #endif
    320          		size = TWI_FIFO_DEPTH;
   \                     ??get_peripheral_fifo_depth_1:
   \      0x124   0xE3A0'0010        MOV      R0,#+16
    321          		break;
   \      0x128   0xEA00'0000        B        ??get_peripheral_fifo_depth_5
    322          	default:
    323          		size = -1;
   \                     ??get_peripheral_fifo_depth_4:
   \      0x12C   0xE3E0'0000        MVN      R0,#+0
    324          	}
    325          	return size;
   \                     ??get_peripheral_fifo_depth_5:
   \      0x130   0xE12F'FF1E        BX       LR               ;; return
    326          }

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6:
   \        0x0   0x....'....        DC32     _xdmac_peripherals

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_1:
   \        0x0   0x8A5C'08C0        DC32     0x8a5c08c0

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_2:
   \        0x0   0xFC06'9004        DC32     0xfc069004

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_3:
   \        0x0   0x....'....        DC32     _exid_names

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_4:
   \        0x0   0x....'....        DC32     ?_15

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_5:
   \        0x0   0xF804'8054        DC32     0xf8048054

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_6:
   \        0x0   0xF804'5400        DC32     0xf8045400

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_7:
   \        0x0   0x....'....        DC32     _console_cfg

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_8:
   \        0x0   0x....'....        DC32     _h64_peripherals

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_9:
   \        0x0   0xF001'4030        DC32     0xf0014030

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_10:
   \        0x0   0x....'....        DC32     ?_17

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_11:
   \        0x0   0x....'....        DC32     ?_16

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_12:
   \        0x0   0x....'....        DC32     ?_18

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_13:
   \        0x0   0xF803'4200        DC32     0xf8034200

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_14:
   \        0x0   0xF803'4600        DC32     0xf8034600

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_15:
   \        0x0   0xF803'8200        DC32     0xf8038200

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_16:
   \        0x0   0xF803'8600        DC32     0xf8038600

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_17:
   \        0x0   0xFC01'0200        DC32     0xfc010200

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_18:
   \        0x0   0xFC01'0600        DC32     0xfc010600

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_19:
   \        0x0   0xFC01'4200        DC32     0xfc014200

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_20:
   \        0x0   0xFC01'4600        DC32     0xfc014600

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_21:
   \        0x0   0xFC01'8200        DC32     0xfc018200

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_22:
   \        0x0   0xFC01'8600        DC32     0xfc018600

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x53 0x41          DC8 "SAMA5D21-CU"

   \              0x4D 0x41    

   \              0x35 0x44    

   \              0x32 0x31    

   \              0x2D 0x43    

   \              0x55 0x00

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x53 0x41          DC8 "SAMA5D22-CU"

   \              0x4D 0x41    

   \              0x35 0x44    

   \              0x32 0x32    

   \              0x2D 0x43    

   \              0x55 0x00

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x53 0x41          DC8 "SAMA5D22-CN"

   \              0x4D 0x41    

   \              0x35 0x44    

   \              0x32 0x32    

   \              0x2D 0x43    

   \              0x4E 0x00

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x53 0x41          DC8 "SAMA5D23-CU"

   \              0x4D 0x41    

   \              0x35 0x44    

   \              0x32 0x33    

   \              0x2D 0x43    

   \              0x55 0x00

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x53 0x41          DC8 "SAMA5D24-CX"

   \              0x4D 0x41    

   \              0x35 0x44    

   \              0x32 0x34    

   \              0x2D 0x43    

   \              0x58 0x00

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x53 0x41          DC8 "SAMA5D24-CU"

   \              0x4D 0x41    

   \              0x35 0x44    

   \              0x32 0x34    

   \              0x2D 0x43    

   \              0x55 0x00

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x53 0x41          DC8 "SAMA5D26-CU"

   \              0x4D 0x41    

   \              0x35 0x44    

   \              0x32 0x36    

   \              0x2D 0x43    

   \              0x55 0x00

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x53 0x41          DC8 "SAMA5D27-CU"

   \              0x4D 0x41    

   \              0x35 0x44    

   \              0x32 0x37    

   \              0x2D 0x43    

   \              0x55 0x00

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x53 0x41          DC8 "SAMA5D27-CN"

   \              0x4D 0x41    

   \              0x35 0x44    

   \              0x32 0x37    

   \              0x2D 0x43    

   \              0x4E 0x00

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x53 0x41          DC8 "SAMA5D28-CU"

   \              0x4D 0x41    

   \              0x35 0x44    

   \              0x32 0x38    

   \              0x2D 0x43    

   \              0x55 0x00

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x53 0x41          DC8 "SAMA5D28-CN"

   \              0x4D 0x41    

   \              0x35 0x44    

   \              0x32 0x38    

   \              0x2D 0x43    

   \              0x4E 0x00

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x53 0x41          DC8 "SAMA5D225-D1M"

   \              0x4D 0x41    

   \              0x35 0x44    

   \              0x32 0x32    

   \              0x35 0x2D    

   \              0x44 0x31    

   \              0x4D 0x00
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x53 0x41          DC8 "SAMA5D27-D5M"

   \              0x4D 0x41    

   \              0x35 0x44    

   \              0x32 0x37    

   \              0x2D 0x44    

   \              0x35 0x4D    

   \              0x00
   \        0xD   0x00 0x00          DC8 0, 0, 0

   \              0x00

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x53 0x41          DC8 "SAMA5D27-D1G"

   \              0x4D 0x41    

   \              0x35 0x44    

   \              0x32 0x37    

   \              0x2D 0x44    

   \              0x31 0x47    

   \              0x00
   \        0xD   0x00 0x00          DC8 0, 0, 0

   \              0x00

   \                                 In section .rodata, align 4
   \                     ?_14:
   \        0x0   0x53 0x41          DC8 "SAMA5D28-D1G"

   \              0x4D 0x41    

   \              0x35 0x44    

   \              0x32 0x38    

   \              0x2D 0x44    

   \              0x31 0x47    

   \              0x00
   \        0xD   0x00 0x00          DC8 0, 0, 0

   \              0x00

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x55 0x6E          DC8 "Unknown"

   \              0x6B 0x6E    

   \              0x6F 0x77    

   \              0x6E 0x00

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x70 0x65          DC8 "peri_id < (79) && dmac_id < (79)"

   \              0x72 0x69    

   \              0x5F 0x69    

   \              0x64 0x20    

   \              0x3C 0x20    

   \              0x28 0x37    

   \              0x39 0x29    

   \              0x20 0x26    

   \              0x26 0x20    

   \              0x64 0x6D    

   \              0x61 0x63    

   \              0x5F 0x69    

   \              0x64 0x20    

   \              0x3C 0x20    

   \              0x28 0x37    

   \              0x39 0x29    

   \              0x00
   \       0x21   0x00 0x00          DC8 0, 0, 0

   \              0x00

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x43 0x3A          DC8 0x43, 0x3A, 0x5C, 0x77, 0x6F, 0x72, 0x6B, 0x5C

   \              0x5C 0x77    

   \              0x6F 0x72    

   \              0x6B 0x5C
   \        0x8   0x41 0x74          DC8 0x41, 0x74, 0x6D, 0x65, 0x6C, 0x53, 0x6F, 0x66

   \              0x6D 0x65    

   \              0x6C 0x53    

   \              0x6F 0x66
   \       0x10   0x74 0x50          DC8 0x74, 0x50, 0x41, 0x63, 0x6B, 0x5C, 0x61, 0x74

   \              0x41 0x63    

   \              0x6B 0x5C    

   \              0x61 0x74
   \       0x18   0x6D 0x65          DC8 0x6D, 0x65, 0x6C, 0x2D, 0x73, 0x6F, 0x66, 0x74

   \              0x6C 0x2D    

   \              0x73 0x6F    

   \              0x66 0x74
   \       0x20   0x77 0x61          DC8 0x77, 0x61, 0x72, 0x65, 0x2D, 0x70, 0x61, 0x63

   \              0x72 0x65    

   \              0x2D 0x70    

   \              0x61 0x63
   \       0x28   0x6B 0x61          DC8 0x6B, 0x61, 0x67, 0x65, 0x2D, 0x32, 0x2E, 0x31

   \              0x67 0x65    

   \              0x2D 0x32    

   \              0x2E 0x31
   \       0x30   0x37 0x5C          DC8 0x37, 0x5C, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74

   \              0x74 0x61    

   \              0x72 0x67    

   \              0x65 0x74
   \       0x38   0x5C 0x73          DC8 0x5C, 0x73, 0x61, 0x6D, 0x61, 0x35, 0x64, 0x32

   \              0x61 0x6D    

   \              0x61 0x35    

   \              0x64 0x32
   \       0x40   0x5C 0x63          DC8 0x5C, 0x63, 0x68, 0x69, 0x70, 0x2E, 0x63, 0

   \              0x68 0x69    

   \              0x70 0x2E    

   \              0x63 0x00

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x70 0x65          DC8 "peri_mtx != 0 && dmac_mtx != 0"

   \              0x72 0x69    

   \              0x5F 0x6D    

   \              0x74 0x78    

   \              0x20 0x21    

   \              0x3D 0x20    

   \              0x30 0x20    

   \              0x26 0x26    

   \              0x20 0x64    

   \              0x6D 0x61    

   \              0x63 0x5F    

   \              0x6D 0x74    

   \              0x78 0x20    

   \              0x21 0x3D    

   \              0x20 0x30    

   \              0x00
   \       0x1F   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   get_chip_name
       8   get_peripheral_clock_matrix_div
         8   -> get_peripheral_matrix
      16   get_peripheral_dma_channel
        16   -> get_peripheral_xdma
       0   get_peripheral_fifo_depth
       0   get_peripheral_matrix
       0   get_peripheral_xdma
      32   get_romcode_console
        32   -> __aeabi_memcpy
        32   -> __aeabi_memset
        32   -> sfc_read
      32   is_peripheral_on_dma_controller
        32   -> __aeabi_assert
        32   -> __iar_EmptyStepPoint
        32   -> get_peripheral_matrix
        32   -> get_peripheral_xdma
        32   -> get_xdmac_id_from_addr
        32   -> matrix_is_peripheral_secured


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_14
       4  ??DataTable6_15
       4  ??DataTable6_16
       4  ??DataTable6_17
       4  ??DataTable6_18
       4  ??DataTable6_19
       4  ??DataTable6_2
       4  ??DataTable6_20
       4  ??DataTable6_21
       4  ??DataTable6_22
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
      12  ?_0
      12  ?_1
      12  ?_10
      16  ?_11
      16  ?_12
      16  ?_13
      16  ?_14
       8  ?_15
      36  ?_16
      72  ?_17
      32  ?_18
      12  ?_2
      12  ?_3
      12  ?_4
      12  ?_5
      12  ?_6
      12  ?_7
      12  ?_8
      12  ?_9
     400  _console_cfg
     120  _exid_names
      16  _h64_peripherals
     232  _xdmac_peripherals
     104  get_chip_name
      76  get_peripheral_clock_matrix_div
      80  get_peripheral_dma_channel
     308  get_peripheral_fifo_depth
      64  get_peripheral_matrix
     104  get_peripheral_xdma
     156  get_romcode_console
     216  is_peripheral_on_dma_controller

 
 1'112 bytes in section .rodata
 1'200 bytes in section SOFTPACK
 
 1'200 bytes of CODE  memory
 1'112 bytes of CONST memory

Errors: none
Warnings: none
