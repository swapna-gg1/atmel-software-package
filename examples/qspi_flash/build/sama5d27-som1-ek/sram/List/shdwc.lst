###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         18/Feb/2021  16:03:19
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode             
#    Endian            =  little
#    Source file       =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\peripherals\shdwc.c
#    Command line      =
#        -f C:\Users\c40450\AppData\Local\Temp\EWB3AA.tmp
#        (C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\peripherals\shdwc.c
#        -D "SOFTPACK_VERSION=\"2.17\"" -D TRACE_LEVEL=5 -D VARIANT_SRAM -D
#        CONFIG_ARCH_ARMV7A -D CONFIG_ARCH_ARM -D CONFIG_SOC_SAMA5D2 -D
#        CONFIG_CHIP_SAMA5D27 -D CONFIG_PACKAGE_289PIN -D
#        CONFIG_BOARD_SAMA5D27_SOM1_EK -D CONFIG_HAVE_AIC5 -D
#        CONFIG_HAVE_FLEXCOM -D CONFIG_HAVE_PIO4 -D CONFIG_HAVE_PIO4_SECURE -D
#        CONFIG_HAVE_QSPI -D CONFIG_HAVE_QSPI_DMA -D CONFIG_HAVE_NFC -D
#        CONFIG_HAVE_PIT -D CONFIG_HAVE_SMC -D CONFIG_HAVE_SMC_SCRAMBLING -D
#        CONFIG_HAVE_GMAC_QUEUES -D CONFIG_HAVE_MPDDRC -D
#        CONFIG_HAVE_MPDDRC_DATA_PATH -D CONFIG_HAVE_MPDDRC_IO_CALIBRATION -D
#        CONFIG_HAVE_MPDDRC_DDR2 -D CONFIG_HAVE_MPDDRC_LPDDR2 -D
#        CONFIG_HAVE_MPDDRC_DDR3 -D CONFIG_HAVE_MPDDRC_LPDDR3 -D
#        CONFIG_HAVE_ADC_SETTLING_TIME -D CONFIG_HAVE_ADC_DIFF_INPUT -D
#        CONFIG_HAVE_ADC_SEQ_R2 -D CONFIG_HAVE_PMC_FAST_STARTUP -D
#        CONFIG_HAVE_PMC_GENERATED_CLOCKS -D CONFIG_HAVE_PMC_AUDIO_CLOCK -D
#        CONFIG_HAVE_PMC_PLLADIV2 -D CONFIG_HAVE_PMC_H32MXDIV -D
#        CONFIG_HAVE_PMC_UPLL_BIAS -D CONFIG_HAVE_SCKC -D CONFIG_HAVE_PWMC_DMA
#        -D CONFIG_HAVE_PWMC_SPREAD_SPECTRUM -D
#        CONFIG_HAVE_PWMC_EXTERNAL_TRIGGER -D CONFIG_HAVE_PWMC_FAULT_PROT_HIZ
#        -D CONFIG_HAVE_PWMC_STEPPER_MOTOR -D CONFIG_HAVE_PWMC_CMP_UNIT -D
#        CONFIG_HAVE_PWMC_SYNC_MODE -D CONFIG_HAVE_PWMC_OOV -D
#        CONFIG_HAVE_PWMC_FMODE -D CONFIG_HAVE_PWMC_WP -D
#        CONFIG_HAVE_PWMC_DTIME -D CONFIG_HAVE_PWMC_ELINE -D CONFIG_HAVE_SFRBU
#        -D CONFIG_HAVE_L2CC -D CONFIG_HAVE_SAIC -D CONFIG_HAVE_XDMAC -D
#        CONFIG_HAVE_XDMAC_DATA_WIDTH_DWORD -D CONFIG_HAVE_TRNG -D
#        CONFIG_HAVE_SECUMOD -D CONFIG_HAVE_SFC -D CONFIG_HAVE_PWMC -D
#        CONFIG_HAVE_SECURE_MATRIX -D CONFIG_HAVE_DDR2_W971GG6SB -D
#        CONFIG_HAVE_RSTC_CONFIGURABLE_USER_RESET -D CONFIG_HAVE_TC_FAULT_MODE
#        -D CONFIG_HAVE_TC_DMA_MODE -D CONFIG_HAVE_RTC_CALIBRATION -D
#        CONFIG_HAVE_RTC_MODE_PERSIAN -D CONFIG_HAVE_RTC_MODE_UTC -D
#        CONFIG_HAVE_RTC_TAMPER -D CONFIG_HAVE_SHDWC -D CONFIG_HAVE_SPI -D
#        CONFIG_HAVE_SPI_FIFO -D CONFIG_HAVE_SPI_NOR -D CONFIG_HAVE_MMU -D
#        CONFIG_HAVE_L1CACHE -D CONFIG_HAVE_L2CACHE -D CONFIG_HAVE_SPI_BUS -D
#        CONFIG_HAVE_UART -D CONFIG_HAVE_SERIALD_UART -D CONFIG_HAVE_USART -D
#        CONFIG_HAVE_USART_FIFO --preprocess
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\build\sama5d27-som1-ek\sram\List
#        -lC
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\build\sama5d27-som1-ek\sram\List
#        --diag_suppress Pa050 -o
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\build\sama5d27-som1-ek\sram\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-A5 -e --fpu=VFPv4_D16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\arch\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\utils\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\target\common\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\target\sama5d2\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\drivers\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\..\..\lib\
#        --section .text=SOFTPACK --cpu_mode arm -On)
#    Locale            =  C
#    List file         =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\build\sama5d27-som1-ek\sram\List\shdwc.lst
#    Object file       =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\qspi_flash\build\sama5d27-som1-ek\sram\Obj\shdwc.o
#    Runtime model:       
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\peripherals\shdwc.c
      1          /* ----------------------------------------------------------------------------
      2           *         SAM Software Package License
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2015, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /*----------------------------------------------------------------------------
     31           *        Headers
     32           *----------------------------------------------------------------------------*/
     33          
     34          #include "chip.h"
     35          #include "peripherals/shdwc.h"
     36          #include <stdint.h>
     37          
     38          /*----------------------------------------------------------------------------
     39           *        Local Defines
     40           *----------------------------------------------------------------------------*/
     41          
     42          struct _bitfield_shdwc_cfgr {
     43          	uint32_t
     44          		lpdbcen0: 1,
     45          		lpdbcen1: 1,
     46          		rfu2_7:   6,
     47          		lpdbc:    3,
     48          		rfu10_15: 5,
     49          		rttwken:  1,
     50          		rtcwken:  1,
     51          		accwken:  1,
     52          		rxlpwken: 1,
     53          		rfu20_23: 4,
     54          		wkupdbc:  3,
     55          		rfu26_31: 5;
     56          };
     57          
     58          union _shdwc_cfg {
     59          	struct _bitfield_shdwc_cfgr bfield;
     60          	uint32_t uint32_value;
     61          };
     62          
     63          /*----------------------------------------------------------------------------
     64           *        Exported functions
     65           *----------------------------------------------------------------------------*/
     66          
     67          #ifdef CONFIG_SOC_SAMA5D2

   \                                 In section SOFTPACK, align 4, keep-with-next
     68          void shdwc_configure_wakeup_mode(uint32_t config)
     69          {
     70          	union _shdwc_cfg cfg;
     71          
     72          	cfg.uint32_value = SHDWC->SHDW_MR;
   \                     shdwc_configure_wakeup_mode:
   \        0x0   0x....'....        LDR      R2,??DataTable4  ;; 0xf8048014
   \        0x4   0xE592'1000        LDR      R1,[R2, #+0]
     73          
     74          	cfg.bfield.lpdbcen0 = (config & SHDW_MR_LPDBCEN0_ENABLE) ? 1 : 0;
   \        0x8   0xE7C0'1010        BFI      R1,R0,#+0,#+1
     75          	cfg.bfield.lpdbcen1 = (config & SHDW_MR_LPDBCEN1_ENABLE) ? 1 : 0;
   \        0xC   0xE1B0'30A0        LSRS     R3,R0,#+1
   \       0x10   0xE7C1'1093        BFI      R1,R3,#+1,#+1
     76          	cfg.bfield.lpdbc = (config & SHDW_MR_LPDBC_Msk) >> SHDW_MR_LPDBC_Pos;
   \       0x14   0xE1B0'3420        LSRS     R3,R0,#+8
   \       0x18   0xE7CA'1413        BFI      R1,R3,#+8,#+3
     77          	cfg.bfield.rttwken = (config & SHDW_MR_RTTWKEN) ? 1 : 0;
   \       0x1C   0xE1B0'3820        LSRS     R3,R0,#+16
   \       0x20   0xE7D0'1813        BFI      R1,R3,#+16,#+1
     78          	cfg.bfield.rtcwken = (config & SHDW_MR_RTCWKEN) ? 1 : 0;
   \       0x24   0xE1B0'38A0        LSRS     R3,R0,#+17
   \       0x28   0xE7D1'1893        BFI      R1,R3,#+17,#+1
     79          	cfg.bfield.accwken = (config & SHDW_MR_ACCWKEN) ? 1 : 0;
   \       0x2C   0xE1B0'3920        LSRS     R3,R0,#+18
   \       0x30   0xE7D2'1913        BFI      R1,R3,#+18,#+1
     80          	cfg.bfield.rxlpwken = (config & SHDW_MR_RXLPWKEN) ? 1 : 0;
   \       0x34   0xE1B0'39A0        LSRS     R3,R0,#+19
   \       0x38   0xE7D3'1993        BFI      R1,R3,#+19,#+1
     81          	cfg.bfield.wkupdbc = (config & SHDW_MR_WKUPDBC_Msk) >> SHDW_MR_WKUPDBC_Pos;
   \       0x3C   0xE1B0'3C20        LSRS     R3,R0,#+24
   \       0x40   0xE7DA'1C13        BFI      R1,R3,#+24,#+3
     82          
     83          	SHDWC->SHDW_MR = cfg.uint32_value;
   \       0x44   0xE582'1000        STR      R1,[R2, #+0]
     84          }
   \       0x48   0xE12F'FF1E        BX       LR               ;; return
     85          

   \                                 In section SOFTPACK, align 4, keep-with-next
     86          void shdwc_set_wakeup_input(uint32_t input_enable, uint32_t input_type)
     87          {
     88          	uint32_t wuir = (input_enable & 0x0000FFFF) | (input_type & 0xFFFF0000);
   \                     shdwc_set_wakeup_input:
   \        0x0   0xE680'2011        PKHBT    R2,R0,R1
     89          
     90          	SHDWC->SHDW_WUIR = wuir;
   \        0x4   0x....'....        LDR      R3,??DataTable4_1  ;; 0xf804801c
   \        0x8   0xE583'2000        STR      R2,[R3, #+0]
     91          }
   \        0xC   0xE12F'FF1E        BX       LR               ;; return
     92          

   \                                 In section SOFTPACK, align 4, keep-with-next
     93          void shdwc_set_wakeup_debounce(uint32_t debounce)
     94          {
     95          	SHDWC->SHDW_MR = (SHDWC->SHDW_MR & ~SHDW_MR_WKUPDBC_Msk)
     96          	               | (debounce & SHDW_MR_WKUPDBC_Msk);
   \                     shdwc_set_wakeup_debounce:
   \        0x0   0x....'....        LDR      R1,??DataTable4  ;; 0xf8048014
   \        0x4   0xE591'2000        LDR      R2,[R1, #+0]
   \        0x8   0xE3D2'2670        BICS     R2,R2,#0x7000000
   \        0xC   0xE210'3670        ANDS     R3,R0,#0x7000000
   \       0x10   0xE193'2002        ORRS     R2,R3,R2
   \       0x14   0xE581'2000        STR      R2,[R1, #+0]
     97          }
   \       0x18   0xE12F'FF1E        BX       LR               ;; return
     98          #endif
     99          

   \                                 In section SOFTPACK, align 4, keep-with-next
    100          void shdwc_configure_wakeup(void)
    101          {
   \                     shdwc_configure_wakeup:
   \        0x0   0xE92D'5000        PUSH     {R12,LR}
    102          #ifdef CONFIG_SOC_SAMA5D2
    103                 shdwc_set_wakeup_input(SHDW_WUIR_WKUPEN0_ENABLE, SHDW_WUIR_WKUPT0_LOW);
   \        0x4   0xE3A0'1000        MOV      R1,#+0
   \        0x8   0xE3A0'0001        MOV      R0,#+1
   \        0xC   0x....'....        BL       shdwc_set_wakeup_input
    104                 shdwc_configure_wakeup_mode(0);
   \       0x10   0xE3A0'0000        MOV      R0,#+0
   \       0x14   0x....'....        BL       shdwc_configure_wakeup_mode
    105          #elif defined(CONFIG_SOC_SAMA5D3) || defined(CONFIG_SOC_SAMA5D4) || defined(CONFIG_SOC_SAM9XX5)
    106                 SHDWC->SHDW_MR = SHDW_MR_WKMODE0_FALLING_EDGE | SHDW_MR_CPTWK0(0x8);
    107          #elif defined(CONFIG_SOC_SAM9X60)
    108                 SHDWC->SHDW_WUIR = SHDW_WUIR_WKUPEN0 | SHDW_WUIR_WKUPT0_LOW;
    109          #endif
    110          }
   \       0x18   0xE8BD'8001        POP      {R0,PC}          ;; return
    111          

   \                                 In section SOFTPACK, align 4, keep-with-next
    112          void shdwc_do_shutdown(void)
    113          {
    114          	SHDWC->SHDW_CR = SHDW_CR_KEY_PASSWD | SHDW_CR_SHDW;
   \                     shdwc_do_shutdown:
   \        0x0   0xE3A0'0001        MOV      R0,#+1
   \        0x4   0xE380'04A5        ORR      R0,R0,#0xA5000000
   \        0x8   0x....'....        LDR      R1,??DataTable4_2  ;; 0xf8048010
   \        0xC   0xE581'0000        STR      R0,[R1, #+0]
    115          }
   \       0x10   0xE12F'FF1E        BX       LR               ;; return
    116          

   \                                 In section SOFTPACK, align 4, keep-with-next
    117          uint32_t shdwc_get_status(void)
    118          {
    119          	return SHDWC->SHDW_SR;
   \                     shdwc_get_status:
   \        0x0   0x....'....        LDR      R0,??DataTable4_3  ;; 0xf8048018
   \        0x4   0xE590'0000        LDR      R0,[R0, #+0]
   \        0x8   0xE12F'FF1E        BX       LR               ;; return
    120          }

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4:
   \        0x0   0xF804'8014        DC32     0xf8048014

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_1:
   \        0x0   0xF804'801C        DC32     0xf804801c

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_2:
   \        0x0   0xF804'8010        DC32     0xf8048010

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_3:
   \        0x0   0xF804'8018        DC32     0xf8048018

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   shdwc_configure_wakeup
         8   -> shdwc_configure_wakeup_mode
         8   -> shdwc_set_wakeup_input
       0   shdwc_configure_wakeup_mode
       0   shdwc_do_shutdown
       0   shdwc_get_status
       0   shdwc_set_wakeup_debounce
       0   shdwc_set_wakeup_input


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
      28  shdwc_configure_wakeup
      76  shdwc_configure_wakeup_mode
      20  shdwc_do_shutdown
      12  shdwc_get_status
      28  shdwc_set_wakeup_debounce
      16  shdwc_set_wakeup_input

 
 196 bytes in section SOFTPACK
 
 196 bytes of CODE memory

Errors: none
Warnings: none
