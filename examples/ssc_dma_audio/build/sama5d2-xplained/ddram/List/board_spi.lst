###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         01/Dec/2020  16:42:54
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode                        
#    Endian                       =  little
#    Source file                  =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\target\common\board_spi.c
#    Command line                 =
#        -f C:\Users\c40450\AppData\Local\Temp\EW6F78.tmp
#        (C:\work\AtmelSoftPAck\atmel-software-package-2.17\target\common\board_spi.c
#        -D "SOFTPACK_VERSION=\"2.17\"" -D TRACE_LEVEL=5 -D VARIANT_DDRAM -D
#        CONFIG_ARCH_ARMV7A -D CONFIG_ARCH_ARM -D CONFIG_SOC_SAMA5D2 -D
#        CONFIG_CHIP_SAMA5D27 -D CONFIG_PACKAGE_289PIN -D
#        CONFIG_BOARD_SAMA5D2_XPLAINED -D CONFIG_HAVE_AIC5 -D
#        CONFIG_HAVE_FLEXCOM -D CONFIG_HAVE_PIO4 -D CONFIG_HAVE_PIO4_SECURE -D
#        CONFIG_HAVE_NFC -D CONFIG_HAVE_PIT -D CONFIG_HAVE_SMC -D
#        CONFIG_HAVE_SMC_SCRAMBLING -D CONFIG_HAVE_GMAC_QUEUES -D
#        CONFIG_HAVE_MPDDRC -D CONFIG_HAVE_MPDDRC_DATA_PATH -D
#        CONFIG_HAVE_MPDDRC_IO_CALIBRATION -D CONFIG_HAVE_MPDDRC_DDR2 -D
#        CONFIG_HAVE_MPDDRC_LPDDR2 -D CONFIG_HAVE_MPDDRC_DDR3 -D
#        CONFIG_HAVE_MPDDRC_LPDDR3 -D CONFIG_HAVE_ADC_SETTLING_TIME -D
#        CONFIG_HAVE_ADC_DIFF_INPUT -D CONFIG_HAVE_ADC_SEQ_R2 -D
#        CONFIG_HAVE_PMC_FAST_STARTUP -D CONFIG_HAVE_PMC_GENERATED_CLOCKS -D
#        CONFIG_HAVE_PMC_AUDIO_CLOCK -D CONFIG_HAVE_PMC_PLLADIV2 -D
#        CONFIG_HAVE_PMC_H32MXDIV -D CONFIG_HAVE_PMC_UPLL_BIAS -D
#        CONFIG_HAVE_SCKC -D CONFIG_HAVE_PWMC_DMA -D
#        CONFIG_HAVE_PWMC_SPREAD_SPECTRUM -D CONFIG_HAVE_PWMC_EXTERNAL_TRIGGER
#        -D CONFIG_HAVE_PWMC_FAULT_PROT_HIZ -D CONFIG_HAVE_PWMC_STEPPER_MOTOR
#        -D CONFIG_HAVE_PWMC_CMP_UNIT -D CONFIG_HAVE_PWMC_SYNC_MODE -D
#        CONFIG_HAVE_PWMC_OOV -D CONFIG_HAVE_PWMC_FMODE -D CONFIG_HAVE_PWMC_WP
#        -D CONFIG_HAVE_PWMC_DTIME -D CONFIG_HAVE_PWMC_ELINE -D
#        CONFIG_HAVE_SFRBU -D CONFIG_HAVE_L2CC -D CONFIG_HAVE_SAIC -D
#        CONFIG_HAVE_XDMAC -D CONFIG_HAVE_XDMAC_DATA_WIDTH_DWORD -D
#        CONFIG_HAVE_SECUMOD -D CONFIG_HAVE_SFC -D CONFIG_HAVE_PWMC -D
#        CONFIG_HAVE_SECURE_MATRIX -D CONFIG_HAVE_DDR3_MT41K128M16 -D
#        CONFIG_HAVE_RSTC_CONFIGURABLE_USER_RESET -D CONFIG_HAVE_TC_FAULT_MODE
#        -D CONFIG_HAVE_TC_DMA_MODE -D CONFIG_HAVE_RTC_CALIBRATION -D
#        CONFIG_HAVE_RTC_MODE_PERSIAN -D CONFIG_HAVE_RTC_MODE_UTC -D
#        CONFIG_HAVE_RTC_TAMPER -D CONFIG_HAVE_AUDIO -D
#        CONFIG_HAVE_AUDIO_WM8731 -D CONFIG_HAVE_SSC -D CONFIG_HAVE_CLASSD -D
#        CONFIG_HAVE_PDMIC -D CONFIG_HAVE_SHDWC -D CONFIG_HAVE_SPI -D
#        CONFIG_HAVE_SPI_FIFO -D CONFIG_HAVE_MMU -D CONFIG_HAVE_L1CACHE -D
#        CONFIG_HAVE_L2CACHE -D CONFIG_HAVE_SPI_BUS -D CONFIG_HAVE_UART -D
#        CONFIG_HAVE_SERIALD_UART -D CONFIG_HAVE_USART -D
#        CONFIG_HAVE_USART_FIFO -D CONFIG_HAVE_I2C_BUS --preprocess
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\build\sama5d2-xplained\ddram\List
#        -lC
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\build\sama5d2-xplained\ddram\List
#        --diag_suppress Pa050 -o
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\build\sama5d2-xplained\ddram\Obj
#        --debug --endian=little --cpu=Cortex-A5 -e --fpu=VFPv4_D16
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\..\..\arch\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\..\..\utils\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\..\..\target\common\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\..\..\target\sama5d2\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\..\..\drivers\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\..\..\lib\
#        --section .text=SOFTPACK --cpu_mode arm -Oh)
#    Locale                       =  C
#    List file                    =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\build\sama5d2-xplained\ddram\List\board_spi.lst
#    Object file                  =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\build\sama5d2-xplained\ddram\Obj\board_spi.o
#    Runtime model:                  
#      __SystemLibrary            =  DLib
#      __dlib_file_descriptor     =  0
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#      __iar_require _Printf         
#
###############################################################################

C:\work\AtmelSoftPAck\atmel-software-package-2.17\target\common\board_spi.c
      1          /* ----------------------------------------------------------------------------
      2           *         SAM Software Package License
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2016, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /*----------------------------------------------------------------------------
     31           *        Headers
     32           *----------------------------------------------------------------------------*/
     33          
     34          #include "board_spi.h"
     35          #include "errno.h"
     36          #include "gpio/pio.h"
     37          #include "nvm/spi-nor/spi-nor.h"
     38          #include "peripherals/bus.h"
     39          #include "trace.h"
     40          
     41          /*----------------------------------------------------------------------------
     42           *        Local variables
     43           *----------------------------------------------------------------------------*/
     44          
     45          #if defined(CONFIG_HAVE_SPI_AT25) && defined(CONFIG_HAVE_QSPI)
     46          static struct spi_flash _spi_flash[2];
     47          #else

   \                                 In section .bss, align 8
     48          static struct spi_flash _spi_flash[1];
   \                     _spi_flash:
   \        0x0                      DS8 184
     49          #endif
     50          

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x2D 0x46          DC8 "-F- spi-nor: device%d: not configured\015\012"

   \              0x2D 0x20    

   \              0x73 0x70    

   \              0x69 0x2D    

   \              0x6E 0x6F    

   \              0x72 0x3A    

   \              0x20 0x64    

   \              0x65 0x76    

   \              0x69 0x63    

   \              0x65 0x25    

   \              0x64 0x3A    

   \              0x20 0x6E    

   \              0x6F 0x74    

   \              0x20 0x63    

   \              0x6F 0x6E    

   \              0x66 0x69    

   \              0x67 0x75    

   \              0x72 0x65    

   \              0x64 0x0D    

   \              0x0A 0x00
   \       0x28   0x01 0x00          DC8 1, 0, 0, 0

   \              0x00 0x00
   \       0x2C   0x0000'9C40        DC32 40'000
   \       0x30   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
   \       0x3C   0x0000'0000        DC32 0, 0, 0

   \              0x0000'0000  

   \              0x0000'0000
   \       0x48   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00
   \       0x5D   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00
     51          static const struct spi_flash_cfg _spi_flash_cfg[] = {
     52          #if defined(CONFIG_HAVE_QSPI) && defined(BOARD_QSPIFLASH_ADDR)
     53          	{
     54          		.type = SPI_FLASH_TYPE_QSPI,
     55          		.baudrate = BOARD_QSPIFLASH_BAUDRATE,
     56          		.mode = SPI_FLASH_MODE0,
     57          		.qspi = {
     58          			.addr = BOARD_QSPIFLASH_ADDR,
     59          		},
     60          	},
     61          #endif
     62          #ifdef BOARD_AT25_BUS
     63          	{
     64          		.type = SPI_FLASH_TYPE_SPI,
     65          		.baudrate = BOARD_AT25_BITRATE,
     66          		.mode = BOARD_AT25_SPI_MODE,
                 		        ^
Warning[Pe188]: enumerated type mixed with another type
     67          		.spi = {
     68          			.bus_cfg = {
     69          				.bus = BOARD_AT25_BUS,
     70          				.spi_dev = {
     71          					.chip_select = BOARD_AT25_CHIP_SELECT,
     72          					.delay = {
     73          						.bs = BOARD_AT25_DLYBS,
     74          						.bct = BOARD_AT25_DLYBCT,
     75          					},
     76          				},
     77          			},
     78          		},
     79          	},
     80          #endif
     81          	{ 0 },
                 	  ^
Warning[Pe188]: enumerated type mixed with another type
     82          };
     83          
     84          /*----------------------------------------------------------------------------
     85           *        Exported functions
     86           *----------------------------------------------------------------------------*/
     87          

   \                                 In section SOFTPACK, align 4, keep-with-next
     88          void board_cfg_spi_bus(void)
     89          {
   \                     board_cfg_spi_bus:
   \        0x0   0xE92D'5000        PUSH     {R12,LR}
     90          #ifdef BOARD_SPI_BUS0
     91          	const struct _pin pins_spi_bus0[] = BOARD_SPI_BUS0_PINS;
     92          	const struct _bus_iface iface_bus0 = {
     93          		.type = BUS_TYPE_SPI,
     94          		.spi = {
     95          			.hw = BOARD_SPI_BUS0,
     96          		},
     97          		.transfer_mode = BOARD_SPI_BUS0_MODE,
     98          	};
     99          	pio_configure(pins_spi_bus0, ARRAY_SIZE(pins_spi_bus0));
   \        0x4   0xE3A0'1002        MOV      R1,#+2
   \        0x8   0x....'....        ADR      R0,`board_cfg_spi_bus::pins_spi_bus0`
   \        0xC   0x....'....        BL       pio_configure
    100          	bus_configure(BUS(BUS_TYPE_SPI, 0), &iface_bus0);
   \       0x10   0x....'....        ADR      R1,`board_cfg_spi_bus::iface_bus0`
   \       0x14   0xE3A0'0000        MOV      R0,#+0
   \       0x18   0x....'....        BL       bus_configure
    101          #endif
    102          #ifdef BOARD_SPI_BUS1
    103          	const struct _pin pins_spi_bus1[] = BOARD_SPI_BUS1_PINS;
    104          	const struct _bus_iface iface_bus1 = {
    105          		.type = BUS_TYPE_SPI,
    106          		.spi = {
    107          			.hw = BOARD_SPI_BUS1,
    108          		},
    109          		.transfer_mode = BOARD_SPI_BUS1_MODE,
    110          	};
    111          	pio_configure(pins_spi_bus1, ARRAY_SIZE(pins_spi_bus1));
   \       0x1C   0xE3A0'1002        MOV      R1,#+2
   \       0x20   0x....'....        ADR      R0,`board_cfg_spi_bus::pins_spi_bus1`
   \       0x24   0x....'....        BL       pio_configure
    112          	bus_configure(BUS(BUS_TYPE_SPI, 1), &iface_bus1);
   \       0x28   0xE8BD'4004        POP      {R2,LR}
   \       0x2C   0x....'....        ADR      R1,`board_cfg_spi_bus::iface_bus1`
   \       0x30   0xE3A0'0001        MOV      R0,#+1
   \       0x34   0x....'....        B        bus_configure    ;; tailcall
    113          #endif
    114          #ifdef BOARD_SPI_BUS2
    115          	const struct _pin pins_spi_bus2[] = BOARD_SPI_BUS2_PINS;
    116          	const struct _bus_iface iface_bus2 = {
    117          		.type = BUS_TYPE_SPI,
    118          		.spi = {
    119          			.hw = BOARD_SPI_BUS2,
    120          		},
    121          		.transfer_mode = BOARD_SPI_BUS2_MODE,
    122          	};
    123          	pio_configure(pins_spi_bus2, ARRAY_SIZE(pins_spi_bus2));
    124          	bus_configure(BUS(BUS_TYPE_SPI, 2), &iface_bus2);
    125          #endif
    126          #ifdef BOARD_SPI_BUS3
    127          	const struct _pin pins_spi_bus3[] = BOARD_SPI_BUS3_PINS;
    128          	const struct _bus_iface iface_bus3 = {
    129          		.type = BUS_TYPE_SPI,
    130          		.spi = {
    131          			.hw = BOARD_SPI_BUS3,
    132          		},
    133          		.transfer_mode = BOARD_SPI_BUS3_MODE,
    134          	};
    135          	pio_configure(pins_spi_bus3, ARRAY_SIZE(pins_spi_bus3));
    136          	bus_configure(BUS(BUS_TYPE_SPI, 3), &iface_bus3);
    137          #endif
    138          #ifdef BOARD_SPI_BUS4
    139          	const struct _pin pins_spi_bus4[] = BOARD_SPI_BUS4_PINS;
    140          	const struct _bus_iface iface_bus4 = {
    141          		.type = BUS_TYPE_SPI,
    142          		.spi = {
    143          			.hw = BOARD_SPI_BUS4,
    144          		},
    145          		.transfer_mode = BOARD_SPI_BUS4_MODE,
    146          	};
    147          	pio_configure(pins_spi_bus4, ARRAY_SIZE(pins_spi_bus4));
    148          	bus_configure(BUS(BUS_TYPE_SPI, 4), &iface_bus4);
    149          #endif
    150          #ifdef BOARD_SPI_BUS5
    151          	const struct _pin pins_spi_bus5[] = BOARD_SPI_BUS5_PINS;
    152          	const struct _bus_iface iface_bus5 = {
    153          		.type = BUS_TYPE_SPI,
    154          		.spi = {
    155          			.hw = BOARD_SPI_BUS5,
    156          		},
    157          		.transfer_mode = BOARD_SPI_BUS5_MODE,
    158          	};
    159          	pio_configure(pins_spi_bus5, ARRAY_SIZE(pins_spi_bus5));
    160          	bus_configure(BUS(BUS_TYPE_SPI, 5), &iface_bus5);
    161          #endif
    162          }

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     `board_cfg_spi_bus::pins_spi_bus0`:
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \        0x4   0x0001'C000        DC32 114'688
   \        0x8   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \        0xC   0x0000'0000        DC32 0
   \       0x10   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \       0x14   0x0002'0000        DC32 131'072
   \       0x18   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \       0x1C   0x0000'0001        DC32 1

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     `board_cfg_spi_bus::iface_bus0`:
   \        0x0   0x02 0x00          DC8 2, 0, 0, 0

   \              0x00 0x00
   \        0x4   0xF800'0000        DC32 0xf800'0000
   \        0x8   0x00 0x00          DC8 0, 0, 0, 0, 2, 0, 0, 0

   \              0x00 0x00    

   \              0x02 0x00    

   \              0x00 0x00

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     `board_cfg_spi_bus::pins_spi_bus1`:
   \        0x0   0x03 0x00          DC8 3, 0, 0, 0

   \              0x00 0x00
   \        0x4   0x0E00'0000        DC32 234'881'024
   \        0x8   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \        0xC   0x0000'0000        DC32 0
   \       0x10   0x03 0x00          DC8 3, 0, 0, 0

   \              0x00 0x00
   \       0x14   0x2000'0000        DC32 536'870'912
   \       0x18   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \       0x1C   0x0000'0001        DC32 1

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     `board_cfg_spi_bus::iface_bus1`:
   \        0x0   0x02 0x00          DC8 2, 0, 0, 0

   \              0x00 0x00
   \        0x4   0xFC00'0000        DC32 0xfc00'0000
   \        0x8   0x00 0x00          DC8 0, 0, 0, 0, 2, 0, 0, 0

   \              0x00 0x00    

   \              0x02 0x00    

   \              0x00 0x00
    163          

   \                                 In section SOFTPACK, align 4, keep-with-next
    164          void board_cfg_spi_flash(void)
    165          {
   \                     board_cfg_spi_flash:
   \        0x0   0xE92D'4038        PUSH     {R3-R5,LR}
    166          	int i;
    167          
    168          #ifdef BOARD_QSPIFLASH_PINS
    169          	struct _pin pins_qspi[] = BOARD_QSPIFLASH_PINS;
   \        0x4   0x....'....        ADR      R3,?_1
   \        0x8   0xE893'5030        LDM      R3,{R4,R5,R12,LR}
   \        0xC   0xE24D'D010        SUB      SP,SP,#+16
    170          
    171          	pio_configure(pins_qspi, ARRAY_SIZE(pins_qspi));
   \       0x10   0xE3A0'1001        MOV      R1,#+1
   \       0x14   0xE1A0'200D        MOV      R2,SP
   \       0x18   0xE1A0'000D        MOV      R0,SP
   \       0x1C   0xE882'5030        STM      R2,{R4,R5,R12,LR}
   \       0x20   0x....'....        BL       pio_configure
    172          #endif
    173          
    174          	for (i = 0; i < ARRAY_SIZE(_spi_flash) && _spi_flash_cfg[i].type != 0; i++) {
   \       0x24   0x....'....        LDR      R4,??DataTable7
    175          		if (spi_nor_configure(&_spi_flash[i], &_spi_flash_cfg[i]) < 0)
   \       0x28   0xE284'1028        ADD      R1,R4,#+40
   \       0x2C   0x....'....        LDR      R0,??DataTable7_1
   \       0x30   0x....'....        BL       spi_nor_configure
   \       0x34   0xE350'0000        CMP      R0,#+0
   \       0x38   0x5A00'0007        BPL      ??board_cfg_spi_flash_0
    176          			trace_fatal("spi-nor: device%d: not configured\r\n", i);
   \       0x3C   0x....'....        LDR      R0,??DataTable7_2
   \       0x40   0xE590'1000        LDR      R1,[R0, #+0]
   \       0x44   0xE351'0000        CMP      R1,#+0
   \       0x48   0x0A00'0002        BEQ      ??board_cfg_spi_flash_1
   \       0x4C   0xE3A0'1000        MOV      R1,#+0
   \       0x50   0xE1A0'0004        MOV      R0,R4
   \       0x54   0x....'....        BL       printf
   \                     ??board_cfg_spi_flash_1:
   \       0x58   0xEAFF'FFFE        B        ??board_cfg_spi_flash_1
    177          	}
    178          }
   \                     ??board_cfg_spi_flash_0:
   \       0x5C   0xE28D'D014        ADD      SP,SP,#+20
   \       0x60   0xE8BD'8030        POP      {R4,R5,PC}       ;; return
    179          

   \                                 In section SOFTPACK, align 4, keep-with-next
    180          struct spi_flash * board_get_spi_flash(uint8_t idx)
    181          {
    182          	if (idx < ARRAY_SIZE(_spi_flash))
   \                     board_get_spi_flash:
   \        0x0   0xE350'0000        CMP      R0,#+0
    183          		return &_spi_flash[idx];
   \        0x4   0x....'....        LDREQ    R0,??DataTable7_1
    184          
    185          	return NULL;
   \        0x8   0x13A0'0000        MOVNE    R0,#+0
   \        0xC   0xE12F'FF1E        BX       LR               ;; return
    186          }

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable7:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable7_1:
   \        0x0   0x....'....        DC32     _spi_flash

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable7_2:
   \        0x0   0x....'....        DC32     trace_level

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_1:
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \        0x4   0x0FC0'0000        DC32 264'241'152
   \        0x8   0x05 0x00          DC8 5, 0, 0, 0

   \              0x00 0x00
   \        0xC   0x0000'0001        DC32 1

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   board_cfg_spi_bus
         0   -> bus_configure
         8   -> bus_configure
         8   -> pio_configure
      32   board_cfg_spi_flash
        32   -> pio_configure
        32   -> printf
        32   -> spi_nor_configure
       0   board_get_spi_flash


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
      16  ?_1
     184  _spi_flash
     112  _spi_flash_cfg
      56  board_cfg_spi_bus
     100  board_cfg_spi_flash
      16  board_get_spi_flash
      16  iface_bus0
      16  iface_bus1
      32  pins_spi_bus0
      32  pins_spi_bus1

 
 184 bytes in section .bss
 112 bytes in section .rodata
 296 bytes in section SOFTPACK
 
 296 bytes of CODE  memory
 112 bytes of CONST memory
 184 bytes of DATA  memory

Errors: none
Warnings: 2
