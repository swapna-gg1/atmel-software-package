###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         01/Dec/2020  17:55:56
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode                    
#    Endian                   =  little
#    Source file              =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\main.c
#    Command line             =
#        -f C:\Users\c40450\AppData\Local\Temp\EW4A56.tmp
#        (C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\main.c
#        -D "SOFTPACK_VERSION=\"2.17\"" -D TRACE_LEVEL=5 -D VARIANT_DDRAM -D
#        CONFIG_ARCH_ARMV7A -D CONFIG_ARCH_ARM -D CONFIG_SOC_SAMA5D2 -D
#        CONFIG_CHIP_SAMA5D27 -D CONFIG_PACKAGE_289PIN -D
#        CONFIG_BOARD_SAMA5D2_XPLAINED -D CONFIG_HAVE_AIC5 -D
#        CONFIG_HAVE_FLEXCOM -D CONFIG_HAVE_PIO4 -D CONFIG_HAVE_PIO4_SECURE -D
#        CONFIG_HAVE_NFC -D CONFIG_HAVE_PIT -D CONFIG_HAVE_SMC -D
#        CONFIG_HAVE_SMC_SCRAMBLING -D CONFIG_HAVE_GMAC_QUEUES -D
#        CONFIG_HAVE_MPDDRC -D CONFIG_HAVE_MPDDRC_DATA_PATH -D
#        CONFIG_HAVE_MPDDRC_IO_CALIBRATION -D CONFIG_HAVE_MPDDRC_DDR2 -D
#        CONFIG_HAVE_MPDDRC_LPDDR2 -D CONFIG_HAVE_MPDDRC_DDR3 -D
#        CONFIG_HAVE_MPDDRC_LPDDR3 -D CONFIG_HAVE_ADC_SETTLING_TIME -D
#        CONFIG_HAVE_ADC_DIFF_INPUT -D CONFIG_HAVE_ADC_SEQ_R2 -D
#        CONFIG_HAVE_PMC_FAST_STARTUP -D CONFIG_HAVE_PMC_GENERATED_CLOCKS -D
#        CONFIG_HAVE_PMC_AUDIO_CLOCK -D CONFIG_HAVE_PMC_PLLADIV2 -D
#        CONFIG_HAVE_PMC_H32MXDIV -D CONFIG_HAVE_PMC_UPLL_BIAS -D
#        CONFIG_HAVE_SCKC -D CONFIG_HAVE_PWMC_DMA -D
#        CONFIG_HAVE_PWMC_SPREAD_SPECTRUM -D CONFIG_HAVE_PWMC_EXTERNAL_TRIGGER
#        -D CONFIG_HAVE_PWMC_FAULT_PROT_HIZ -D CONFIG_HAVE_PWMC_STEPPER_MOTOR
#        -D CONFIG_HAVE_PWMC_CMP_UNIT -D CONFIG_HAVE_PWMC_SYNC_MODE -D
#        CONFIG_HAVE_PWMC_OOV -D CONFIG_HAVE_PWMC_FMODE -D CONFIG_HAVE_PWMC_WP
#        -D CONFIG_HAVE_PWMC_DTIME -D CONFIG_HAVE_PWMC_ELINE -D
#        CONFIG_HAVE_SFRBU -D CONFIG_HAVE_L2CC -D CONFIG_HAVE_SAIC -D
#        CONFIG_HAVE_XDMAC -D CONFIG_HAVE_XDMAC_DATA_WIDTH_DWORD -D
#        CONFIG_HAVE_SECUMOD -D CONFIG_HAVE_SFC -D CONFIG_HAVE_PWMC -D
#        CONFIG_HAVE_SECURE_MATRIX -D CONFIG_HAVE_DDR3_MT41K128M16 -D
#        CONFIG_HAVE_RSTC_CONFIGURABLE_USER_RESET -D CONFIG_HAVE_TC_FAULT_MODE
#        -D CONFIG_HAVE_TC_DMA_MODE -D CONFIG_HAVE_RTC_CALIBRATION -D
#        CONFIG_HAVE_RTC_MODE_PERSIAN -D CONFIG_HAVE_RTC_MODE_UTC -D
#        CONFIG_HAVE_RTC_TAMPER -D CONFIG_HAVE_AUDIO -D
#        CONFIG_HAVE_AUDIO_WM8731 -D CONFIG_HAVE_SSC -D CONFIG_HAVE_CLASSD -D
#        CONFIG_HAVE_PDMIC -D CONFIG_HAVE_SHDWC -D CONFIG_HAVE_SPI -D
#        CONFIG_HAVE_SPI_FIFO -D CONFIG_HAVE_MMU -D CONFIG_HAVE_L1CACHE -D
#        CONFIG_HAVE_L2CACHE -D CONFIG_HAVE_SPI_BUS -D CONFIG_HAVE_UART -D
#        CONFIG_HAVE_SERIALD_UART -D CONFIG_HAVE_USART -D
#        CONFIG_HAVE_USART_FIFO -D CONFIG_HAVE_I2C_BUS --preprocess
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\build\sama5d2-xplained\ddram\List
#        -lC
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\build\sama5d2-xplained\ddram\List
#        --diag_suppress Pa050 -o
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\build\sama5d2-xplained\ddram\Obj
#        --debug --endian=little --cpu=Cortex-A5 -e --fpu=VFPv4_D16
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\..\..\arch\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\..\..\utils\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\..\..\target\common\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\..\..\target\sama5d2\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\..\..\drivers\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\..\..\lib\
#        --section .text=SOFTPACK --cpu_mode arm -Oh)
#    Locale                   =  C
#    List file                =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\build\sama5d2-xplained\ddram\List\main.lst
#    Object file              =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\build\sama5d2-xplained\ddram\Obj\main.o
#    Runtime model:              
#      __SystemLibrary        =  DLib
#      __dlib_file_descriptor =  0
#      __dlib_version         =  6
#      __iar_require _Printf     
#
###############################################################################

C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\main.c
      1          /* ----------------------------------------------------------------------------
      2           *         SAM Software Package License
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2016, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /**
     31           * \page ssc_dma_audio SSC with DMA Audio Example
     32           *
     33           * \section Purpose
     34           *
     35           * This example uses the Synchronous Serial Controller (SSC) of SAMA5D3/4
     36           * and SAM9XX5 microcontroller to output an audio stream through the on-board
     37           * WM8904/WM8731 CODEC.
     38           *
     39           * \section Requirements
     40           *
     41           * \section Description
     42           * This program plays a WAV file from PC via Line-In. The audio stream is
     43           * sent through the SSC interface connected to the on-board audio codec, enabling
     44           * the sound to be audible using a pair of headphones.
     45           *
     46           * \section Usage
     47           * -# Build the program and download it inside the evaluation board. Please
     48           *    refer to the
     49           *    <a href="http://www.atmel.com/dyn/resources/prod_documents/6421B.pdf">
     50           *    SAM-BA User Guide</a>, the
     51           *    <a href="http://www.atmel.com/dyn/resources/prod_documents/doc6310.pdf">
     52           *    GNU-Based Software Development</a> application note or to the
     53           *    <a href="ftp://ftp.iar.se/WWWfiles/arm/Guides/EWARM_UserGuide.ENU.pdf">
     54           *    IAR EWARM User Guide</a>, depending on your chosen solution.
     55           * -# On the computer, open and configure a terminal application
     56           *    (e.g. HyperTerminal on Microsoft Windows) with these settings:
     57           *   - 115200 bauds
     58           *   - 8 bits of data
     59           *   - No parity
     60           *   - 1 stop bit
     61           *   - No flow control
     62           * -# Start the application.
     63           * -# In the terminal window, the following text should appear:
     64           *    \code
     65           *     -- SSC DMA Audio Example xxx --
     66           *      -- SAMxxxxx-xx
     67           *     -- Compiled: xxx xx xxxx xx:xx:xx --
     68           *    \endcode
     69           * The user can then choose any of the available options to perform the described action.
     70           *
     71           * \section References
     72           * - ssc_dma_audio/main.c
     73           * - ssc.c
     74           * - wm8904.c
     75           * - wm8731.c
     76           * - dma.c
     77           */
     78          
     79          /**
     80           * \file
     81           *
     82           * This file contains all the specific code for the ssc audio example.
     83           */
     84          
     85          
     86          /*----------------------------------------------------------------------------
     87           *        Headers
     88           *----------------------------------------------------------------------------*/
     89          
     90          #include <stdio.h>
     91          #include <stdbool.h>
     92          #include <stdint.h>
     93          #include <string.h>
     94          #include <assert.h>
     95          
     96          #include "audio/ssc.h"
     97          #if defined(CONFIG_HAVE_AUDIO_WM8904)
     98          #include "audio/wm8904.h"
     99          #elif defined(CONFIG_HAVE_AUDIO_WM8731)
    100          #include "audio/wm8731.h"
    101          #endif
    102          #include "audio/wm8731.h"
    103          #include "board.h"
    104          #include "chip.h"
    105          #include "compiler.h"
    106          #include "dma/dma.h"
    107          #include "gpio/pio.h"
    108          #include "led/led.h"
    109          #include "mm/cache.h"
    110          #include "peripherals/pit.h"
    111          #include "peripherals/pmc.h"
    112          #include "serial/console.h"
    113          #include "timer.h"
    114          #include "trace.h"
    115          
    116          #if defined(CONFIG_BOARD_SAMA5D3_EK)
    117          	#include "config_sama5d3-ek.h"
    118          #elif defined(CONFIG_BOARD_SAMA5D4_EK)
    119          	#include "config_sama5d4-ek.h"
    120          #elif defined(CONFIG_BOARD_SAM9G15_EK)
    121          	#include "config_sam9xx5-ek.h"
    122          #elif defined(CONFIG_BOARD_SAM9G25_EK)
    123          	#include "config_sam9xx5-ek.h"
    124          #elif defined(CONFIG_BOARD_SAM9G35_EK)
    125          	#include "config_sam9xx5-ek.h"
    126          #elif defined(CONFIG_BOARD_SAM9X25_EK)
    127          	#include "config_sam9xx5-ek.h"
    128          #elif defined(CONFIG_BOARD_SAM9X35_EK)
    129          	#include "config_sam9xx5-ek.h"
    130          #elif defined(CONFIG_BOARD_SAMV71_XPLAINED)
    131          	#include "config_samv71-xplained.h"
    132          #elif defined(CONFIG_BOARD_SAMA5D2_XPLAINED)
    133                  #include "config_sama5d2-xplained.h"
    134          #else
    135          #error Unsupported board!
    136          #endif
    137          #include "music_data.h"
    138          /*----------------------------------------------------------------------------
    139           *         Definitions
    140           *----------------------------------------------------------------------------*/
    141          
    142          #define BUFFERS (32)
    143          
    144          #define BUFFER_SIZE ROUND_UP_MULT(192, L1_CACHE_BYTES)
    145          
    146          #define BUFFER_THRESHOLD (8)
    147          
    148          /*----------------------------------------------------------------------------
    149           *         Internal variables
    150           *----------------------------------------------------------------------------*/
    151          
    152          /** Audio record buffer */

   \                                 In section .region_cache_aligned, align 32
    153          CACHE_ALIGNED_DDR static uint16_t _sound_buffer[BUFFERS][BUFFER_SIZE];
   \                     _sound_buffer:
   \        0x0                      DS8 12'288

   \                                 In section .data, align 4
    154          
    155          static struct _audio_ctx {
    156          	uint32_t threshold;
    157          	struct {
    158          		uint16_t rx;
    159          		uint16_t tx;
    160          		uint32_t count;
    161          	} circ;
    162          	uint8_t volume;
    163          	bool playing;
    164          	bool recording;
    165          } _audio_ctx = {
   \                     _audio_ctx:
   \        0x0   0x0000'0008        DC32 8
   \        0x4   0x0000 0x0000      DC16 0, 0
   \        0x8   0x0000'0000        DC32 0
   \        0xC   0x1E 0x00          DC8 30, 0, 0, 0

   \              0x00 0x00
   \       0x10   0xF800'4000        DC32 0xf800'4000, 0, 48'000

   \              0x0000'0000  

   \              0x0000'BB80
   \       0x1C   0x10 0x01          DC8 16, 1, 1, 1

   \              0x01 0x01
   \       0x20   0x0700 0x0700      DC16 1'792, 1'792
   \       0x24   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
   \       0x34   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
   \       0x44   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
   \       0x54   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
   \       0x64   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
   \       0x74   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
   \       0x84   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
   \       0x94   0x06 0x1A          DC8 6, 26, 0, 0

   \              0x00 0x00
   \       0x98   0x0000'0000        DC32 0, 0

   \              0x0000'0000
   \       0xA0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
    166          	.threshold = BUFFER_THRESHOLD,
    167          	.circ = {
    168          		.rx = 0,
    169          		.tx = 0,
    170          		.count = 0,
    171          	},
    172          	.volume = 30,
    173          	.recording = false,
    174          	.playing = false,
    175          };
    176          
    177          /*----------------------------------------------------------------------------
    178           *         Local functions
    179           *----------------------------------------------------------------------------*/
    180          
    181          /**
    182           * \brief Display main menu.
    183           */
    184          static void _display_menu(void)
    185          {
    186          	printf("\n\r");
    187          	printf("-----------------\n\r");
    188          	printf("R -> Start to record the sound and play \n\r");
    189          	printf("S -> Stop recording sound \n\r");
    190          	printf("+ -> Increase the volume of playback sound \n\r");
    191          	printf("- -> Decrease the volume of playback sound \n\r");
    192          	printf("-----------------\n\r");
    193          }
    194          
    195          
    196          /**
    197           *  \brief Audio RX callback
    198           */

   \                                 In section SOFTPACK, align 4, keep-with-next
    199          static int _ssc_tx_transfer_callback(void* arg, void* arg2)
    200          {
   \                     _ssc_tx_transfer_callback:
   \        0x0   0xE92D'5000        PUSH     {R12,LR}
    201          	struct _ssc_desc* desc = (struct _ssc_desc*)arg;
                 	                  ^
Warning[Pe177]: variable "desc" was declared but never referenced
    202          	struct _callback _cb;
                 	                 ^
Warning[Pe177]: variable "_cb" was declared but never referenced
    203          #if 0
    204          	if (_audio_ctx.playing && (_audio_ctx.circ.count > 0)){
    205          		struct _buffer _tx = {
    206          			.data = (unsigned char*)&_sound_buffer[_audio_ctx.circ.tx],
    207          			.size = BUFFER_SIZE,
    208          			.attr = SSC_BUF_ATTR_WRITE,
    209          		};
    210          
    211          		callback_set(&_cb, _ssc_tx_transfer_callback, desc);
    212          		ssc_transfer(desc, &_tx, &_cb);
    213          		_audio_ctx.circ.tx = (_audio_ctx.circ.tx + 1) % BUFFERS;
    214          		_audio_ctx.circ.count--;
    215          
    216          		if (_audio_ctx.circ.count == 0) {
    217          			ssc_disable_transmitter(&ssc_dev_desc);
    218          
    219          			_audio_ctx.playing = false;
    220          		}
    221          	}
    222          #endif
    223                  printf("<Playback Stop >\r\n");
   \        0x4   0x....'....        ADR      R0,?_8
   \        0x8   0x....'....        BL       printf
    224          	return 0;
   \        0xC   0xE3A0'0000        MOV      R0,#+0
   \       0x10   0xE8BD'8002        POP      {R1,PC}          ;; return
    225          }
    226          
    227          /**
    228           *  \brief Audio RX callback
    229           */
    230          static int _ssc_rx_transfer_callback(void* arg, void* arg2)
    231          {
    232          	struct _ssc_desc* desc = (struct _ssc_desc*)arg;
                 	                  ^
Warning[Pe177]: variable "desc" was declared but never referenced
    233          	struct _callback _cb;
                 	                 ^
Warning[Pe177]: variable "_cb" was declared but never referenced

  static int _ssc_rx_transfer_callback(void* arg, void* arg2)
             ^
"C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\ssc_dma_audio\main.c",230  Warning[Pe177]: 
          function "_ssc_rx_transfer_callback" was declared but never
          referenced
    234          #if 0
    235          	/* New buffer received */
    236          	_audio_ctx.circ.rx = (_audio_ctx.circ.rx + 1) % BUFFERS;
    237          	_audio_ctx.circ.count++;
    238          
    239          	if (!_audio_ctx.playing && (_audio_ctx.circ.count > _audio_ctx.threshold)) {
    240          		_audio_ctx.playing = true;
    241          		ssc_enable_transmitter(&ssc_dev_desc);
    242          		_ssc_tx_transfer_callback(desc, NULL);
    243          	}
    244          
    245          	struct _buffer _rx = {
    246          		.data = (unsigned char*)&_sound_buffer[_audio_ctx.circ.rx],
    247          		.size = BUFFER_SIZE,
    248          		.attr = SSC_BUF_ATTR_READ,
    249          	};
    250          
    251          	callback_set(&_cb, _ssc_rx_transfer_callback, desc);
    252          	ssc_transfer(desc, &_rx, &_cb);
    253          #endif
    254                  printf("<Playback Stop >\r\n");
    255          	return 0;
    256          }
    257          
    258          /**
    259           * \brief Play recording.
    260           */
    261          

   \                                 In section SOFTPACK, align 4, keep-with-next
    262          static void _set_volume(uint8_t vol)
    263          {
   \                     _set_volume:
   \        0x0   0xE92D'4038        PUSH     {R3-R5,LR}
   \        0x4   0xE1A0'4000        MOV      R4,R0
    264          #if defined(CONFIG_HAVE_AUDIO_WM8904)
    265          	printf("Setting volume to %ddB\r\n", (signed)(vol-57));
    266          	wm8904_set_left_volume(&wm8904, vol);
    267          	wm8904_set_right_volume(&wm8904, vol);
    268          #elif defined(CONFIG_HAVE_AUDIO_WM8731)
    269          	printf("Setting volume to %ddB\r\n", (signed)(vol-73));
   \        0x8   0xE240'1049        SUB      R1,R0,#+73
   \        0xC   0x....'....        ADR      R0,?_9
   \       0x10   0x....'....        BL       printf
    270          	wm8731_set_left_volume(&wm8731, vol);
   \       0x14   0x....'....        LDR      R5,??DataTable10_1
   \       0x18   0xE1A0'1004        MOV      R1,R4
   \       0x1C   0xE285'0094        ADD      R0,R5,#+148
   \       0x20   0x....'....        BL       wm8731_set_left_volume
    271          	wm8731_set_right_volume(&wm8731, vol);
   \       0x24   0xE1A0'1004        MOV      R1,R4
   \       0x28   0xE285'0094        ADD      R0,R5,#+148
   \       0x2C   0xE8BD'4034        POP      {R2,R4,R5,LR}
   \       0x30   0x....'....        B        wm8731_set_right_volume  ;; tailcall
    272          #endif
    273          }
    274          

   \                                 In section SOFTPACK, align 4, keep-with-next
    275          static void console_handler(uint8_t key)
    276          {
   \                     console_handler:
   \        0x0   0xE92D'4078        PUSH     {R3-R6,LR}
    277          	switch (key) {
   \        0x4   0xE350'002B        CMP      R0,#+43
   \        0x8   0xE24D'D014        SUB      SP,SP,#+20
   \        0xC   0x0A00'000A        BEQ      ??console_handler_0
   \       0x10   0xE350'002D        CMP      R0,#+45
   \       0x14   0x0A00'000E        BEQ      ??console_handler_1
   \       0x18   0xE350'0052        CMP      R0,#+82
   \       0x1C   0x0A00'0015        BEQ      ??console_handler_2
   \       0x20   0xE350'0053        CMP      R0,#+83
   \       0x24   0x0A00'002C        BEQ      ??console_handler_3
   \       0x28   0xE350'0072        CMP      R0,#+114
   \       0x2C   0x0A00'0011        BEQ      ??console_handler_2
   \       0x30   0xE350'0073        CMP      R0,#+115
   \       0x34   0x0A00'0028        BEQ      ??console_handler_3
    278          	case '+':
    279          		if (_audio_ctx.volume < 63) {
    280          			_audio_ctx.volume += 3;
    281          			_set_volume(_audio_ctx.volume);
    282          		}
    283          		break;
    284          	case '-':
    285          		if (_audio_ctx.volume > 1) {
    286          			_audio_ctx.volume -= 3;
    287          			_set_volume(_audio_ctx.volume);
    288          		}
    289          		break;
    290          
    291          	case 'R':
    292          	case 'r':
    293          		_audio_ctx.recording = true;
    294                          printf("SSC start to record and play sound\r\n");
    295          		//ssc_enable_receiver(&ssc_dev_desc);
    296                          ssc_enable_transmitter(&ssc_dev_desc);
    297          		{ /* Start recording */
    298          			struct _callback _cb;
    299          			callback_set(&_cb, _ssc_tx_transfer_callback, &ssc_dev_desc);
    300          			struct _buffer _tx = {
    301          				.data = (unsigned char*)&_sound_buffer[_audio_ctx.circ.rx],
    302          				.size = BUFFER_SIZE,
    303          				.attr = SSC_BUF_ATTR_WRITE,
    304          			};
    305          
    306          			ssc_transfer(&ssc_dev_desc, &_tx, &_cb);
    307          		}
    308          
    309          		//printf("SSC start to record and play sound\r\n");
    310          		break;
    311          
    312          	case 'S':
    313          	case 's':
    314          		_audio_ctx.recording = false;
    315          		ssc_disable_transmitter(&ssc_dev_desc);
    316          		ssc_disable_receiver(&ssc_dev_desc);
    317          		printf("SSC stop to record and play sound\r\n");
    318          		break;
    319          
    320          	default:
    321          		break;
    322          	}
    323          }
   \       0x38   0x....'....        B        ?Subroutine0
   \                     ??console_handler_0:
   \       0x3C   0x....'....        LDR      R1,??DataTable10_1
   \       0x40   0xE5D1'000C        LDRB     R0,[R1, #+12]
   \       0x44   0xE350'003F        CMP      R0,#+63
   \       0x48   0xAA00'002C        BGE      ??console_handler_4
   \       0x4C   0xE280'0003        ADD      R0,R0,#+3
   \       0x50   0xEA00'0004        B        ??console_handler_5
   \                     ??console_handler_1:
   \       0x54   0x....'....        LDR      R1,??DataTable10_1
   \       0x58   0xE5D1'000C        LDRB     R0,[R1, #+12]
   \       0x5C   0xE350'0002        CMP      R0,#+2
   \       0x60   0xBA00'0026        BLT      ??console_handler_4
   \       0x64   0xE240'0003        SUB      R0,R0,#+3
   \                     ??console_handler_5:
   \       0x68   0xE5C1'000C        STRB     R0,[R1, #+12]
   \       0x6C   0xE6EF'0070        UXTB     R0,R0
   \       0x70   0x....'....        BL       _set_volume
   \       0x74   0x....'....        B        ?Subroutine0
   \                     ??console_handler_2:
   \       0x78   0x....'....        LDR      R4,??DataTable10_1
   \       0x7C   0xE3A0'0001        MOV      R0,#+1
   \       0x80   0xE5C4'000E        STRB     R0,[R4, #+14]
   \       0x84   0x....'....        LDR      R0,??DataTable10_2
   \       0x88   0x....'....        BL       printf
   \       0x8C   0xE284'0010        ADD      R0,R4,#+16
   \       0x90   0x....'....        BL       ssc_enable_transmitter
   \       0x94   0xE284'2010        ADD      R2,R4,#+16
   \       0x98   0x....'....        ADR      R1,_ssc_tx_transfer_callback
   \       0x9C   0xE1A0'000D        MOV      R0,SP
   \       0xA0   0x....'....        BL       callback_set
   \       0xA4   0x....'....        ADR      R1,?_11
   \       0xA8   0xE891'100C        LDM      R1,{R2,R3,R12}
   \       0xAC   0xE1D4'50B4        LDRH     R5,[R4, #+4]
   \       0xB0   0xE28D'0008        ADD      R0,SP,#+8
   \       0xB4   0x....'....        LDR      LR,??DataTable10_3
   \       0xB8   0xE880'100C        STM      R0,{R2,R3,R12}
   \       0xBC   0xE1A0'200D        MOV      R2,SP
   \       0xC0   0xE28D'1008        ADD      R1,SP,#+8
   \       0xC4   0xE085'6085        ADD      R6,R5,R5, LSL #+1
   \       0xC8   0xE284'0010        ADD      R0,R4,#+16
   \       0xCC   0xE08E'6386        ADD      R6,LR,R6, LSL #+7
   \       0xD0   0xE58D'6008        STR      R6,[SP, #+8]
   \       0xD4   0x....'....        BL       ssc_transfer
   \       0xD8   0x....'....        B        ?Subroutine0
   \                     ??console_handler_3:
   \       0xDC   0x....'....        LDR      R4,??DataTable10_1
   \       0xE0   0xE3A0'0000        MOV      R0,#+0
   \       0xE4   0xE5C4'000E        STRB     R0,[R4, #+14]
   \       0xE8   0xE284'0010        ADD      R0,R4,#+16
   \       0xEC   0x....'....        BL       ssc_disable_transmitter
   \       0xF0   0xE284'0010        ADD      R0,R4,#+16
   \       0xF4   0x....'....        BL       ssc_disable_receiver
   \       0xF8   0x....'....        LDR      R0,??DataTable10_4
   \       0xFC   0x....'....        BL       printf
   \                     ??console_handler_4:
   \      0x100                      REQUIRE ?Subroutine0
   \      0x100                      ;; // Fall through to label ?Subroutine0

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?Subroutine0:
   \        0x0   0xE28D'D018        ADD      SP,SP,#+24
   \        0x4   0xE8BD'8070        POP      {R4-R6,PC}       ;; return

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_11:
   \        0x0   0x0000'0000        DC32 0x0, 192, 1

   \              0x0000'00C0  

   \              0x0000'0001
    324          
    325          /*----------------------------------------------------------------------------
    326           *         Global functions
    327           *----------------------------------------------------------------------------*/
    328          
    329          /**
    330           * \brief Application entry point for tc_capture_waveform example.
    331           *
    332           * \return Unused (ANSI-C compatibility).
    333           */

   \                                 In section SOFTPACK, align 4, keep-with-next
    334          extern int main( void )
    335          {
   \                     main:
   \        0x0   0xE92D'4038        PUSH     {R3-R5,LR}
    336          	/* Output example information */
    337          	console_example_info("SSC DMA Audio Example");
   \        0x4   0x....'....        ADR      R0,?_10
   \        0x8   0x....'....        BL       console_example_info
    338          
    339          	console_set_rx_handler(console_handler);
   \        0xC   0x....'....        ADR      R0,console_handler
   \       0x10   0x....'....        BL       console_set_rx_handler
    340          	console_enable_rx_interrupt();
   \       0x14   0x....'....        BL       console_enable_rx_interrupt
    341          
    342          	/* Configure SSC */
    343          	ssc_configure(&ssc_dev_desc);
   \       0x18   0x....'....        LDR      R4,??DataTable10_1
   \       0x1C   0xE284'0010        ADD      R0,R4,#+16
   \       0x20   0x....'....        LDR      R5,??DataTable10_5
   \       0x24   0x....'....        BL       ssc_configure
    344          
    345          	ssc_disable_receiver(&ssc_dev_desc);
   \       0x28   0xE284'0010        ADD      R0,R4,#+16
   \       0x2C   0x....'....        BL       ssc_disable_receiver
    346          	ssc_disable_transmitter(&ssc_dev_desc);
   \       0x30   0xE284'0010        ADD      R0,R4,#+16
   \       0x34   0x....'....        BL       ssc_disable_transmitter
    347          
    348          	/* Initialize the audio DAC */
    349          #if defined(CONFIG_HAVE_AUDIO_WM8904)
    350          	wm8904_configure(&wm8904);
    351          #elif defined(CONFIG_HAVE_AUDIO_WM8731)
    352          	wm8731_configure(&wm8731);
   \       0x38   0xE284'0094        ADD      R0,R4,#+148
   \       0x3C   0x....'....        BL       wm8731_configure
    353          #endif
    354                wm8731_configure(&wm8731);
   \       0x40   0xE284'0094        ADD      R0,R4,#+148
   \       0x44   0x....'....        BL       wm8731_configure
    355          	_set_volume(_audio_ctx.volume);
   \       0x48   0xE5D4'000C        LDRB     R0,[R4, #+12]
   \       0x4C   0x....'....        ADR      R4,?_6
   \       0x50   0x....'....        BL       _set_volume
    356          
    357          	_display_menu();
   \       0x54   0x....'....        ADR      R0,??DataTable10  ;; 0x0A, 0x0D, 0x00, 0x00
   \       0x58   0x....'....        BL       printf
   \       0x5C   0xE1A0'0004        MOV      R0,R4
   \       0x60   0x....'....        BL       printf
   \       0x64   0xE1A0'0005        MOV      R0,R5
   \       0x68   0x....'....        BL       printf
   \       0x6C   0x....'....        ADR      R0,?_7
   \       0x70   0x....'....        BL       printf
   \       0x74   0xE285'002C        ADD      R0,R5,#+44
   \       0x78   0x....'....        BL       printf
   \       0x7C   0xE285'005C        ADD      R0,R5,#+92
   \       0x80   0x....'....        BL       printf
   \       0x84   0xE1A0'0004        MOV      R0,R4
   \       0x88   0x....'....        BL       printf
    358          
    359          	/* Infinite loop */
    360          	while (1);
   \                     ??main_0:
   \       0x8C   0xEAFF'FFFE        B        ??main_0
    361          }

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable10:
   \        0x0   0x0A 0x0D          DC8      0x0A, 0x0D, 0x00, 0x00

   \              0x00 0x00

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable10_1:
   \        0x0   0x....'....        DC32     _audio_ctx

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable10_2:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable10_3:
   \        0x0   0x....'....        DC32     _sound_buffer

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable10_4:
   \        0x0   0x....'....        DC32     ?_3+0x28

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable10_5:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_6:
   \        0x0   0x2D 0x2D          DC8 "-----------------\012\015"

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x0A    

   \              0x0D 0x00

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x52 0x20          DC8 "R -> Start to record the sound and play \012\015"

   \              0x2D 0x3E    

   \              0x20 0x53    

   \              0x74 0x61    

   \              0x72 0x74    

   \              0x20 0x74    

   \              0x6F 0x20    

   \              0x72 0x65    

   \              0x63 0x6F    

   \              0x72 0x64    

   \              0x20 0x74    

   \              0x68 0x65    

   \              0x20 0x73    

   \              0x6F 0x75    

   \              0x6E 0x64    

   \              0x20 0x61    

   \              0x6E 0x64    

   \              0x20 0x70    

   \              0x6C 0x61    

   \              0x79 0x20    

   \              0x0A 0x0D    

   \              0x00
   \       0x2B   0x00               DC8 0
   \       0x2C   0x2B 0x20          DC8 "+ -> Increase the volume of playback sound \012\015"

   \              0x2D 0x3E    

   \              0x20 0x49    

   \              0x6E 0x63    

   \              0x72 0x65    

   \              0x61 0x73    

   \              0x65 0x20    

   \              0x74 0x68    

   \              0x65 0x20    

   \              0x76 0x6F    

   \              0x6C 0x75    

   \              0x6D 0x65    

   \              0x20 0x6F    

   \              0x66 0x20    

   \              0x70 0x6C    

   \              0x61 0x79    

   \              0x62 0x61    

   \              0x63 0x6B    

   \              0x20 0x73    

   \              0x6F 0x75    

   \              0x6E 0x64    

   \              0x20 0x0A    

   \              0x0D 0x00
   \       0x5A   0x00 0x00          DC8 0, 0
   \       0x5C   0x2D 0x20          DC8 "- -> Decrease the volume of playback sound \012\015"

   \              0x2D 0x3E    

   \              0x20 0x44    

   \              0x65 0x63    

   \              0x72 0x65    

   \              0x61 0x73    

   \              0x65 0x20    

   \              0x74 0x68    

   \              0x65 0x20    

   \              0x76 0x6F    

   \              0x6C 0x75    

   \              0x6D 0x65    

   \              0x20 0x6F    

   \              0x66 0x20    

   \              0x70 0x6C    

   \              0x61 0x79    

   \              0x62 0x61    

   \              0x63 0x6B    

   \              0x20 0x73    

   \              0x6F 0x75    

   \              0x6E 0x64    

   \              0x20 0x0A    

   \              0x0D 0x00
   \       0x8A   0x00 0x00          DC8 0, 0

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_7:
   \        0x0   0x53 0x20          DC8 "S -> Stop recording sound \012\015"

   \              0x2D 0x3E    

   \              0x20 0x53    

   \              0x74 0x6F    

   \              0x70 0x20    

   \              0x72 0x65    

   \              0x63 0x6F    

   \              0x72 0x64    

   \              0x69 0x6E    

   \              0x67 0x20    

   \              0x73 0x6F    

   \              0x75 0x6E    

   \              0x64 0x20    

   \              0x0A 0x0D    

   \              0x00
   \       0x1D   0x00 0x00          DC8 0, 0, 0

   \              0x00

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_8:
   \        0x0   0x3C 0x50          DC8 "<Playback Stop >\015\012"

   \              0x6C 0x61    

   \              0x79 0x62    

   \              0x61 0x63    

   \              0x6B 0x20    

   \              0x53 0x74    

   \              0x6F 0x70    

   \              0x20 0x3E    

   \              0x0D 0x0A    

   \              0x00
   \       0x13   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x53 0x53          DC8 "SSC start to record and play sound\015\012"

   \              0x43 0x20    

   \              0x73 0x74    

   \              0x61 0x72    

   \              0x74 0x20    

   \              0x74 0x6F    

   \              0x20 0x72    

   \              0x65 0x63    

   \              0x6F 0x72    

   \              0x64 0x20    

   \              0x61 0x6E    

   \              0x64 0x20    

   \              0x70 0x6C    

   \              0x61 0x79    

   \              0x20 0x73    

   \              0x6F 0x75    

   \              0x6E 0x64    

   \              0x0D 0x0A    

   \              0x00
   \       0x25   0x00 0x00          DC8 0, 0, 0

   \              0x00
   \       0x28   0x53 0x53          DC8 "SSC stop to record and play sound\015\012"

   \              0x43 0x20    

   \              0x73 0x74    

   \              0x6F 0x70    

   \              0x20 0x74    

   \              0x6F 0x20    

   \              0x72 0x65    

   \              0x63 0x6F    

   \              0x72 0x64    

   \              0x20 0x61    

   \              0x6E 0x64    

   \              0x20 0x70    

   \              0x6C 0x61    

   \              0x79 0x20    

   \              0x73 0x6F    

   \              0x75 0x6E    

   \              0x64 0x0D    

   \              0x0A 0x00

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_9:
   \        0x0   0x53 0x65          DC8 "Setting volume to %ddB\015\012"

   \              0x74 0x74    

   \              0x69 0x6E    

   \              0x67 0x20    

   \              0x76 0x6F    

   \              0x6C 0x75    

   \              0x6D 0x65    

   \              0x20 0x74    

   \              0x6F 0x20    

   \              0x25 0x64    

   \              0x64 0x42    

   \              0x0D 0x0A    

   \              0x00
   \       0x19   0x00 0x00          DC8 0, 0, 0

   \              0x00

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_10:
   \        0x0   0x53 0x53          DC8 "SSC DMA Audio Example"

   \              0x43 0x20    

   \              0x44 0x4D    

   \              0x41 0x20    

   \              0x41 0x75    

   \              0x64 0x69    

   \              0x6F 0x20    

   \              0x45 0x78    

   \              0x61 0x6D    

   \              0x70 0x6C    

   \              0x65 0x00
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_5:
   \        0x0   0x0A 0x0D          DC8 "\012\015"

   \              0x00
   \        0x3   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   _set_volume
        16   -> printf
        16   -> wm8731_set_left_volume
         0   -> wm8731_set_right_volume
       8   _ssc_tx_transfer_callback
         8   -> printf
      40   console_handler
        40   -> _set_volume
        40   -> callback_set
        40   -> printf
        40   -> ssc_disable_receiver
        40   -> ssc_disable_transmitter
        40   -> ssc_enable_transmitter
        40   -> ssc_transfer
      16   main
        16   -> _set_volume
        16   -> console_enable_rx_interrupt
        16   -> console_example_info
        16   -> console_set_rx_handler
        16   -> printf
        16   -> ssc_configure
        16   -> ssc_disable_receiver
        16   -> ssc_disable_transmitter
        16   -> wm8731_configure


   Section sizes:

   Bytes   Function/Label
   -----   --------------
        4  ??DataTable10
        4  ??DataTable10_1
        4  ??DataTable10_2
        4  ??DataTable10_3
        4  ??DataTable10_4
        4  ??DataTable10_5
        8  ?Subroutine0
      140  ?_0
       24  ?_10
       12  ?_11
       76  ?_3
        4  ?_5
       20  ?_6
       32  ?_7
       20  ?_8
       28  ?_9
      176  _audio_ctx
           ssc_dev_desc
           wm8731
       52  _set_volume
   12'288  _sound_buffer
       20  _ssc_tx_transfer_callback
      256  console_handler
      144  main

 
    176 bytes in section .data
 12'288 bytes in section .region_cache_aligned
    220 bytes in section .rodata
    640 bytes in section SOFTPACK
 
    640 bytes of CODE  memory
    220 bytes of CONST memory
 12'464 bytes of DATA  memory

Errors: none
Warnings: 5
