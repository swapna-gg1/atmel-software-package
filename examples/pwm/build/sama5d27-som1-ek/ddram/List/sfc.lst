###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         03/Jun/2020  07:55:09
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode             
#    Endian            =  little
#    Source file       =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\nvm\sfc.c
#    Command line      =
#        -f C:\Users\c40450\AppData\Local\Temp\EW1B39.tmp
#        (C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\nvm\sfc.c
#        -D "SOFTPACK_VERSION=\"2.17\"" -D TRACE_LEVEL=5 -D VARIANT_DDRAM -D
#        CONFIG_ARCH_ARMV7A -D CONFIG_ARCH_ARM -D CONFIG_SOC_SAMA5D2 -D
#        CONFIG_CHIP_SAMA5D27 -D CONFIG_PACKAGE_289PIN -D
#        CONFIG_BOARD_SAMA5D27_SOM1_EK -D CONFIG_HAVE_AIC5 -D
#        CONFIG_HAVE_FLEXCOM -D CONFIG_HAVE_PIO4 -D CONFIG_HAVE_PIO4_SECURE -D
#        CONFIG_HAVE_NFC -D CONFIG_HAVE_PIT -D CONFIG_HAVE_SMC -D
#        CONFIG_HAVE_SMC_SCRAMBLING -D CONFIG_HAVE_GMAC_QUEUES -D
#        CONFIG_HAVE_MPDDRC -D CONFIG_HAVE_MPDDRC_DATA_PATH -D
#        CONFIG_HAVE_MPDDRC_IO_CALIBRATION -D CONFIG_HAVE_MPDDRC_DDR2 -D
#        CONFIG_HAVE_MPDDRC_LPDDR2 -D CONFIG_HAVE_MPDDRC_DDR3 -D
#        CONFIG_HAVE_MPDDRC_LPDDR3 -D CONFIG_HAVE_ADC_SETTLING_TIME -D
#        CONFIG_HAVE_ADC_DIFF_INPUT -D CONFIG_HAVE_ADC_SEQ_R2 -D
#        CONFIG_HAVE_PMC_FAST_STARTUP -D CONFIG_HAVE_PMC_GENERATED_CLOCKS -D
#        CONFIG_HAVE_PMC_AUDIO_CLOCK -D CONFIG_HAVE_PMC_PLLADIV2 -D
#        CONFIG_HAVE_PMC_H32MXDIV -D CONFIG_HAVE_PMC_UPLL_BIAS -D
#        CONFIG_HAVE_SCKC -D CONFIG_HAVE_PWMC_DMA -D
#        CONFIG_HAVE_PWMC_SPREAD_SPECTRUM -D CONFIG_HAVE_PWMC_EXTERNAL_TRIGGER
#        -D CONFIG_HAVE_PWMC_FAULT_PROT_HIZ -D CONFIG_HAVE_PWMC_STEPPER_MOTOR
#        -D CONFIG_HAVE_PWMC_CMP_UNIT -D CONFIG_HAVE_PWMC_SYNC_MODE -D
#        CONFIG_HAVE_PWMC_OOV -D CONFIG_HAVE_PWMC_FMODE -D CONFIG_HAVE_PWMC_WP
#        -D CONFIG_HAVE_PWMC_DTIME -D CONFIG_HAVE_PWMC_ELINE -D
#        CONFIG_HAVE_SFRBU -D CONFIG_HAVE_L2CC -D CONFIG_HAVE_SAIC -D
#        CONFIG_HAVE_XDMAC -D CONFIG_HAVE_XDMAC_DATA_WIDTH_DWORD -D
#        CONFIG_HAVE_SECUMOD -D CONFIG_HAVE_SFC -D CONFIG_HAVE_PWMC -D
#        CONFIG_HAVE_SECURE_MATRIX -D CONFIG_HAVE_DDR2_W971GG6SB -D
#        CONFIG_HAVE_RSTC_CONFIGURABLE_USER_RESET -D CONFIG_HAVE_TC_FAULT_MODE
#        -D CONFIG_HAVE_TC_DMA_MODE -D CONFIG_HAVE_RTC_CALIBRATION -D
#        CONFIG_HAVE_RTC_MODE_PERSIAN -D CONFIG_HAVE_RTC_MODE_UTC -D
#        CONFIG_HAVE_RTC_TAMPER -D CONFIG_HAVE_SHDWC -D CONFIG_HAVE_LED -D
#        CONFIG_HAVE_MMU -D CONFIG_HAVE_L1CACHE -D CONFIG_HAVE_L2CACHE -D
#        CONFIG_HAVE_UART -D CONFIG_HAVE_SERIALD_UART -D CONFIG_HAVE_USART -D
#        CONFIG_HAVE_USART_FIFO --preprocess
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\build\sama5d27-som1-ek\ddram\List
#        -lC
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\build\sama5d27-som1-ek\ddram\List
#        --diag_suppress Pa050 -o
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\build\sama5d27-som1-ek\ddram\Obj
#        --debug --endian=little --cpu=Cortex-A5 -e --fpu=VFPv4_D16
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\..\..\arch\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\..\..\utils\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\..\..\target\common\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\..\..\target\sama5d2\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\..\..\drivers\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\..\..\lib\
#        --section .text=SOFTPACK --cpu_mode arm -Oh)
#    Locale            =  C
#    List file         =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\build\sama5d27-som1-ek\ddram\List\sfc.lst
#    Object file       =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\build\sama5d27-som1-ek\ddram\Obj\sfc.o
#    Runtime model:       
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\nvm\sfc.c
      1          /* ----------------------------------------------------------------------------
      2           *         SAM Software Package License
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2016, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /**
     31           * \file
     32           *
     33           * Implementation of Secure Fuse Controller (SFC).
     34           *
     35           */
     36          
     37          /*----------------------------------------------------------------------------
     38           *        Headers
     39           *----------------------------------------------------------------------------*/
     40          
     41          #include "chip.h"
     42          #include "compiler.h"
     43          
     44          #include "nvm/sfc.h"
     45          #include "peripherals/pmc.h"
     46          
     47          #include <assert.h>
     48          
     49          /*----------------------------------------------------------------------------
     50           *        Exported functions
     51           *----------------------------------------------------------------------------*/
     52          

   \                                 In section SOFTPACK, align 4, keep-with-next
     53          uint32_t sfc_get_errors(void)
     54          {
     55          	uint32_t status = SFC->SFC_SR;
   \                     sfc_get_errors:
   \        0x0   0x....'....        LDR      R0,??DataTable4  ;; 0xf804c01c
   \        0x4   0xE590'1000        LDR      R1,[R0, #+0]
     56          	uint32_t err = 0;
   \        0x8   0xE3A0'0000        MOV      R0,#+0
     57          
     58          #ifdef SFC_SR_LCHECK
     59          	if (status & SFC_SR_LCHECK)
   \        0xC   0xE311'0010        TST      R1,#0x10
     60          		err |= SFC_ERR_LCHECK;
   \       0x10   0x13A0'0001        MOVNE    R0,#+1
     61          #endif
     62          
     63          	if (status & SFC_SR_APLE)
   \       0x14   0xE311'0B40        TST      R1,#0x10000
     64          		err |= SFC_ERR_APLE;
   \       0x18   0x1380'0002        ORRNE    R0,R0,#0x2
     65          
     66          	if (status & SFC_SR_ACE)
   \       0x1C   0xE311'0B80        TST      R1,#0x20000
     67          		err |= SFC_ERR_ACE;
   \       0x20   0x1380'0004        ORRNE    R0,R0,#0x4
     68          
     69          	return err;
   \       0x24   0xE12F'FF1E        BX       LR               ;; return
     70          }
     71          

   \                                 In section SOFTPACK, align 4, keep-with-next
     72          uint32_t sfc_read(uint32_t index)
     73          {
   \                     sfc_read:
   \        0x0   0xE92D'4010        PUSH     {R4,LR}
   \        0x4   0xE1A0'4000        MOV      R4,R0
     74          	assert(index < ARRAY_SIZE(SFC->SFC_DR));
   \        0x8   0xE354'0018        CMP      R4,#+24
   \        0xC   0x3A00'0004        BCC      ??sfc_read_0
   \       0x10   0x....'....        LDR      R0,??DataTable4_1
   \       0x14   0xE3A0'204A        MOV      R2,#+74
   \       0x18   0xE280'105C        ADD      R1,R0,#+92
   \       0x1C   0x....'....        BL       __aeabi_assert
   \       0x20   0x....'....        BL       __iar_EmptyStepPoint
     75          	return SFC->SFC_DR[index];
   \                     ??sfc_read_0:
   \       0x24   0x....'....        LDR      R0,??DataTable4_2  ;; 0xf804c020
   \       0x28   0xE790'0104        LDR      R0,[R0, +R4, LSL #+2]
   \       0x2C   0xE8BD'8010        POP      {R4,PC}          ;; return
     76          }
     77          

   \                                 In section SOFTPACK, align 4, keep-with-next
     78          void sfc_enable(void)
     79          {
     80          	pmc_enable_peripheral(ID_SFC);
   \                     sfc_enable:
   \        0x0   0xE3A0'0032        MOV      R0,#+50
   \        0x4   0x....'....        B        pmc_enable_peripheral  ;; tailcall
     81          }
     82          

   \                                 In section SOFTPACK, align 4, keep-with-next
     83          void sfc_disable(void)
     84          {
     85          	pmc_disable_peripheral(ID_SFC);
   \                     sfc_disable:
   \        0x0   0xE3A0'0032        MOV      R0,#+50
   \        0x4   0x....'....        B        pmc_disable_peripheral  ;; tailcall
     86          }
     87          

   \                                 In section SOFTPACK, align 4, keep-with-next
     88          bool sfc_write(uint32_t index, uint32_t data)
     89          {
   \                     sfc_write:
   \        0x0   0xE92D'4038        PUSH     {R3-R5,LR}
   \        0x4   0xE1A0'4000        MOV      R4,R0
   \        0x8   0xE1A0'5001        MOV      R5,R1
     90          	uint32_t status;
     91          
     92          	assert(index < ARRAY_SIZE(SFC->SFC_DR));
   \        0xC   0xE354'0018        CMP      R4,#+24
   \       0x10   0x3A00'0004        BCC      ??sfc_write_0
   \       0x14   0x....'....        LDR      R0,??DataTable4_1
   \       0x18   0xE3A0'205C        MOV      R2,#+92
   \       0x1C   0xE280'105C        ADD      R1,R0,#+92
   \       0x20   0x....'....        BL       __aeabi_assert
   \       0x24   0x....'....        BL       __iar_EmptyStepPoint
     93          
     94          	/* write key */
     95          	SFC->SFC_KR = SFC_KR_KEY(0xFB);
   \                     ??sfc_write_0:
   \       0x28   0xE3A0'04F8        MOV      R0,#-134217728
   \       0x2C   0xE3A0'10FB        MOV      R1,#+251
   \       0x30   0xE380'0A4C        ORR      R0,R0,#0x4C000
   \       0x34   0xE580'1000        STR      R1,[R0, #+0]
     96          
     97          	/* write data to be fused */
     98          	SFC->SFC_DR[index] = data;
   \       0x38   0xE380'2020        ORR      R2,R0,#0x20
   \       0x3C   0xE782'5104        STR      R5,[R2, +R4, LSL #+2]
     99          
    100          	/* wait for completion */
    101          	do {
    102          		status = SFC->SFC_SR;
   \                     ??sfc_write_1:
   \       0x40   0xE590'101C        LDR      R1,[R0, #+28]
    103          	} while ((status & SFC_SR_PGMC) == 0);
   \       0x44   0xE311'0001        TST      R1,#0x1
   \       0x48   0x0AFF'FFFC        BEQ      ??sfc_write_1
    104          
    105          	/* check for failure */
    106          	return (status & SFC_SR_PGMF) == 0;
   \       0x4C   0xE1A0'00A1        LSR      R0,R1,#+1
   \       0x50   0xE200'1001        AND      R1,R0,#0x1
   \       0x54   0xE221'0001        EOR      R0,R1,#0x1
   \       0x58   0xE8BD'8032        POP      {R1,R4,R5,PC}    ;; return
    107          }
    108          

   \                                 In section SOFTPACK, align 4, keep-with-next
    109          void sfc_mask_data_registers(void)
    110          {
    111          	SFC->SFC_MR |= SFC_MR_MSK;
   \                     sfc_mask_data_registers:
   \        0x0   0x....'....        LDR      R0,??DataTable4_3  ;; 0xf804c004
   \        0x4   0xE590'1000        LDR      R1,[R0, #+0]
   \        0x8   0xE381'2001        ORR      R2,R1,#0x1
   \        0xC   0xE580'2000        STR      R2,[R0, #+0]
    112          }
   \       0x10   0xE12F'FF1E        BX       LR               ;; return
    113          

   \                                 In section SOFTPACK, align 4, keep-with-next
    114          bool sfc_are_data_registers_masked(void)
    115          {
    116          	return (SFC->SFC_MR & SFC_MR_MSK) != 0;
   \                     sfc_are_data_registers_masked:
   \        0x0   0x....'....        LDR      R0,??DataTable4_3  ;; 0xf804c004
   \        0x4   0xE590'1000        LDR      R1,[R0, #+0]
   \        0x8   0xE201'0001        AND      R0,R1,#0x1
   \        0xC   0xE12F'FF1E        BX       LR               ;; return
    117          }

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4:
   \        0x0   0xF804'C01C        DC32     0xf804c01c

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_1:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_2:
   \        0x0   0xF804'C020        DC32     0xf804c020

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_3:
   \        0x0   0xF804'C004        DC32     0xf804c004

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x69 0x6E          DC8 0x69, 0x6E, 0x64, 0x65, 0x78, 0x20, 0x3C, 0x20

   \              0x64 0x65    

   \              0x78 0x20    

   \              0x3C 0x20
   \        0x8   0x28 0x73          DC8 0x28, 0x73, 0x69, 0x7A, 0x65, 0x6F, 0x66, 0x20

   \              0x69 0x7A    

   \              0x65 0x6F    

   \              0x66 0x20
   \       0x10   0x28 0x28          DC8 0x28, 0x28, 0x28, 0x28, 0x53, 0x66, 0x63, 0x20

   \              0x28 0x28    

   \              0x53 0x66    

   \              0x63 0x20
   \       0x18   0x2A 0x29          DC8 0x2A, 0x29, 0x30, 0x78, 0x46, 0x38, 0x30, 0x34

   \              0x30 0x78    

   \              0x46 0x38    

   \              0x30 0x34
   \       0x20   0x43 0x30          DC8 0x43, 0x30, 0x30, 0x30, 0x55, 0x29, 0x2D, 0x3E

   \              0x30 0x30    

   \              0x55 0x29    

   \              0x2D 0x3E
   \       0x28   0x53 0x46          DC8 0x53, 0x46, 0x43, 0x5F, 0x44, 0x52, 0x29, 0x29

   \              0x43 0x5F    

   \              0x44 0x52    

   \              0x29 0x29
   \       0x30   0x20 0x2F          DC8 0x20, 0x2F, 0x20, 0x73, 0x69, 0x7A, 0x65, 0x6F

   \              0x20 0x73    

   \              0x69 0x7A    

   \              0x65 0x6F
   \       0x38   0x66 0x28          DC8 0x66, 0x28, 0x2A, 0x28, 0x28, 0x28, 0x53, 0x66

   \              0x2A 0x28    

   \              0x28 0x28    

   \              0x53 0x66
   \       0x40   0x63 0x20          DC8 0x63, 0x20, 0x2A, 0x29, 0x30, 0x78, 0x46, 0x38

   \              0x2A 0x29    

   \              0x30 0x78    

   \              0x46 0x38
   \       0x48   0x30 0x34          DC8 0x30, 0x34, 0x43, 0x30, 0x30, 0x30, 0x55, 0x29

   \              0x43 0x30    

   \              0x30 0x30    

   \              0x55 0x29
   \       0x50   0x2D 0x3E          DC8 0x2D, 0x3E, 0x53, 0x46, 0x43, 0x5F, 0x44, 0x52

   \              0x53 0x46    

   \              0x43 0x5F    

   \              0x44 0x52
   \       0x58   0x29 0x29          DC8 0x29, 0x29, 0x29, 0

   \              0x29 0x00
   \       0x5C   0x43 0x3A          DC8 0x43, 0x3A, 0x5C, 0x77, 0x6F, 0x72, 0x6B, 0x5C

   \              0x5C 0x77    

   \              0x6F 0x72    

   \              0x6B 0x5C
   \       0x64   0x41 0x74          DC8 0x41, 0x74, 0x6D, 0x65, 0x6C, 0x53, 0x6F, 0x66

   \              0x6D 0x65    

   \              0x6C 0x53    

   \              0x6F 0x66
   \       0x6C   0x74 0x50          DC8 0x74, 0x50, 0x41, 0x63, 0x6B, 0x5C, 0x61, 0x74

   \              0x41 0x63    

   \              0x6B 0x5C    

   \              0x61 0x74
   \       0x74   0x6D 0x65          DC8 0x6D, 0x65, 0x6C, 0x2D, 0x73, 0x6F, 0x66, 0x74

   \              0x6C 0x2D    

   \              0x73 0x6F    

   \              0x66 0x74
   \       0x7C   0x77 0x61          DC8 0x77, 0x61, 0x72, 0x65, 0x2D, 0x70, 0x61, 0x63

   \              0x72 0x65    

   \              0x2D 0x70    

   \              0x61 0x63
   \       0x84   0x6B 0x61          DC8 0x6B, 0x61, 0x67, 0x65, 0x2D, 0x32, 0x2E, 0x31

   \              0x67 0x65    

   \              0x2D 0x32    

   \              0x2E 0x31
   \       0x8C   0x37 0x5C          DC8 0x37, 0x5C, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72

   \              0x64 0x72    

   \              0x69 0x76    

   \              0x65 0x72
   \       0x94   0x73 0x5C          DC8 0x73, 0x5C, 0x6E, 0x76, 0x6D, 0x5C, 0x73, 0x66

   \              0x6E 0x76    

   \              0x6D 0x5C    

   \              0x73 0x66
   \       0x9C   0x63 0x2E          DC8 0x63, 0x2E, 0x63, 0

   \              0x63 0x00

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   sfc_are_data_registers_masked
       0   sfc_disable
         0   -> pmc_disable_peripheral
       0   sfc_enable
         0   -> pmc_enable_peripheral
       0   sfc_get_errors
       0   sfc_mask_data_registers
       8   sfc_read
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
      16   sfc_write
        16   -> __aeabi_assert
        16   -> __iar_EmptyStepPoint


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
     160  ?_0
      16  sfc_are_data_registers_masked
       8  sfc_disable
       8  sfc_enable
      40  sfc_get_errors
      20  sfc_mask_data_registers
      48  sfc_read
      92  sfc_write

 
 160 bytes in section .rodata
 248 bytes in section SOFTPACK
 
 248 bytes of CODE  memory
 160 bytes of CONST memory

Errors: none
Warnings: none
