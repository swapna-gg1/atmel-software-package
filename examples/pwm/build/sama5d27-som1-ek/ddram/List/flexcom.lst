###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         03/Jun/2020  07:55:07
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode             
#    Endian            =  little
#    Source file       =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\peripherals\flexcom.c
#    Command line      =
#        -f C:\Users\c40450\AppData\Local\Temp\EWFC8.tmp
#        (C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\peripherals\flexcom.c
#        -D "SOFTPACK_VERSION=\"2.17\"" -D TRACE_LEVEL=5 -D VARIANT_DDRAM -D
#        CONFIG_ARCH_ARMV7A -D CONFIG_ARCH_ARM -D CONFIG_SOC_SAMA5D2 -D
#        CONFIG_CHIP_SAMA5D27 -D CONFIG_PACKAGE_289PIN -D
#        CONFIG_BOARD_SAMA5D27_SOM1_EK -D CONFIG_HAVE_AIC5 -D
#        CONFIG_HAVE_FLEXCOM -D CONFIG_HAVE_PIO4 -D CONFIG_HAVE_PIO4_SECURE -D
#        CONFIG_HAVE_NFC -D CONFIG_HAVE_PIT -D CONFIG_HAVE_SMC -D
#        CONFIG_HAVE_SMC_SCRAMBLING -D CONFIG_HAVE_GMAC_QUEUES -D
#        CONFIG_HAVE_MPDDRC -D CONFIG_HAVE_MPDDRC_DATA_PATH -D
#        CONFIG_HAVE_MPDDRC_IO_CALIBRATION -D CONFIG_HAVE_MPDDRC_DDR2 -D
#        CONFIG_HAVE_MPDDRC_LPDDR2 -D CONFIG_HAVE_MPDDRC_DDR3 -D
#        CONFIG_HAVE_MPDDRC_LPDDR3 -D CONFIG_HAVE_ADC_SETTLING_TIME -D
#        CONFIG_HAVE_ADC_DIFF_INPUT -D CONFIG_HAVE_ADC_SEQ_R2 -D
#        CONFIG_HAVE_PMC_FAST_STARTUP -D CONFIG_HAVE_PMC_GENERATED_CLOCKS -D
#        CONFIG_HAVE_PMC_AUDIO_CLOCK -D CONFIG_HAVE_PMC_PLLADIV2 -D
#        CONFIG_HAVE_PMC_H32MXDIV -D CONFIG_HAVE_PMC_UPLL_BIAS -D
#        CONFIG_HAVE_SCKC -D CONFIG_HAVE_PWMC_DMA -D
#        CONFIG_HAVE_PWMC_SPREAD_SPECTRUM -D CONFIG_HAVE_PWMC_EXTERNAL_TRIGGER
#        -D CONFIG_HAVE_PWMC_FAULT_PROT_HIZ -D CONFIG_HAVE_PWMC_STEPPER_MOTOR
#        -D CONFIG_HAVE_PWMC_CMP_UNIT -D CONFIG_HAVE_PWMC_SYNC_MODE -D
#        CONFIG_HAVE_PWMC_OOV -D CONFIG_HAVE_PWMC_FMODE -D CONFIG_HAVE_PWMC_WP
#        -D CONFIG_HAVE_PWMC_DTIME -D CONFIG_HAVE_PWMC_ELINE -D
#        CONFIG_HAVE_SFRBU -D CONFIG_HAVE_L2CC -D CONFIG_HAVE_SAIC -D
#        CONFIG_HAVE_XDMAC -D CONFIG_HAVE_XDMAC_DATA_WIDTH_DWORD -D
#        CONFIG_HAVE_SECUMOD -D CONFIG_HAVE_SFC -D CONFIG_HAVE_PWMC -D
#        CONFIG_HAVE_SECURE_MATRIX -D CONFIG_HAVE_DDR2_W971GG6SB -D
#        CONFIG_HAVE_RSTC_CONFIGURABLE_USER_RESET -D CONFIG_HAVE_TC_FAULT_MODE
#        -D CONFIG_HAVE_TC_DMA_MODE -D CONFIG_HAVE_RTC_CALIBRATION -D
#        CONFIG_HAVE_RTC_MODE_PERSIAN -D CONFIG_HAVE_RTC_MODE_UTC -D
#        CONFIG_HAVE_RTC_TAMPER -D CONFIG_HAVE_SHDWC -D CONFIG_HAVE_LED -D
#        CONFIG_HAVE_MMU -D CONFIG_HAVE_L1CACHE -D CONFIG_HAVE_L2CACHE -D
#        CONFIG_HAVE_UART -D CONFIG_HAVE_SERIALD_UART -D CONFIG_HAVE_USART -D
#        CONFIG_HAVE_USART_FIFO --preprocess
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\build\sama5d27-som1-ek\ddram\List
#        -lC
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\build\sama5d27-som1-ek\ddram\List
#        --diag_suppress Pa050 -o
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\build\sama5d27-som1-ek\ddram\Obj
#        --debug --endian=little --cpu=Cortex-A5 -e --fpu=VFPv4_D16
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\..\..\arch\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\..\..\utils\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\..\..\target\common\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\..\..\target\sama5d2\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\..\..\drivers\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\..\..\lib\
#        --section .text=SOFTPACK --cpu_mode arm -Oh)
#    Locale            =  C
#    List file         =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\build\sama5d27-som1-ek\ddram\List\flexcom.lst
#    Object file       =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\pwm\build\sama5d27-som1-ek\ddram\Obj\flexcom.o
#    Runtime model:       
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\peripherals\flexcom.c
      1          /* ----------------------------------------------------------------------------
      2           *         SAM Software Package License
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2015, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /*------------------------------------------------------------------------------
     31           *         Headers
     32           *------------------------------------------------------------------------------*/
     33          
     34          #include "chip.h"
     35          #include "peripherals/flexcom.h"
     36          
     37          #include "serial/usart.h"
     38          #include "spi/spi.h"
     39          #include "i2c/twi.h"
     40          
     41          #include <assert.h>
     42          
     43          /*------------------------------------------------------------------------------
     44           *         Exported functions
     45           *------------------------------------------------------------------------------*/
     46          
     47          /**
     48           * \brief Select a protocol for a FLEXCOM device
     49           *
     50           *
     51           *  \param flexcom  Pointer to FLEXCOM peripheral to configure.
     52           *  \param protocol  Protocol to use.
     53           */

   \                                 In section SOFTPACK, align 4, keep-with-next
     54          void flexcom_select(Flexcom * flexcom, uint32_t protocol)
     55          {
   \                     flexcom_select:
   \        0x0   0xE92D'4070        PUSH     {R4-R6,LR}
   \        0x4   0xE1B0'4000        MOVS     R4,R0
   \        0x8   0xE1A0'5001        MOV      R5,R1
     56          	assert(flexcom);
   \        0xC   0x1A00'0004        BNE      ??flexcom_select_0
   \       0x10   0xE3A0'2038        MOV      R2,#+56
   \       0x14   0x....'....        LDR      R1,??DataTable1
   \       0x18   0x....'....        ADR      R0,?_2
   \       0x1C   0x....'....        BL       __aeabi_assert
   \       0x20   0x....'....        BL       __iar_EmptyStepPoint
     57          
     58          	assert(protocol == FLEX_MR_OPMODE_NO_COM ||
     59          	       protocol == FLEX_MR_OPMODE_USART ||
     60          	       protocol == FLEX_MR_OPMODE_SPI ||
     61          	       protocol == FLEX_MR_OPMODE_TWI);
   \                     ??flexcom_select_0:
   \       0x24   0xE355'0000        CMP      R5,#+0
   \       0x28   0x0A00'000A        BEQ      ??flexcom_select_1
   \       0x2C   0xE355'0001        CMP      R5,#+1
   \       0x30   0x0A00'0008        BEQ      ??flexcom_select_1
   \       0x34   0xE355'0002        CMP      R5,#+2
   \       0x38   0x0A00'0006        BEQ      ??flexcom_select_1
   \       0x3C   0xE355'0003        CMP      R5,#+3
   \       0x40   0x0A00'0004        BEQ      ??flexcom_select_1
   \       0x44   0x....'....        LDR      R1,??DataTable1
   \       0x48   0xE3A0'203D        MOV      R2,#+61
   \       0x4C   0xE281'0050        ADD      R0,R1,#+80
   \       0x50   0x....'....        BL       __aeabi_assert
   \       0x54   0x....'....        BL       __iar_EmptyStepPoint
     62          
     63          	uint32_t flexcom_id = get_flexcom_id_from_addr(flexcom);
   \                     ??flexcom_select_1:
   \       0x58   0xE1A0'0004        MOV      R0,R4
   \       0x5C   0x....'....        BL       get_flexcom_id_from_addr
     64          	uint32_t current_protocol = flexcom->FLEX_MR & FLEX_MR_OPMODE_Msk;
     65          
     66          	/* Shutdown previous protocol */
     67          	switch (current_protocol) {
   \       0x60   0xE594'1000        LDR      R1,[R4, #+0]
   \       0x64   0xE201'2003        AND      R2,R1,#0x3
   \       0x68   0xE352'0001        CMP      R2,#+1
   \       0x6C   0x1A00'0006        BNE      ??flexcom_select_2
     68          	case FLEX_MR_OPMODE_USART:
     69          		{
     70          			Usart* usart = get_usart_addr_from_id(flexcom_id);
   \       0x70   0x....'....        BL       get_usart_addr_from_id
   \       0x74   0xE1A0'6000        MOV      R6,R0
     71          			usart_set_receiver_enabled(usart, 0u);
   \       0x78   0xE3A0'1000        MOV      R1,#+0
   \       0x7C   0x....'....        BL       usart_set_receiver_enabled
     72          			usart_set_transmitter_enabled(usart, 0u);
   \       0x80   0xE3A0'1000        MOV      R1,#+0
   \       0x84   0xE1A0'0006        MOV      R0,R6
   \       0x88   0x....'....        BL       usart_set_transmitter_enabled
     73          		}
     74          		break;
     75          #ifdef CONFIG_HAVE_SPI
     76          	case FLEX_MR_OPMODE_SPI:
     77          		{
     78          			Spi* spi = get_spi_addr_from_id(flexcom_id);
     79          			spi_disable(spi);
     80          		}
     81          		break;
     82          #endif
     83          #ifdef CONFIG_HAVE_TWI
     84          	case FLEX_MR_OPMODE_TWI:
     85          		{
     86          			Twi* twi = get_twi_addr_from_id(flexcom_id);
     87          			twi_stop(twi);
     88          		}
     89          		break;
     90          #endif
     91          	default:
     92          		break;
     93          	}
     94          
     95          	/* Activate the new mode () */
     96          	flexcom->FLEX_MR = protocol & FLEX_MR_OPMODE_Msk;
   \                     ??flexcom_select_2:
   \       0x8C   0xE205'0003        AND      R0,R5,#0x3
   \       0x90   0xE584'0000        STR      R0,[R4, #+0]
     97          }
   \       0x94   0xE8BD'8070        POP      {R4-R6,PC}       ;; return

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable1:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x43 0x3A          DC8 0x43, 0x3A, 0x5C, 0x77, 0x6F, 0x72, 0x6B, 0x5C

   \              0x5C 0x77    

   \              0x6F 0x72    

   \              0x6B 0x5C
   \        0x8   0x41 0x74          DC8 0x41, 0x74, 0x6D, 0x65, 0x6C, 0x53, 0x6F, 0x66

   \              0x6D 0x65    

   \              0x6C 0x53    

   \              0x6F 0x66
   \       0x10   0x74 0x50          DC8 0x74, 0x50, 0x41, 0x63, 0x6B, 0x5C, 0x61, 0x74

   \              0x41 0x63    

   \              0x6B 0x5C    

   \              0x61 0x74
   \       0x18   0x6D 0x65          DC8 0x6D, 0x65, 0x6C, 0x2D, 0x73, 0x6F, 0x66, 0x74

   \              0x6C 0x2D    

   \              0x73 0x6F    

   \              0x66 0x74
   \       0x20   0x77 0x61          DC8 0x77, 0x61, 0x72, 0x65, 0x2D, 0x70, 0x61, 0x63

   \              0x72 0x65    

   \              0x2D 0x70    

   \              0x61 0x63
   \       0x28   0x6B 0x61          DC8 0x6B, 0x61, 0x67, 0x65, 0x2D, 0x32, 0x2E, 0x31

   \              0x67 0x65    

   \              0x2D 0x32    

   \              0x2E 0x31
   \       0x30   0x37 0x5C          DC8 0x37, 0x5C, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72

   \              0x64 0x72    

   \              0x69 0x76    

   \              0x65 0x72
   \       0x38   0x73 0x5C          DC8 0x73, 0x5C, 0x70, 0x65, 0x72, 0x69, 0x70, 0x68

   \              0x70 0x65    

   \              0x72 0x69    

   \              0x70 0x68
   \       0x40   0x65 0x72          DC8 0x65, 0x72, 0x61, 0x6C, 0x73, 0x5C, 0x66, 0x6C

   \              0x61 0x6C    

   \              0x73 0x5C    

   \              0x66 0x6C
   \       0x48   0x65 0x78          DC8 0x65, 0x78, 0x63, 0x6F, 0x6D, 0x2E, 0x63, 0

   \              0x63 0x6F    

   \              0x6D 0x2E    

   \              0x63 0x00
   \       0x50   0x70 0x72          DC8 0x70, 0x72, 0x6F, 0x74, 0x6F, 0x63, 0x6F, 0x6C

   \              0x6F 0x74    

   \              0x6F 0x63    

   \              0x6F 0x6C
   \       0x58   0x20 0x3D          DC8 0x20, 0x3D, 0x3D, 0x20, 0x28, 0x30, 0x78, 0x30

   \              0x3D 0x20    

   \              0x28 0x30    

   \              0x78 0x30
   \       0x60   0x75 0x20          DC8 0x75, 0x20, 0x3C, 0x3C, 0x20, 0x30, 0x29, 0x20

   \              0x3C 0x3C    

   \              0x20 0x30    

   \              0x29 0x20
   \       0x68   0x7C 0x7C          DC8 0x7C, 0x7C, 0x20, 0x70, 0x72, 0x6F, 0x74, 0x6F

   \              0x20 0x70    

   \              0x72 0x6F    

   \              0x74 0x6F
   \       0x70   0x63 0x6F          DC8 0x63, 0x6F, 0x6C, 0x20, 0x3D, 0x3D, 0x20, 0x28

   \              0x6C 0x20    

   \              0x3D 0x3D    

   \              0x20 0x28
   \       0x78   0x30 0x78          DC8 0x30, 0x78, 0x31, 0x75, 0x20, 0x3C, 0x3C, 0x20

   \              0x31 0x75    

   \              0x20 0x3C    

   \              0x3C 0x20
   \       0x80   0x30 0x29          DC8 0x30, 0x29, 0x20, 0x7C, 0x7C, 0x20, 0x70, 0x72

   \              0x20 0x7C    

   \              0x7C 0x20    

   \              0x70 0x72
   \       0x88   0x6F 0x74          DC8 0x6F, 0x74, 0x6F, 0x63, 0x6F, 0x6C, 0x20, 0x3D

   \              0x6F 0x63    

   \              0x6F 0x6C    

   \              0x20 0x3D
   \       0x90   0x3D 0x20          DC8 0x3D, 0x20, 0x28, 0x30, 0x78, 0x32, 0x75, 0x20

   \              0x28 0x30    

   \              0x78 0x32    

   \              0x75 0x20
   \       0x98   0x3C 0x3C          DC8 0x3C, 0x3C, 0x20, 0x30, 0x29, 0x20, 0x7C, 0x7C

   \              0x20 0x30    

   \              0x29 0x20    

   \              0x7C 0x7C
   \       0xA0   0x20 0x70          DC8 0x20, 0x70, 0x72, 0x6F, 0x74, 0x6F, 0x63, 0x6F

   \              0x72 0x6F    

   \              0x74 0x6F    

   \              0x63 0x6F
   \       0xA8   0x6C 0x20          DC8 0x6C, 0x20, 0x3D, 0x3D, 0x20, 0x28, 0x30, 0x78

   \              0x3D 0x3D    

   \              0x20 0x28    

   \              0x30 0x78
   \       0xB0   0x33 0x75          DC8 0x33, 0x75, 0x20, 0x3C, 0x3C, 0x20, 0x30, 0x29

   \              0x20 0x3C    

   \              0x3C 0x20    

   \              0x30 0x29
   \       0xB8   0x00               DC8 0
   \       0xB9   0x00 0x00          DC8 0, 0, 0

   \              0x00

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_2:
   \        0x0   0x66 0x6C          DC8 "flexcom"

   \              0x65 0x78    

   \              0x63 0x6F    

   \              0x6D 0x00

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   flexcom_select
        16   -> __aeabi_assert
        16   -> __iar_EmptyStepPoint
        16   -> get_flexcom_id_from_addr
        16   -> get_usart_addr_from_id
        16   -> usart_set_receiver_enabled
        16   -> usart_set_transmitter_enabled


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
     188  ?_0
       8  ?_2
     152  flexcom_select

 
 188 bytes in section .rodata
 164 bytes in section SOFTPACK
 
 164 bytes of CODE  memory
 188 bytes of CONST memory

Errors: none
Warnings: none
