###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         08/Dec/2020  16:30:45
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode                    
#    Endian                   =  little
#    Source file              =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\arch\arm\fault_handlers.c
#    Command line             =
#        -f C:\Users\c40450\AppData\Local\Temp\EW5D4F.tmp
#        (C:\work\AtmelSoftPAck\atmel-software-package-2.17\arch\arm\fault_handlers.c
#        -D "SOFTPACK_VERSION=\"2.17\"" -D TRACE_LEVEL=5 -D VARIANT_DDRAM -D
#        CONFIG_ARCH_ARMV7A -D CONFIG_ARCH_ARM -D CONFIG_SOC_SAMA5D2 -D
#        CONFIG_CHIP_SAMA5D27 -D CONFIG_PACKAGE_289PIN -D
#        CONFIG_BOARD_SAMA5D2_XPLAINED -D CONFIG_HAVE_AIC5 -D
#        CONFIG_HAVE_FLEXCOM -D CONFIG_HAVE_PIO4 -D CONFIG_HAVE_PIO4_SECURE -D
#        CONFIG_HAVE_NFC -D CONFIG_HAVE_PIT -D CONFIG_HAVE_SMC -D
#        CONFIG_HAVE_SMC_SCRAMBLING -D CONFIG_HAVE_GMAC_QUEUES -D
#        CONFIG_HAVE_MPDDRC -D CONFIG_HAVE_MPDDRC_DATA_PATH -D
#        CONFIG_HAVE_MPDDRC_IO_CALIBRATION -D CONFIG_HAVE_MPDDRC_DDR2 -D
#        CONFIG_HAVE_MPDDRC_LPDDR2 -D CONFIG_HAVE_MPDDRC_DDR3 -D
#        CONFIG_HAVE_MPDDRC_LPDDR3 -D CONFIG_HAVE_ADC_SETTLING_TIME -D
#        CONFIG_HAVE_ADC_DIFF_INPUT -D CONFIG_HAVE_ADC_SEQ_R2 -D
#        CONFIG_HAVE_PMC_FAST_STARTUP -D CONFIG_HAVE_PMC_GENERATED_CLOCKS -D
#        CONFIG_HAVE_PMC_AUDIO_CLOCK -D CONFIG_HAVE_PMC_PLLADIV2 -D
#        CONFIG_HAVE_PMC_H32MXDIV -D CONFIG_HAVE_PMC_UPLL_BIAS -D
#        CONFIG_HAVE_SCKC -D CONFIG_HAVE_PWMC_DMA -D
#        CONFIG_HAVE_PWMC_SPREAD_SPECTRUM -D CONFIG_HAVE_PWMC_EXTERNAL_TRIGGER
#        -D CONFIG_HAVE_PWMC_FAULT_PROT_HIZ -D CONFIG_HAVE_PWMC_STEPPER_MOTOR
#        -D CONFIG_HAVE_PWMC_CMP_UNIT -D CONFIG_HAVE_PWMC_SYNC_MODE -D
#        CONFIG_HAVE_PWMC_OOV -D CONFIG_HAVE_PWMC_FMODE -D CONFIG_HAVE_PWMC_WP
#        -D CONFIG_HAVE_PWMC_DTIME -D CONFIG_HAVE_PWMC_ELINE -D
#        CONFIG_HAVE_SFRBU -D CONFIG_HAVE_L2CC -D CONFIG_HAVE_SAIC -D
#        CONFIG_HAVE_XDMAC -D CONFIG_HAVE_XDMAC_DATA_WIDTH_DWORD -D
#        CONFIG_HAVE_SECUMOD -D CONFIG_HAVE_SFC -D CONFIG_HAVE_PWMC -D
#        CONFIG_HAVE_SECURE_MATRIX -D CONFIG_HAVE_DDR3_MT41K128M16 -D
#        CONFIG_HAVE_RSTC_CONFIGURABLE_USER_RESET -D CONFIG_HAVE_TC_FAULT_MODE
#        -D CONFIG_HAVE_TC_DMA_MODE -D CONFIG_HAVE_RTC_CALIBRATION -D
#        CONFIG_HAVE_RTC_MODE_PERSIAN -D CONFIG_HAVE_RTC_MODE_UTC -D
#        CONFIG_HAVE_RTC_TAMPER -D CONFIG_HAVE_AUDIO -D CONFIG_HAVE_SSC -D
#        CONFIG_HAVE_CLASSD -D CONFIG_HAVE_PDMIC -D CONFIG_HAVE_AUDIO_AD1934 -D
#        CONFIG_HAVE_SHDWC -D CONFIG_HAVE_SPI -D CONFIG_HAVE_SPI_FIFO -D
#        CONFIG_HAVE_MMU -D CONFIG_HAVE_L1CACHE -D CONFIG_HAVE_L2CACHE -D
#        CONFIG_HAVE_SPI_BUS -D CONFIG_HAVE_UART -D CONFIG_HAVE_SERIALD_UART -D
#        CONFIG_HAVE_USART -D CONFIG_HAVE_USART_FIFO --preprocess
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\build\sama5d2-xplained\ddram\List
#        -lC
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\build\sama5d2-xplained\ddram\List
#        --diag_suppress Pa050 -o
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\build\sama5d2-xplained\ddram\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-A5 -e --fpu=VFPv4_D16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\..\..\arch\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\..\..\utils\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\..\..\target\common\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\..\..\target\sama5d2\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\..\..\drivers\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\..\..\lib\
#        --section .text=SOFTPACK --cpu_mode arm -On)
#    Locale                   =  C
#    List file                =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\build\sama5d2-xplained\ddram\List\fault_handlers.lst
#    Object file              =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\build\sama5d2-xplained\ddram\Obj\fault_handlers.o
#    Runtime model:              
#      __SystemLibrary        =  DLib
#      __dlib_file_descriptor =  0
#      __dlib_version         =  6
#
###############################################################################

C:\work\AtmelSoftPAck\atmel-software-package-2.17\arch\arm\fault_handlers.c
      1          /* ----------------------------------------------------------------------------
      2           *         SAM Software Package License
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2015, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /*----------------------------------------------------------------------------
     31           *        Headers
     32           *----------------------------------------------------------------------------*/
     33          
     34          #include "arm/fault_handlers.h"
     35          
     36          #include <stdio.h>
     37          #include <stdint.h>
     38          
     39          /*----------------------------------------------------------------------------
     40           *        Constants
     41           *----------------------------------------------------------------------------*/
     42          
     43          #ifdef CONFIG_HAVE_FAULT_DEBUG
     44          
     45          /* IFSR status */
     46          static const char* _prefetch_abort_status[32] = {
     47          	NULL,
     48          	NULL,
     49          	"debug event",
     50          	"access flag fault, section",
     51          	NULL,
     52          	"translation fault, section",
     53          	"access flag fault, page",
     54          	"translation fault, page",
     55          	"synchronous external abort",
     56          	"domain fault, section",
     57          	NULL,
     58          	"domain fault, page",
     59          	"L1 translation, synchronous external abort",
     60          	"permission fault, section",
     61          	"L2 translation, synchronous external abort",
     62          	"permission fault, page",
     63          };
     64          
     65          /* DFSR status */
     66          static const char* _data_abort_status[32] = {
     67          	NULL,
     68          	"alignment fault",
     69          	"debug event",
     70          	"access flag fault, section",
     71          	"instruction cache maintenance fault",
     72          	"translation fault, section",
     73          	"access flag fault, page",
     74          	"translation fault, page",
     75          	"synchronous external abort, nontranslation",
     76          	"domain fault, section",
     77          	NULL,
     78          	"domain fault, page",
     79          	"1st level translation, synchronous external abort",
     80          	"permission fault, section",
     81          	"2nd level translation, synchronous external abort",
     82          	"permission fault, page",
     83          	NULL,
     84          	NULL,
     85          	NULL,
     86          	NULL,
     87          	NULL,
     88          	NULL,
     89          	"asynchronous external abort"
     90          };
     91          
     92          #endif /* CONFIG_HAVE_FAULT_DEBUG */
     93          
     94          /*----------------------------------------------------------------------------
     95           *        Functions
     96           *----------------------------------------------------------------------------*/
     97          
     98          /**
     99           * \brief Default handler for "Undefined Instruction" exception
    100           */

   \                                 In section SOFTPACK, align 4, keep-with-next
    101          void undefined_instruction_irq_handler(void)
    102          {
    103          #ifdef CONFIG_HAVE_FAULT_DEBUG
    104          	printf("\r\n");
    105          	printf("#####################\r\n");
    106          	printf("Undefined Instruction\r\n");
    107          	printf("#####################\r\n");
    108          #endif
    109          
    110          #ifdef NDEBUG
    111          	asm("bkpt #1");
    112          #endif
    113          	while(1);
   \                     undefined_instruction_irq_handler:
   \                     ??undefined_instruction_irq_handler_0:
   \        0x0   0xEAFF'FFFE        B        ??undefined_instruction_irq_handler_0
    114          }
    115          
    116          
    117          /**
    118           * \brief Default handler for "Software Interrupt" exception
    119           */

   \                                 In section SOFTPACK, align 4, keep-with-next
    120          void software_interrupt_irq_handler(void)
    121          {
    122          #ifdef CONFIG_HAVE_FAULT_DEBUG
    123          	printf("\r\n");
    124          	printf("##################\r\n");
    125          	printf("Software Interrupt\r\n");
    126          	printf("##################\r\n");
    127          #endif
    128          
    129          #ifdef NDEBUG
    130          	asm("bkpt #2");
    131          #endif
    132          	while(1);
   \                     software_interrupt_irq_handler:
   \                     ??software_interrupt_irq_handler_0:
   \        0x0   0xEAFF'FFFE        B        ??software_interrupt_irq_handler_0
    133          }
    134          
    135          /**
    136           * \brief Default handler for "Data Abort" exception
    137           */

   \                                 In section SOFTPACK, align 4, keep-with-next
    138          void data_abort_irq_handler(void)
    139          {
    140          #ifdef CONFIG_HAVE_FAULT_DEBUG
    141          	uint32_t v1, v2, dfsr;
    142          
    143          	asm("mrc p15, 0, %0, c5, c0, 0" : "=r"(v1));
    144          	asm("mrc p15, 0, %0, c6, c0, 0" : "=r"(v2));
    145          
    146          	printf("\r\n");
    147          	printf("####################\r\n");
    148          	dfsr = ((v1 >> 4) & 0x0F);
    149          	printf("Data Fault occured in %x domain\r\n", (unsigned int)dfsr);
    150          	dfsr = (((v1 & 0x400) >> 6) | (v1 & 0x0F));
    151          	if (_data_abort_status[dfsr])
    152          		printf("Data Fault reason is: %s\r\n", _data_abort_status[dfsr]);
    153          	else
    154          		printf("Data Fault reason is unknown\r\n");
    155          	printf("Data Fault occured at address: 0x%08x\r\n", (unsigned int)v2);
    156          	printf("Data Fault status register value: 0x%x\r\n", (unsigned int)v1);
    157          	printf("####################\n\r");
    158          #endif
    159          
    160          #ifdef NDEBUG
    161          	asm("bkpt #4");
    162          #endif
    163          #ifdef CONFIG_HAVE_FAULT_DEBUG
    164          	while(1);
    165          #endif
    166          }
   \                     data_abort_irq_handler:
   \        0x0   0xE12F'FF1E        BX       LR               ;; return
    167          
    168          /**
    169           * \brief Default handler for "Prefetch Abort" exception
    170           */

   \                                 In section SOFTPACK, align 4, keep-with-next
    171          void prefetch_abort_irq_handler(void)
    172          {
    173          #ifdef CONFIG_HAVE_FAULT_DEBUG
    174          	uint32_t v1, v2, ifsr;
    175          
    176          	asm("mrc p15, 0, %0, c5, c0, 1" : "=r"(v1));
    177          	asm("mrc p15, 0, %0, c6, c0, 2" : "=r"(v2));
    178          
    179          	printf("\r\n");
    180          	printf("####################\r\n");
    181          	ifsr = (((v1 & 0x400) >> 6) | (v1 & 0x0F));
    182          	if (_prefetch_abort_status[ifsr])
    183          		printf("Prefetch Fault reason is: %s\r\n", _prefetch_abort_status[ifsr]);
    184          	else
    185          		printf("Prefetch Fault reason is unknown\r\n");
    186          	printf("prefetch Fault occured at address: 0x%08x\r\n", (unsigned int)v2);
    187          	printf("Prefetch Fault status register value: 0x%x\r\n", (unsigned int)v1);
    188          	printf("####################\n\r");
    189          #endif
    190          
    191          #ifdef NDEBUG
    192          	asm("bkpt #3");
    193          #endif
    194          	while(1);
   \                     prefetch_abort_irq_handler:
   \                     ??prefetch_abort_irq_handler_0:
   \        0x0   0xEAFF'FFFE        B        ??prefetch_abort_irq_handler_0
    195          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   data_abort_irq_handler
       0   prefetch_abort_irq_handler
       0   software_interrupt_irq_handler
       0   undefined_instruction_irq_handler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  data_abort_irq_handler
       4  prefetch_abort_irq_handler
       4  software_interrupt_irq_handler
       4  undefined_instruction_irq_handler

 
 16 bytes in section SOFTPACK
 
 16 bytes of CODE memory

Errors: none
Warnings: none
