###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         08/Dec/2020  16:30:46
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode             
#    Endian            =  little
#    Source file       =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\arch\arm\mmu_cp15.c
#    Command line      =
#        -f C:\Users\c40450\AppData\Local\Temp\EW6036.tmp
#        (C:\work\AtmelSoftPAck\atmel-software-package-2.17\arch\arm\mmu_cp15.c
#        -D "SOFTPACK_VERSION=\"2.17\"" -D TRACE_LEVEL=5 -D VARIANT_DDRAM -D
#        CONFIG_ARCH_ARMV7A -D CONFIG_ARCH_ARM -D CONFIG_SOC_SAMA5D2 -D
#        CONFIG_CHIP_SAMA5D27 -D CONFIG_PACKAGE_289PIN -D
#        CONFIG_BOARD_SAMA5D2_XPLAINED -D CONFIG_HAVE_AIC5 -D
#        CONFIG_HAVE_FLEXCOM -D CONFIG_HAVE_PIO4 -D CONFIG_HAVE_PIO4_SECURE -D
#        CONFIG_HAVE_NFC -D CONFIG_HAVE_PIT -D CONFIG_HAVE_SMC -D
#        CONFIG_HAVE_SMC_SCRAMBLING -D CONFIG_HAVE_GMAC_QUEUES -D
#        CONFIG_HAVE_MPDDRC -D CONFIG_HAVE_MPDDRC_DATA_PATH -D
#        CONFIG_HAVE_MPDDRC_IO_CALIBRATION -D CONFIG_HAVE_MPDDRC_DDR2 -D
#        CONFIG_HAVE_MPDDRC_LPDDR2 -D CONFIG_HAVE_MPDDRC_DDR3 -D
#        CONFIG_HAVE_MPDDRC_LPDDR3 -D CONFIG_HAVE_ADC_SETTLING_TIME -D
#        CONFIG_HAVE_ADC_DIFF_INPUT -D CONFIG_HAVE_ADC_SEQ_R2 -D
#        CONFIG_HAVE_PMC_FAST_STARTUP -D CONFIG_HAVE_PMC_GENERATED_CLOCKS -D
#        CONFIG_HAVE_PMC_AUDIO_CLOCK -D CONFIG_HAVE_PMC_PLLADIV2 -D
#        CONFIG_HAVE_PMC_H32MXDIV -D CONFIG_HAVE_PMC_UPLL_BIAS -D
#        CONFIG_HAVE_SCKC -D CONFIG_HAVE_PWMC_DMA -D
#        CONFIG_HAVE_PWMC_SPREAD_SPECTRUM -D CONFIG_HAVE_PWMC_EXTERNAL_TRIGGER
#        -D CONFIG_HAVE_PWMC_FAULT_PROT_HIZ -D CONFIG_HAVE_PWMC_STEPPER_MOTOR
#        -D CONFIG_HAVE_PWMC_CMP_UNIT -D CONFIG_HAVE_PWMC_SYNC_MODE -D
#        CONFIG_HAVE_PWMC_OOV -D CONFIG_HAVE_PWMC_FMODE -D CONFIG_HAVE_PWMC_WP
#        -D CONFIG_HAVE_PWMC_DTIME -D CONFIG_HAVE_PWMC_ELINE -D
#        CONFIG_HAVE_SFRBU -D CONFIG_HAVE_L2CC -D CONFIG_HAVE_SAIC -D
#        CONFIG_HAVE_XDMAC -D CONFIG_HAVE_XDMAC_DATA_WIDTH_DWORD -D
#        CONFIG_HAVE_SECUMOD -D CONFIG_HAVE_SFC -D CONFIG_HAVE_PWMC -D
#        CONFIG_HAVE_SECURE_MATRIX -D CONFIG_HAVE_DDR3_MT41K128M16 -D
#        CONFIG_HAVE_RSTC_CONFIGURABLE_USER_RESET -D CONFIG_HAVE_TC_FAULT_MODE
#        -D CONFIG_HAVE_TC_DMA_MODE -D CONFIG_HAVE_RTC_CALIBRATION -D
#        CONFIG_HAVE_RTC_MODE_PERSIAN -D CONFIG_HAVE_RTC_MODE_UTC -D
#        CONFIG_HAVE_RTC_TAMPER -D CONFIG_HAVE_AUDIO -D CONFIG_HAVE_SSC -D
#        CONFIG_HAVE_CLASSD -D CONFIG_HAVE_PDMIC -D CONFIG_HAVE_AUDIO_AD1934 -D
#        CONFIG_HAVE_SHDWC -D CONFIG_HAVE_SPI -D CONFIG_HAVE_SPI_FIFO -D
#        CONFIG_HAVE_MMU -D CONFIG_HAVE_L1CACHE -D CONFIG_HAVE_L2CACHE -D
#        CONFIG_HAVE_SPI_BUS -D CONFIG_HAVE_UART -D CONFIG_HAVE_SERIALD_UART -D
#        CONFIG_HAVE_USART -D CONFIG_HAVE_USART_FIFO --preprocess
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\build\sama5d2-xplained\ddram\List
#        -lC
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\build\sama5d2-xplained\ddram\List
#        --diag_suppress Pa050 -o
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\build\sama5d2-xplained\ddram\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-A5 -e --fpu=VFPv4_D16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\..\..\arch\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\..\..\utils\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\..\..\target\common\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\..\..\target\sama5d2\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\..\..\drivers\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\..\..\lib\
#        --section .text=SOFTPACK --cpu_mode arm -On)
#    Locale            =  C
#    List file         =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\build\sama5d2-xplained\ddram\List\mmu_cp15.lst
#    Object file       =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\classd\build\sama5d2-xplained\ddram\Obj\mmu_cp15.o
#    Runtime model:       
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\work\AtmelSoftPAck\atmel-software-package-2.17\arch\arm\mmu_cp15.c
      1          /* ----------------------------------------------------------------------------
      2           *         SAM Software Package License
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2015, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /*------------------------------------------------------------------------------ */
     31          /*         Headers                                                               */
     32          /*------------------------------------------------------------------------------ */
     33          
     34          #include "compiler.h"
     35          #include "barriers.h"

   \                                 In section SOFTPACK, align 4, keep-with-next
   \   static __interwork __vfp void dsb(void)
   \                     `dsb`:
   \        0x0   0xF57F'F04F        dsb
   \        0x4   0xE12F'FF1E        BX       LR               ;; return

   \                                 In section SOFTPACK, align 4, keep-with-next
   \   static __interwork __vfp void isb(void)
   \                     `isb`:
   \        0x0   0xF57F'F06F        isb
   \        0x4   0xE12F'FF1E        BX       LR               ;; return
     36          
     37          #include "arm/cp15.h"

   \                                 In section SOFTPACK, align 4, keep-with-next
   \   static __interwork __vfp uint32_t cp15_read_sctlr(void)
   \                     cp15_read_sctlr:
   \        0x0   0xEE11'0F10        mrc p15, 0, R0, c1, c0, 0
   \        0x4   0xE12F'FF1E        BX       LR               ;; return

   \                                 In section SOFTPACK, align 4, keep-with-next
   \   static __interwork __vfp void cp15_write_sctlr(uint32_t)
   \                     cp15_write_sctlr:
   \        0x0   0xEE01'0F10        mcr p15, 0, R0, c1, c0, 0
   \        0x4   0xE12F'FF1E        BX       LR               ;; return

   \                                 In section SOFTPACK, align 4, keep-with-next
   \   static __interwork __vfp void cp15_write_ttbr0(uint32_t)
   \                     cp15_write_ttbr0:
   \        0x0   0xEE02'0F10        mcr p15, 0, R0, c2, c0, 0
   \        0x4   0xE12F'FF1E        BX       LR               ;; return

   \                                 In section SOFTPACK, align 4, keep-with-next
   \   static __interwork __vfp void cp15_write_dacr(uint32_t)
   \                     cp15_write_dacr:
   \        0x0   0xEE03'0F10        mcr p15, 0, R0, c3, c0, 0
   \        0x4   0xE12F'FF1E        BX       LR               ;; return
     38          #include "arm/mmu_cp15.h"
     39          
     40          #include "mm/l1cache.h"
     41          #include "mm/mmu.h"
     42          
     43          #include <assert.h>
     44          
     45          /*------------------------------------------------------------------------------ */
     46          /*         Exported functions                                                    */
     47          /*------------------------------------------------------------------------------ */
     48          

   \                                 In section SOFTPACK, align 4, keep-with-next
     49          void mmu_configure(void *tlb)
     50          {
   \                     mmu_configure:
   \        0x0   0xE92D'4010        PUSH     {R4,LR}
   \        0x4   0xE1B0'4000        MOVS     R4,R0
     51          	assert(!mmu_is_enabled());
   \        0x8   0x....'....        BL       mmu_is_enabled
   \        0xC   0xE350'0000        CMP      R0,#+0
   \       0x10   0x0A00'0004        BEQ      ??mmu_configure_0
   \       0x14   0xE3A0'2033        MOV      R2,#+51
   \       0x18   0x....'....        LDR      R1,??DataTable1
   \       0x1C   0x....'....        LDR      R0,??DataTable1_1
   \       0x20   0x....'....        BL       __aeabi_assert
   \       0x24   0x....'....        BL       __iar_EmptyStepPoint
     52          
     53          	/* Translation Table Base Register 0 */
     54          	cp15_write_ttbr0((unsigned int)tlb);
   \                     ??mmu_configure_0:
   \       0x28   0xE1B0'0004        MOVS     R0,R4
   \       0x2C   0x....'....        BL       cp15_write_ttbr0
     55          
     56          	/* Domain Access Register */
     57          	/* only domain 15: access are not checked */
     58          	cp15_write_dacr(0xC0000000);
   \       0x30   0xE3A0'04C0        MOV      R0,#-1073741824
   \       0x34   0x....'....        BL       cp15_write_dacr
     59          
     60          	dsb();
   \       0x38   0x....'....        BL       `dsb`
     61          	isb();
   \       0x3C   0x....'....        BL       `isb`
     62          }
   \       0x40   0xE8BD'8010        POP      {R4,PC}          ;; return
     63          

   \                                 In section SOFTPACK, align 4, keep-with-next
     64          bool mmu_is_enabled(void)
     65          {
   \                     mmu_is_enabled:
   \        0x0   0xE92D'5000        PUSH     {R12,LR}
     66          	return (cp15_read_sctlr() & CP15_SCTLR_M) != 0;
   \        0x4   0x....'....        BL       cp15_read_sctlr
   \        0x8   0xE210'0001        ANDS     R0,R0,#0x1
   \        0xC   0xE8BD'8002        POP      {R1,PC}          ;; return
     67          }
     68          

   \                                 In section SOFTPACK, align 4, keep-with-next
     69          void mmu_enable(void)
     70          {
   \                     mmu_enable:
   \        0x0   0xE92D'4010        PUSH     {R4,LR}
     71          	uint32_t control;
     72          
     73          	control = cp15_read_sctlr();
   \        0x4   0x....'....        BL       cp15_read_sctlr
   \        0x8   0xE1B0'4000        MOVS     R4,R0
     74          	if ((control & CP15_SCTLR_M) == 0)
   \        0xC   0xE314'0001        TST      R4,#0x1
   \       0x10   0x1A00'0001        BNE      ??mmu_enable_0
     75          		cp15_write_sctlr(control | CP15_SCTLR_M);
   \       0x14   0xE394'0001        ORRS     R0,R4,#0x1
   \       0x18   0x....'....        BL       cp15_write_sctlr
     76          }
   \                     ??mmu_enable_0:
   \       0x1C   0xE8BD'8010        POP      {R4,PC}          ;; return
     77          

   \                                 In section SOFTPACK, align 4, keep-with-next
     78          void mmu_disable(void)
     79          {
   \                     mmu_disable:
   \        0x0   0xE92D'4010        PUSH     {R4,LR}
     80          	uint32_t control;
     81          
     82          	control = cp15_read_sctlr();
   \        0x4   0x....'....        BL       cp15_read_sctlr
   \        0x8   0xE1B0'4000        MOVS     R4,R0
     83          	if (control & CP15_SCTLR_M) {
   \        0xC   0xE314'0001        TST      R4,#0x1
   \       0x10   0x0A00'0004        BEQ      ??mmu_disable_0
     84          		dcache_clean();
   \       0x14   0x....'....        BL       dcache_clean
     85          		control &= ~(CP15_SCTLR_M | CP15_SCTLR_C);
   \       0x18   0xE3D4'4005        BICS     R4,R4,#0x5
     86          		cp15_write_sctlr(control);
   \       0x1C   0xE1B0'0004        MOVS     R0,R4
   \       0x20   0x....'....        BL       cp15_write_sctlr
     87          		dcache_invalidate();
   \       0x24   0x....'....        BL       dcache_invalidate
     88          	}
     89          }
   \                     ??mmu_disable_0:
   \       0x28   0xE8BD'8010        POP      {R4,PC}          ;; return

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable1:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable1_1:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x21 0x6D          DC8 "!mmu_is_enabled()"

   \              0x6D 0x75    

   \              0x5F 0x69    

   \              0x73 0x5F    

   \              0x65 0x6E    

   \              0x61 0x62    

   \              0x6C 0x65    

   \              0x64 0x28    

   \              0x29 0x00
   \       0x12   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x43 0x3A          DC8 0x43, 0x3A, 0x5C, 0x77, 0x6F, 0x72, 0x6B, 0x5C

   \              0x5C 0x77    

   \              0x6F 0x72    

   \              0x6B 0x5C
   \        0x8   0x41 0x74          DC8 0x41, 0x74, 0x6D, 0x65, 0x6C, 0x53, 0x6F, 0x66

   \              0x6D 0x65    

   \              0x6C 0x53    

   \              0x6F 0x66
   \       0x10   0x74 0x50          DC8 0x74, 0x50, 0x41, 0x63, 0x6B, 0x5C, 0x61, 0x74

   \              0x41 0x63    

   \              0x6B 0x5C    

   \              0x61 0x74
   \       0x18   0x6D 0x65          DC8 0x6D, 0x65, 0x6C, 0x2D, 0x73, 0x6F, 0x66, 0x74

   \              0x6C 0x2D    

   \              0x73 0x6F    

   \              0x66 0x74
   \       0x20   0x77 0x61          DC8 0x77, 0x61, 0x72, 0x65, 0x2D, 0x70, 0x61, 0x63

   \              0x72 0x65    

   \              0x2D 0x70    

   \              0x61 0x63
   \       0x28   0x6B 0x61          DC8 0x6B, 0x61, 0x67, 0x65, 0x2D, 0x32, 0x2E, 0x31

   \              0x67 0x65    

   \              0x2D 0x32    

   \              0x2E 0x31
   \       0x30   0x37 0x5C          DC8 0x37, 0x5C, 0x61, 0x72, 0x63, 0x68, 0x5C, 0x61

   \              0x61 0x72    

   \              0x63 0x68    

   \              0x5C 0x61
   \       0x38   0x72 0x6D          DC8 0x72, 0x6D, 0x5C, 0x6D, 0x6D, 0x75, 0x5F, 0x63

   \              0x5C 0x6D    

   \              0x6D 0x75    

   \              0x5F 0x63
   \       0x40   0x70 0x31          DC8 0x70, 0x31, 0x35, 0x2E, 0x63, 0

   \              0x35 0x2E    

   \              0x63 0x00
   \       0x46   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   cp15_read_sctlr
       0   cp15_write_dacr
       0   cp15_write_sctlr
       0   cp15_write_ttbr0
       0   dsb
       0   isb
       8   mmu_configure
         8   -> __aeabi_assert
         8   -> __iar_EmptyStepPoint
         8   -> cp15_write_dacr
         8   -> cp15_write_ttbr0
         8   -> dsb
         8   -> isb
         8   -> mmu_is_enabled
       8   mmu_disable
         8   -> cp15_read_sctlr
         8   -> cp15_write_sctlr
         8   -> dcache_clean
         8   -> dcache_invalidate
       8   mmu_enable
         8   -> cp15_read_sctlr
         8   -> cp15_write_sctlr
       8   mmu_is_enabled
         8   -> cp15_read_sctlr


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
      20  ?_0
      72  ?_1
       8  cp15_read_sctlr
       8  cp15_write_dacr
       8  cp15_write_sctlr
       8  cp15_write_ttbr0
       8  dsb
       8  isb
      68  mmu_configure
      44  mmu_disable
      32  mmu_enable
      16  mmu_is_enabled

 
  92 bytes in section .rodata
 216 bytes in section SOFTPACK
 
 216 bytes of CODE  memory
  92 bytes of CONST memory

Errors: none
Warnings: none
