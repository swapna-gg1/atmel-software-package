###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         20/Jan/2021  09:41:39
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode             
#    Endian            =  little
#    Source file       =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\target\sam9x60\chip.c
#    Command line      =
#        -f C:\Users\c40450\AppData\Local\Temp\EWCF8B.tmp
#        (C:\work\AtmelSoftPAck\atmel-software-package-2.17\target\sam9x60\chip.c
#        -D "SOFTPACK_VERSION=\"2.17\"" -D TRACE_LEVEL=5 -D VARIANT_SRAM -D
#        CONFIG_ARCH_ARMV5TE -D CONFIG_ARCH_ARM -D CONFIG_SOC_SAM9X60 -D
#        CONFIG_CHIP_SAM9X60 -D CONFIG_BOARD_SAM9X60_EK -D CONFIG_HAVE_AIC5 -D
#        CONFIG_HAVE_FLEXCOM -D CONFIG_HAVE_PIO3 -D CONFIG_HAVE_PIT -D
#        CONFIG_HAVE_SMC -D CONFIG_HAVE_SDRAMC -D CONFIG_HAVE_MPDDRC -D
#        CONFIG_HAVE_MPDDRC_DATA_PATH -D CONFIG_HAVE_MPDDRC_IO_CALIBRATION -D
#        CONFIG_HAVE_MPDDRC_DDR2 -D CONFIG_HAVE_ADC_LOW_RES -D
#        CONFIG_HAVE_PMC_FAST_STARTUP -D CONFIG_HAVE_PMC_GENERATED_CLOCKS -D
#        CONFIG_HAVE_SCKC -D CONFIG_HAVE_NFD0_ON_D16 -D CONFIG_HAVE_XDMAC -D
#        CONFIG_HAVE_LCD -D CONFIG_HAVE_LCDC -D CONFIG_HAVE_LCDC_OVR1 -D
#        CONFIG_HAVE_LCDC_OVR2 -D CONFIG_HAVE_PWMC -D
#        CONFIG_HAVE_DDR2_W972GG6KB -D CONFIG_HAVE_RSTC_EXTERNAL_RESET -D
#        CONFIG_HAVE_RSTC_INDEPENDENT_RESET -D CONFIG_HAVE_RTT -D
#        CONFIG_HAVE_SHDWC -D CONFIG_HAVE_LED -D CONFIG_HAVE_MMU -D
#        CONFIG_HAVE_L1CACHE -D CONFIG_HAVE_OTPC -D CONFIG_HAVE_DBGU -D
#        CONFIG_HAVE_SERIALD_DBGU -D CONFIG_HAVE_USART -D
#        CONFIG_HAVE_USART_FIFO -D CONFIG_HAVE_DWDT --preprocess
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\lcd\build\sam9x60-ek\sram\List
#        -lC
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\lcd\build\sam9x60-ek\sram\List
#        --diag_suppress Pa050 -o
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\lcd\build\sam9x60-ek\sram\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=ARM926EJ-S -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\lcd\..\..\arch\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\lcd\..\..\utils\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\lcd\..\..\target\common\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\lcd\..\..\target\sam9x60\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\lcd\..\..\drivers\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\lcd\..\..\lib\
#        --section .text=SOFTPACK --cpu_mode arm -On)
#    Locale            =  C
#    List file         =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\lcd\build\sam9x60-ek\sram\List\chip.lst
#    Object file       =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\lcd\build\sam9x60-ek\sram\Obj\chip.o
#    Runtime model:       
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\work\AtmelSoftPAck\atmel-software-package-2.17\target\sam9x60\chip.c
      1          /* ----------------------------------------------------------------------------
      2           *         SAM Software Package License
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2018, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /*----------------------------------------------------------------------------
     31           *        Headers
     32           *----------------------------------------------------------------------------*/
     33          
     34          #include <string.h>
     35          
     36          #include "chip.h"
     37          #include "compiler.h"
     38          #include "peripherals/pmc.h"
     39          #include "serial/console.h"
     40          
     41          /*----------------------------------------------------------------------------
     42           *        Definitions
     43           *----------------------------------------------------------------------------*/
     44          
     45          struct peripheral_xdma {
     46          	uint32_t id;   /**< Peripheral ID */
     47          	uint8_t  iftx; /**< DMA Interface for TX */
     48          	uint8_t  ifrx; /**< DMA Interface for RX */
     49          };
     50          
     51          /*----------------------------------------------------------------------------
     52           *        Local constants
     53           *----------------------------------------------------------------------------*/
     54          
     55          /* default console used by ROM-code */

   \                                 In section .rodata, align 4
     56          static const struct _console_cfg _console_cfg =
   \                     _console_cfg:
   \        0x0   0xFFFF'F200        DC32 0xffff'f200, 115'200

   \              0x0001'C200
   \        0x8   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \        0xC   0x0000'0400        DC32 1'024
   \       0x10   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \       0x14   0x0000'0000        DC32 0
   \       0x18   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \       0x1C   0x0000'0200        DC32 512
   \       0x20   0x00 0x00          DC8 0, 0, 0, 0

   \              0x00 0x00
   \       0x24   0x0000'0000        DC32 0
     57          	{ DBGU, 115200, PIN_DBGU_TXD, PIN_DBGU_RXD };
     58          

   \                                 In section .rodata, align 4
     59          static const struct peripheral_xdma _xdmac_peripherals[] = {
   \                     _xdmac_peripherals:
   \        0x0   0x0000'0005        DC32 5
   \        0x4   0x00 0x01          DC8 0, 1, 0, 0

   \              0x00 0x00
   \        0x8   0x0000'0006        DC32 6
   \        0xC   0x02 0x03          DC8 2, 3, 0, 0

   \              0x00 0x00
   \       0x10   0x0000'0007        DC32 7
   \       0x14   0x04 0x05          DC8 4, 5, 0, 0

   \              0x00 0x00
   \       0x18   0x0000'0008        DC32 8
   \       0x1C   0x06 0x07          DC8 6, 7, 0, 0

   \              0x00 0x00
   \       0x20   0x0000'000D        DC32 13
   \       0x24   0x08 0x09          DC8 8, 9, 0, 0

   \              0x00 0x00
   \       0x28   0x0000'000E        DC32 14
   \       0x2C   0x0A 0x0B          DC8 10, 11, 0, 0

   \              0x00 0x00
   \       0x30   0x0000'0009        DC32 9
   \       0x34   0x0C 0x0D          DC8 12, 13, 0, 0

   \              0x00 0x00
   \       0x38   0x0000'000A        DC32 10
   \       0x3C   0x0E 0x0F          DC8 14, 15, 0, 0

   \              0x00 0x00
   \       0x40   0x0000'000B        DC32 11
   \       0x44   0x10 0x11          DC8 16, 17, 0, 0

   \              0x00 0x00
   \       0x48   0x0000'000F        DC32 15
   \       0x4C   0x12 0x13          DC8 18, 19, 0, 0

   \              0x00 0x00
   \       0x50   0x0000'0010        DC32 16
   \       0x54   0x14 0x15          DC8 20, 21, 0, 0

   \              0x00 0x00
   \       0x58   0x0000'0020        DC32 32
   \       0x5C   0x16 0x17          DC8 22, 23, 0, 0

   \              0x00 0x00
   \       0x60   0x0000'0021        DC32 33
   \       0x64   0x18 0x19          DC8 24, 25, 0, 0

   \              0x00 0x00
   \       0x68   0x0000'0023        DC32 35
   \       0x6C   0x1A 0x1B          DC8 26, 27, 0, 0

   \              0x00 0x00
   \       0x70   0x0000'002F        DC32 47
   \       0x74   0x1C 0x1D          DC8 28, 29, 0, 0

   \              0x00 0x00
   \       0x78   0x0000'0028        DC32 40
   \       0x7C   0x1F 0x1E          DC8 31, 30, 0, 0

   \              0x00 0x00
   \       0x80   0x0000'0027        DC32 39
   \       0x84   0x20 0x21          DC8 32, 33, 0, 0

   \              0x00 0x00
   \       0x88   0x0000'0029        DC32 41
   \       0x8C   0x22 0xFF          DC8 34, 255, 0, 0

   \              0x00 0x00
   \       0x90   0x0000'002A        DC32 42
   \       0x94   0x23 0xFF          DC8 35, 255, 0, 0

   \              0x00 0x00
   \       0x98   0x0000'0022        DC32 34
   \       0x9C   0x24 0x25          DC8 36, 37, 0, 0

   \              0x00 0x00
   \       0xA0   0x0000'001C        DC32 28
   \       0xA4   0x26 0x27          DC8 38, 39, 0, 0

   \              0x00 0x00
   \       0xA8   0x0000'0013        DC32 19
   \       0xAC   0xFF 0x28          DC8 255, 40, 0, 0

   \              0x00 0x00
   \       0xB0   0x0000'0011        DC32 17
   \       0xB4   0xFF 0x29          DC8 255, 41, 0, 0

   \              0x00 0x00
   \       0xB8   0x0000'002D        DC32 45
   \       0xBC   0xFF 0x2A          DC8 255, 42, 0, 0

   \              0x00 0x00
     60          	{ ID_FLEXCOM0,    0,    1 },
     61          	{ ID_FLEXCOM1,    2,    3 },
     62          	{ ID_FLEXCOM2,    4,    5 },
     63          	{ ID_FLEXCOM3,    6,    7 },
     64          	{ ID_FLEXCOM4,    8,    9 },
     65          	{ ID_FLEXCOM5,   10,   11 },
     66          	{ ID_FLEXCOM6,   12,   13 },
     67          	{ ID_FLEXCOM7,   14,   15 },
     68          	{ ID_FLEXCOM8,   16,   17 },
     69          	{ ID_FLEXCOM9,   18,   19 },
     70          	{ ID_FLEXCOM10,  20,   21 },
     71          	{ ID_FLEXCOM11,  22,   23 },
     72          	{ ID_FLEXCOM12,  24,   25 },
     73          	{ ID_QSPI0,      26,   27 },
     74          	{ ID_DBGU,       28,   29 },
     75          	{ ID_TDES,       31,   30 },
     76          	{ ID_AES,        32,   33 },
     77          	{ ID_SHA,        34,  0xff},
     78          	{ ID_CLASSD0,    35, 0xff },
     79          	{ ID_I2SMCC,     36,   37 },
     80          	{ ID_SSC,        38,   39 },
     81          	{ ID_ADC,      0xff,   40 },
     82          	{ ID_TC0,      0xff,   41 },
     83          	{ ID_TC1,      0xff,   42 },
     84          /*	{ ID_TC0_TC1_CPA, 43,  0xff },
     85          	{ ID_TC1_TC4_CPA, 44,  0xff },
     86          	{ ID_TC0_TC1_CPB, 45,  0xff },
     87          	{ ID_TC1_TC4_CPB, 46,  0xff },
     88          	{ ID_TC0_TC1_CPC, 47,  0xff },
     89          	{ ID_TC1_TC4_CPC, 48,  0xff },
     90          	{ ID_TC0_TC1_EXT, 49,  0xff },
     91          	{ ID_TC1_TC4_EXT, 50,  0xff },*/
     92          };
     93          
     94          /* must be sorted by peripheral ID */

   \                                 In section .rodata, align 4
     95          static const uint32_t _div_peripherals[] = {
   \                     _div_peripherals:
   \        0x0   0x0000'0002        DC32 2
     96          	ID_PIOA,
     97          #ifdef CONFIG_HAVE_CAN
     98          	ID_CAN0, ID_CAN1
     99          #endif
    100          };
    101          
    102          /*----------------------------------------------------------------------------
    103           *        Private functions
    104           *----------------------------------------------------------------------------*/
    105          

   \                                 In section SOFTPACK, align 4, keep-with-next
    106          static const struct peripheral_xdma *get_peripheral_xdma(uint32_t id, Xdmac *xdmac)
    107          {
   \                     get_peripheral_xdma:
   \        0x0   0xE1B0'2000        MOVS     R2,R0
    108          	int i;
    109          
    110          	if (xdmac != XDMAC0) {
   \        0x4   0xE3A0'04F0        MOV      R0,#-268435456
   \        0x8   0xE380'0C80        ORR      R0,R0,#0x8000
   \        0xC   0xE151'0000        CMP      R1,R0
   \       0x10   0x0A00'0001        BEQ      ??get_peripheral_xdma_0
    111          		return NULL;
   \       0x14   0xE3A0'0000        MOV      R0,#+0
   \       0x18   0xEA00'000D        B        ??get_peripheral_xdma_1
    112          	}
    113          
    114          	for (i = 0; i < ARRAY_SIZE(_xdmac_peripherals); i++) {
   \                     ??get_peripheral_xdma_0:
   \       0x1C   0xE3A0'3000        MOV      R3,#+0
   \                     ??get_peripheral_xdma_2:
   \       0x20   0xE353'0018        CMP      R3,#+24
   \       0x24   0x2A00'0009        BCS      ??get_peripheral_xdma_3
    115          		if (_xdmac_peripherals[i].id == id) {
   \       0x28   0x....'....        LDR      R0,??DataTable4
   \       0x2C   0xE1B0'C183        LSLS     R12,R3,#+3
   \       0x30   0xE790'C00C        LDR      R12,[R0, +R12]
   \       0x34   0xE15C'0002        CMP      R12,R2
   \       0x38   0x1A00'0002        BNE      ??get_peripheral_xdma_4
    116          			return &_xdmac_peripherals[i];
   \       0x3C   0xE1B0'3183        LSLS     R3,R3,#+3
   \       0x40   0xE090'0003        ADDS     R0,R0,R3
   \       0x44   0xEA00'0002        B        ??get_peripheral_xdma_1
    117          		}
    118          	}
   \                     ??get_peripheral_xdma_4:
   \       0x48   0xE293'3001        ADDS     R3,R3,#+1
   \       0x4C   0xEAFF'FFF3        B        ??get_peripheral_xdma_2
    119          
    120          	return NULL;
   \                     ??get_peripheral_xdma_3:
   \       0x50   0xE3A0'0000        MOV      R0,#+0
   \                     ??get_peripheral_xdma_1:
   \       0x54   0xE12F'FF1E        BX       LR               ;; return
    121          }
    122          
    123          /*----------------------------------------------------------------------------
    124           *        Exported functions
    125           *----------------------------------------------------------------------------*/
    126          

   \                                 In section SOFTPACK, align 4, keep-with-next
    127          const char* get_chip_name(void)
    128          {
    129          	if ((DBGU->DBGU_CIDR & ~DBGU_CIDR_VERSION_Msk) ==
    130          			CHIPID_CIDR_SAM9X60) {
   \                     get_chip_name:
   \        0x0   0xE3E0'00BF        MVN      R0,#+191
   \        0x4   0xE3C0'0ED0        BIC      R0,R0,#0xD00
   \        0x8   0xE590'0000        LDR      R0,[R0, #+0]
   \        0xC   0xE1B0'02A0        LSRS     R0,R0,#+5
   \       0x10   0x....'....        LDR      R1,??DataTable4_1  ;; 0x819b35a0
   \       0x14   0xE151'0280        CMP      R1,R0, LSL #+5
   \       0x18   0x1A00'0001        BNE      ??get_chip_name_0
    131          		return "SAM9X60";
   \       0x1C   0x....'....        LDR      R0,??DataTable4_2
   \       0x20   0xEA00'0000        B        ??get_chip_name_1
    132          	}
    133          
    134          	return "Unknown";
   \                     ??get_chip_name_0:
   \       0x24   0x....'....        LDR      R0,??DataTable4_3
   \                     ??get_chip_name_1:
   \       0x28   0xE12F'FF1E        BX       LR               ;; return
    135          }
    136          

   \                                 In section SOFTPACK, align 4, keep-with-next
    137          void get_romcode_console(struct _console_cfg* config)
    138          {
   \                     get_romcode_console:
   \        0x0   0xE92D'40F8        PUSH     {R3-R7,LR}
   \        0x4   0xE1B0'4000        MOVS     R4,R0
    139          	memcpy(config, &_console_cfg, sizeof(*config));
   \        0x8   0xE3A0'5028        MOV      R5,#+40
   \        0xC   0x....'....        LDR      R6,??DataTable4_4
   \       0x10   0xE1B0'7004        MOVS     R7,R4
   \       0x14   0xE1B0'2005        MOVS     R2,R5
   \       0x18   0xE1B0'1006        MOVS     R1,R6
   \       0x1C   0xE1B0'0007        MOVS     R0,R7
   \       0x20   0x....'....        BL       __aeabi_memcpy
   \       0x24   0xE1B0'0007        MOVS     R0,R7
    140          }
   \       0x28   0xE8BD'80F1        POP      {R0,R4-R7,PC}    ;; return
    141          

   \                                 In section SOFTPACK, align 4, keep-with-next
    142          uint32_t get_peripheral_clock_matrix_div(uint32_t id)
    143          {
   \                     get_peripheral_clock_matrix_div:
   \        0x0   0xE1B0'1000        MOVS     R1,R0
    144          	return 1;
   \        0x4   0xE3A0'0001        MOV      R0,#+1
   \        0x8   0xE12F'FF1E        BX       LR               ;; return
    145          }
    146          

   \                                 In section SOFTPACK, align 4, keep-with-next
    147          uint32_t get_peripheral_clock_max_freq(uint32_t id)
    148          {
   \                     get_peripheral_clock_max_freq:
   \        0x0   0xE92D'4010        PUSH     {R4,LR}
   \        0x4   0xE1B0'4000        MOVS     R4,R0
    149          	return pmc_get_master_clock();
   \        0x8   0x....'....        BL       pmc_get_master_clock
   \        0xC   0xE8BD'8010        POP      {R4,PC}          ;; return
    150          }
    151          

   \                                 In section SOFTPACK, align 4, keep-with-next
    152          bool peripheral_has_clock_div(uint32_t id)
    153          {
   \                     peripheral_has_clock_div:
   \        0x0   0xE1B0'1000        MOVS     R1,R0
    154          	int i;
    155          	for (i = 0; i < ARRAY_SIZE(_div_peripherals) && _div_peripherals[i] <= id; i++)
   \        0x4   0xE3A0'2000        MOV      R2,#+0
   \                     ??peripheral_has_clock_div_0:
   \        0x8   0xE352'0000        CMP      R2,#+0
   \        0xC   0x1A00'000C        BNE      ??peripheral_has_clock_div_1
   \       0x10   0x....'....        LDR      R0,??DataTable4_5
   \       0x14   0xE1B0'3102        LSLS     R3,R2,#+2
   \       0x18   0xE790'3003        LDR      R3,[R0, +R3]
   \       0x1C   0xE151'0003        CMP      R1,R3
   \       0x20   0x3A00'0007        BCC      ??peripheral_has_clock_div_1
    156          		if (_div_peripherals[i] == id)
   \       0x24   0xE1B0'3102        LSLS     R3,R2,#+2
   \       0x28   0xE790'0003        LDR      R0,[R0, +R3]
   \       0x2C   0xE150'0001        CMP      R0,R1
   \       0x30   0x1A00'0001        BNE      ??peripheral_has_clock_div_2
    157          			return true;
   \       0x34   0xE3A0'0001        MOV      R0,#+1
   \       0x38   0xEA00'0002        B        ??peripheral_has_clock_div_3
   \                     ??peripheral_has_clock_div_2:
   \       0x3C   0xE292'2001        ADDS     R2,R2,#+1
   \       0x40   0xEAFF'FFF0        B        ??peripheral_has_clock_div_0
    158          	return false;
   \                     ??peripheral_has_clock_div_1:
   \       0x44   0xE3A0'0000        MOV      R0,#+0
   \                     ??peripheral_has_clock_div_3:
   \       0x48   0xE12F'FF1E        BX       LR               ;; return
    159          }
    160          

   \                                 In section SOFTPACK, align 4, keep-with-next
    161          uint8_t get_peripheral_dma_channel(uint32_t id, Xdmac *xdmac, bool transmit)
    162          {
   \                     get_peripheral_dma_channel:
   \        0x0   0xE92D'4070        PUSH     {R4-R6,LR}
   \        0x4   0xE1B0'4000        MOVS     R4,R0
   \        0x8   0xE1B0'5001        MOVS     R5,R1
   \        0xC   0xE1B0'6002        MOVS     R6,R2
    163          	const struct peripheral_xdma *periph_xdma = get_peripheral_xdma(id, xdmac);
   \       0x10   0xE1B0'1005        MOVS     R1,R5
   \       0x14   0xE1B0'0004        MOVS     R0,R4
   \       0x18   0x....'....        BL       get_peripheral_xdma
   \       0x1C   0xE1B0'1000        MOVS     R1,R0
    164          	if (periph_xdma) {
   \       0x20   0xE351'0000        CMP      R1,#+0
   \       0x24   0x0A00'0007        BEQ      ??get_peripheral_dma_channel_0
    165          		return transmit ? periph_xdma->iftx : periph_xdma->ifrx;
   \       0x28   0xE216'60FF        ANDS     R6,R6,#0xFF      ;; Zero extend
   \       0x2C   0xE356'0000        CMP      R6,#+0
   \       0x30   0x0A00'0001        BEQ      ??get_peripheral_dma_channel_1
   \       0x34   0xE5D1'0004        LDRB     R0,[R1, #+4]
   \       0x38   0xEA00'0000        B        ??get_peripheral_dma_channel_2
   \                     ??get_peripheral_dma_channel_1:
   \       0x3C   0xE5D1'0005        LDRB     R0,[R1, #+5]
   \                     ??get_peripheral_dma_channel_2:
   \       0x40   0xE210'00FF        ANDS     R0,R0,#0xFF      ;; Zero extend
   \       0x44   0xEA00'0000        B        ??get_peripheral_dma_channel_3
    166          	} else {
    167          		return 0xff;
   \                     ??get_peripheral_dma_channel_0:
   \       0x48   0xE3A0'00FF        MOV      R0,#+255
   \                     ??get_peripheral_dma_channel_3:
   \       0x4C   0xE8BD'8070        POP      {R4-R6,PC}       ;; return
    168          	}
    169          }
    170          

   \                                 In section SOFTPACK, align 4, keep-with-next
    171          bool is_peripheral_on_dma_controller(uint32_t id, Xdmac *xdmac)
    172          {
   \                     is_peripheral_on_dma_controller:
   \        0x0   0xE92D'4038        PUSH     {R3-R5,LR}
   \        0x4   0xE1B0'4000        MOVS     R4,R0
   \        0x8   0xE1B0'5001        MOVS     R5,R1
    173          	return get_peripheral_xdma(id, xdmac) != NULL;
   \        0xC   0xE1B0'1005        MOVS     R1,R5
   \       0x10   0xE1B0'0004        MOVS     R0,R4
   \       0x14   0x....'....        BL       get_peripheral_xdma
   \       0x18   0xE350'0000        CMP      R0,#+0
   \       0x1C   0x0A00'0001        BEQ      ??is_peripheral_on_dma_controller_0
   \       0x20   0xE3A0'0001        MOV      R0,#+1
   \       0x24   0xEA00'0000        B        ??is_peripheral_on_dma_controller_1
   \                     ??is_peripheral_on_dma_controller_0:
   \       0x28   0xE3A0'0000        MOV      R0,#+0
   \                     ??is_peripheral_on_dma_controller_1:
   \       0x2C   0xE210'00FF        ANDS     R0,R0,#0xFF      ;; Zero extend
   \       0x30   0xE8BD'8032        POP      {R1,R4,R5,PC}    ;; return
    174          }
    175          
    176          

   \                                 In section SOFTPACK, align 4, keep-with-next
    177          int32_t get_peripheral_fifo_depth(void* addr)
    178          {
   \                     get_peripheral_fifo_depth:
   \        0x0   0xE1B0'1000        MOVS     R1,R0
    179          	uint32_t size = -1;
   \        0x4   0xE3E0'2000        MVN      R2,#+0
    180          	uint32_t tmp = (uint32_t)addr;
   \        0x8   0xE1B0'3001        MOVS     R3,R1
    181          	switch (tmp) {
   \        0xC   0xE1B0'0003        MOVS     R0,R3
   \       0x10   0xE3A0'C4F0        MOV      R12,#-268435456
   \       0x14   0xE38C'CF80        ORR      R12,R12,#0x200
   \       0x18   0xE150'000C        CMP      R0,R12
   \       0x1C   0x0A00'0030        BEQ      ??get_peripheral_fifo_depth_0
   \       0x20   0xE3A0'C4F0        MOV      R12,#-268435456
   \       0x24   0xE38C'CE40        ORR      R12,R12,#0x400
   \       0x28   0xE150'000C        CMP      R0,R12
   \       0x2C   0x0A00'002E        BEQ      ??get_peripheral_fifo_depth_1
   \       0x30   0xE3A0'C4F0        MOV      R12,#-268435456
   \       0x34   0xE38C'CE60        ORR      R12,R12,#0x600
   \       0x38   0xE150'000C        CMP      R0,R12
   \       0x3C   0x0A00'002C        BEQ      ??get_peripheral_fifo_depth_2
   \       0x40   0x....'....        LDR      R12,??DataTable4_6  ;; 0xf801c200
   \       0x44   0xE150'000C        CMP      R0,R12
   \       0x48   0x0A00'0025        BEQ      ??get_peripheral_fifo_depth_0
   \       0x4C   0xE3A0'C4F8        MOV      R12,#-134217728
   \       0x50   0xE38C'CB71        ORR      R12,R12,#0x1C400
   \       0x54   0xE150'000C        CMP      R0,R12
   \       0x58   0x0A00'0023        BEQ      ??get_peripheral_fifo_depth_1
   \       0x5C   0x....'....        LDR      R12,??DataTable4_7  ;; 0xf801c600
   \       0x60   0xE150'000C        CMP      R0,R12
   \       0x64   0x0A00'0022        BEQ      ??get_peripheral_fifo_depth_2
   \       0x68   0x....'....        LDR      R12,??DataTable4_8  ;; 0xf8020200
   \       0x6C   0xE150'000C        CMP      R0,R12
   \       0x70   0x0A00'001B        BEQ      ??get_peripheral_fifo_depth_0
   \       0x74   0xE3A0'C4F8        MOV      R12,#-134217728
   \       0x78   0xE38C'CB81        ORR      R12,R12,#0x20400
   \       0x7C   0xE150'000C        CMP      R0,R12
   \       0x80   0x0A00'0019        BEQ      ??get_peripheral_fifo_depth_1
   \       0x84   0x....'....        LDR      R12,??DataTable4_9  ;; 0xf8020600
   \       0x88   0xE150'000C        CMP      R0,R12
   \       0x8C   0x0A00'0018        BEQ      ??get_peripheral_fifo_depth_2
   \       0x90   0x....'....        LDR      R12,??DataTable4_10  ;; 0xf8024200
   \       0x94   0xE150'000C        CMP      R0,R12
   \       0x98   0x0A00'0011        BEQ      ??get_peripheral_fifo_depth_0
   \       0x9C   0xE3A0'C4F8        MOV      R12,#-134217728
   \       0xA0   0xE38C'CB91        ORR      R12,R12,#0x24400
   \       0xA4   0xE150'000C        CMP      R0,R12
   \       0xA8   0x0A00'000F        BEQ      ??get_peripheral_fifo_depth_1
   \       0xAC   0x....'....        LDR      R12,??DataTable4_11  ;; 0xf8024600
   \       0xB0   0xE150'000C        CMP      R0,R12
   \       0xB4   0x0A00'000E        BEQ      ??get_peripheral_fifo_depth_2
   \       0xB8   0x....'....        LDR      R12,??DataTable4_12  ;; 0xf8028200
   \       0xBC   0xE150'000C        CMP      R0,R12
   \       0xC0   0x0A00'0007        BEQ      ??get_peripheral_fifo_depth_0
   \       0xC4   0xE3A0'C4F8        MOV      R12,#-134217728
   \       0xC8   0xE38C'CBA1        ORR      R12,R12,#0x28400
   \       0xCC   0xE150'000C        CMP      R0,R12
   \       0xD0   0x0A00'0005        BEQ      ??get_peripheral_fifo_depth_1
   \       0xD4   0x....'....        LDR      R12,??DataTable4_13  ;; 0xf8028600
   \       0xD8   0xE150'000C        CMP      R0,R12
   \       0xDC   0x0A00'0004        BEQ      ??get_peripheral_fifo_depth_2
   \       0xE0   0xEA00'0005        B        ??get_peripheral_fifo_depth_3
    182          	case (uint32_t)FLEXUSART0:
    183          #ifdef FLEXUSART1
    184          	case (uint32_t)FLEXUSART1:
    185          #endif
    186          #ifdef FLEXUSART2
    187          	case (uint32_t)FLEXUSART2:
    188          #endif
    189          #ifdef FLEXUSART3
    190          	case (uint32_t)FLEXUSART3:
    191          #endif
    192          #ifdef FLEXUSART4
    193          	case (uint32_t)FLEXUSART4:
    194          #endif
    195          		size = FLEXCOM_USART_FIFO_DEPTH;
   \                     ??get_peripheral_fifo_depth_0:
   \       0xE4   0xE3A0'0010        MOV      R0,#+16
    196          		break;
   \       0xE8   0xEA00'0004        B        ??get_peripheral_fifo_depth_4
    197          
    198          	case (uint32_t)FLEXSPI0:
    199          #ifdef FLEXSPI1
    200          	case (uint32_t)FLEXSPI1:
    201          #endif
    202          #ifdef FLEXSPI2
    203          	case (uint32_t)FLEXSPI2:
    204          #endif
    205          #ifdef FLEXSPI3
    206          	case (uint32_t)FLEXSPI3:
    207          #endif
    208          #ifdef FLEXSPI4
    209          	case (uint32_t)FLEXSPI4:
    210          #endif
    211          		size = FLEXCOM_SPI_FIFO_DEPTH;
   \                     ??get_peripheral_fifo_depth_1:
   \       0xEC   0xE3A0'0010        MOV      R0,#+16
    212          		break;
   \       0xF0   0xEA00'0002        B        ??get_peripheral_fifo_depth_4
    213          	case (uint32_t)FLEXTWI0:
    214          #ifdef FLEXTWI1
    215          	case (uint32_t)FLEXTWI1:
    216          #endif
    217          #ifdef FLEXTWI2
    218          	case (uint32_t)FLEXTWI2:
    219          #endif
    220          #ifdef FLEXTWI3
    221          	case (uint32_t)FLEXTWI3:
    222          #endif
    223          #ifdef FLEXTWI4
    224          	case (uint32_t)FLEXTWI4:
    225          #endif
    226          #ifdef TWI0
    227          	case (uint32_t)TWI0:
    228          #endif
    229          #ifdef TWI1
    230          	case (uint32_t)TWI1:
    231          #endif
    232          		size = TWI_FIFO_DEPTH;
   \                     ??get_peripheral_fifo_depth_2:
   \       0xF4   0xE3A0'0010        MOV      R0,#+16
    233          		break;
   \       0xF8   0xEA00'0000        B        ??get_peripheral_fifo_depth_4
    234          	default:
    235          		size = -1;
   \                     ??get_peripheral_fifo_depth_3:
   \       0xFC   0xE3E0'0000        MVN      R0,#+0
    236          	}
    237          	return size;
   \                     ??get_peripheral_fifo_depth_4:
   \      0x100   0xE12F'FF1E        BX       LR               ;; return
    238          }

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4:
   \        0x0   0x....'....        DC32     _xdmac_peripherals

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_1:
   \        0x0   0x819B'35A0        DC32     0x819b35a0

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_2:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_3:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_4:
   \        0x0   0x....'....        DC32     _console_cfg

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_5:
   \        0x0   0x....'....        DC32     _div_peripherals

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_6:
   \        0x0   0xF801'C200        DC32     0xf801c200

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_7:
   \        0x0   0xF801'C600        DC32     0xf801c600

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_8:
   \        0x0   0xF802'0200        DC32     0xf8020200

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_9:
   \        0x0   0xF802'0600        DC32     0xf8020600

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_10:
   \        0x0   0xF802'4200        DC32     0xf8024200

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_11:
   \        0x0   0xF802'4600        DC32     0xf8024600

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_12:
   \        0x0   0xF802'8200        DC32     0xf8028200

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable4_13:
   \        0x0   0xF802'8600        DC32     0xf8028600

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x53 0x41          DC8 "SAM9X60"

   \              0x4D 0x39    

   \              0x58 0x36    

   \              0x30 0x00

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x55 0x6E          DC8 "Unknown"

   \              0x6B 0x6E    

   \              0x6F 0x77    

   \              0x6E 0x00

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   get_chip_name
       0   get_peripheral_clock_matrix_div
       8   get_peripheral_clock_max_freq
         8   -> pmc_get_master_clock
      16   get_peripheral_dma_channel
        16   -> get_peripheral_xdma
       0   get_peripheral_fifo_depth
       0   get_peripheral_xdma
      24   get_romcode_console
        24   -> __aeabi_memcpy
      16   is_peripheral_on_dma_controller
        16   -> get_peripheral_xdma
       0   peripheral_has_clock_div


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
       8  ?_0
       8  ?_1
      40  _console_cfg
       4  _div_peripherals
     192  _xdmac_peripherals
      44  get_chip_name
      12  get_peripheral_clock_matrix_div
      16  get_peripheral_clock_max_freq
      80  get_peripheral_dma_channel
     260  get_peripheral_fifo_depth
      88  get_peripheral_xdma
      44  get_romcode_console
      52  is_peripheral_on_dma_controller
      76  peripheral_has_clock_div

 
 252 bytes in section .rodata
 728 bytes in section SOFTPACK
 
 728 bytes of CODE  memory
 252 bytes of CONST memory

Errors: none
Warnings: none
