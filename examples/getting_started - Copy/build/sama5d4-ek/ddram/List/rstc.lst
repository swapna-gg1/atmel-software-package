###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         24/Nov/2020  13:57:09
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode                    
#    Endian                   =  little
#    Source file              =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\peripherals\rstc.c
#    Command line             =
#        -f C:\Users\c40450\AppData\Local\Temp\EWF6FB.tmp
#        (C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\peripherals\rstc.c
#        -D "SOFTPACK_VERSION=\"2.17\"" -D TRACE_LEVEL=5 -D VARIANT_DDRAM -D
#        CONFIG_ARCH_ARMV7A -D CONFIG_ARCH_ARM -D CONFIG_SOC_SAMA5D4 -D
#        CONFIG_CHIP_SAMA5D44 -D CONFIG_BOARD_SAMA5D4_EK -D CONFIG_HAVE_AIC5 -D
#        CONFIG_HAVE_PIO3 -D CONFIG_HAVE_NFC -D CONFIG_HAVE_PIT -D
#        CONFIG_HAVE_SMC -D CONFIG_HAVE_SMC_SCRAMBLING -D CONFIG_HAVE_MPDDRC -D
#        CONFIG_HAVE_MPDDRC_DATA_PATH -D CONFIG_HAVE_MPDDRC_IO_CALIBRATION -D
#        CONFIG_HAVE_MPDDRC_DDR2 -D CONFIG_HAVE_MPDDRC_LPDDR2 -D
#        CONFIG_HAVE_ADC_LOW_RES -D CONFIG_HAVE_PMC_PLLADIV2 -D
#        CONFIG_HAVE_PMC_H32MXDIV -D CONFIG_HAVE_PMC_UPLL_BIAS -D
#        CONFIG_HAVE_SCKC -D CONFIG_HAVE_PWMC_SPREAD_SPECTRUM -D
#        CONFIG_HAVE_PWMC_FAULT_PROT_HIZ -D CONFIG_HAVE_PWMC_STEPPER_MOTOR -D
#        CONFIG_HAVE_PWMC_CMP_UNIT -D CONFIG_HAVE_PWMC_SYNC_MODE -D
#        CONFIG_HAVE_PWMC_OOV -D CONFIG_HAVE_PWMC_FMODE -D CONFIG_HAVE_PWMC_WP
#        -D CONFIG_HAVE_PWMC_DTIME -D CONFIG_HAVE_PWMC_ELINE -D
#        CONFIG_HAVE_L2CC -D CONFIG_HAVE_SAIC -D CONFIG_HAVE_XDMAC -D
#        CONFIG_HAVE_XDMAC_DATA_WIDTH_DWORD -D CONFIG_HAVE_SFC -D
#        CONFIG_HAVE_PWMC -D CONFIG_HAVE_SECURE_MATRIX -D
#        CONFIG_HAVE_DDR2_MT47H128M8 -D
#        CONFIG_HAVE_RSTC_CONFIGURABLE_USER_RESET -D
#        CONFIG_HAVE_RSTC_INDEPENDENT_RESET -D CONFIG_HAVE_TC_FAULT_MODE -D
#        CONFIG_HAVE_RTC_CALIBRATION -D CONFIG_HAVE_RTC_MODE_PERSIAN -D
#        CONFIG_HAVE_RTC_TAMPER -D CONFIG_HAVE_SHDWC -D CONFIG_HAVE_LED -D
#        CONFIG_HAVE_MMU -D CONFIG_HAVE_L1CACHE -D CONFIG_HAVE_L2CACHE -D
#        CONFIG_HAVE_DBGU -D CONFIG_HAVE_UART -D CONFIG_HAVE_USART -D
#        CONFIG_HAVE_USART_SPI_MODE -D CONFIG_HAVE_SERIALD_USART --preprocess
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sama5d4-ek\ddram\List
#        -lC
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sama5d4-ek\ddram\List
#        --diag_suppress Pa050 -o
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sama5d4-ek\ddram\Obj
#        --debug --endian=little --cpu=Cortex-A5 -e --fpu=VFPv4_D16
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\arch\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\utils\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\target\common\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\target\sama5d4\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\drivers\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\lib\
#        --section .text=SOFTPACK --cpu_mode arm -Oh)
#    Locale                   =  C
#    List file                =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sama5d4-ek\ddram\List\rstc.lst
#    Object file              =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sama5d4-ek\ddram\Obj\rstc.o
#    Runtime model:              
#      __SystemLibrary        =  DLib
#      __dlib_file_descriptor =  0
#      __dlib_version         =  6
#
###############################################################################

C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\peripherals\rstc.c
      1          /* ----------------------------------------------------------------------------
      2           *         SAM Software Package License
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2015, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /** \file */
     31          /*---------------------------------------------------------------------------
     32           *         Headers
     33           *---------------------------------------------------------------------------*/
     34          
     35          #include "chip.h"
     36          #include "trace.h"
     37          #include "peripherals/rstc.h"
     38          
     39          /*---------------------------------------------------------------------------
     40           *         Exported functions
     41           *---------------------------------------------------------------------------*/
     42          
     43          #ifdef CONFIG_HAVE_RSTC_CONFIGURABLE_USER_RESET
     44          

   \                                 In section SOFTPACK, align 4, keep-with-next
     45          void rstc_set_user_reset_enable(bool enable)
     46          {
     47          	uint32_t mr = RSTC->RSTC_MR;
   \                     rstc_set_user_reset_enable:
   \        0x0   0x....'....        LDR      R1,??DataTable6  ;; 0xfc068608
     48          	if (enable) {
   \        0x4   0xE350'0000        CMP      R0,#+0
   \        0x8   0xE591'2000        LDR      R2,[R1, #+0]
     49          		mr |= RSTC_MR_URSTEN;
   \        0xC   0x1382'0001        ORRNE    R0,R2,#0x1
     50          	} else {
     51          		mr &= ~RSTC_MR_URSTEN;
   \       0x10   0x03C2'0001        BICEQ    R0,R2,#0x1
     52          	}
     53          	RSTC->RSTC_MR = mr | RSTC_MR_KEY_PASSWD;
   \       0x14   0x....'....        B        ??Subroutine2_0
     54          }

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??Subroutine2_0:
   \        0x0   0xE380'04A5        ORR      R0,R0,#0xA5000000
   \        0x4   0xE581'0000        STR      R0,[R1, #+0]
   \        0x8   0xE12F'FF1E        BX       LR               ;; return
     55          

   \                                 In section SOFTPACK, align 4, keep-with-next
     56          void rstc_set_user_reset_interrupt_enable(bool enable)
     57          {
     58          	uint32_t mr = RSTC->RSTC_MR;
   \                     rstc_set_user_reset_interrupt_enable:
   \        0x0   0x....'....        LDR      R1,??DataTable6  ;; 0xfc068608
     59          	if (enable) {
   \        0x4   0xE350'0000        CMP      R0,#+0
   \        0x8   0xE591'2000        LDR      R2,[R1, #+0]
     60          		mr |= RSTC_MR_URSTIEN;
   \        0xC   0x1382'0010        ORRNE    R0,R2,#0x10
     61          	} else {
     62          		mr &= ~RSTC_MR_URSTIEN;
   \       0x10   0x03C2'0010        BICEQ    R0,R2,#0x10
     63          	}
     64          	RSTC->RSTC_MR = mr | RSTC_MR_KEY_PASSWD;
   \       0x14   0x....'....        B        ??Subroutine2_0
     65          }
     66          
     67          #endif /* CONFIG_HAVE_RSTC_CONFIGURABLE_USER_RESET */
     68          
     69          #ifdef CONFIG_HAVE_RSTC_EXTERNAL_RESET
     70          
     71          void rstc_set_ext_reset_length(uint8_t length)
     72          {
     73          	RSTC->RSTC_MR = RSTC->RSTC_MR | RSTC_MR_ERSTL(length) | RSTC_MR_KEY_PASSWD;
     74          }
     75          
     76          void rstc_reset_processor_and_peripherals_and_ext(void)
     77          {
     78          	RSTC->RSTC_CR = RSTC_CR_EXTRST | RSTC_MR_KEY_PASSWD;
     79          }
     80          
     81          #endif /* CONFIG_HAVE_RSTC_EXTERNAL_RESET */
     82          

   \                                 In section SOFTPACK, align 4, keep-with-next
     83          void rstc_reset_processor_and_peripherals(void)
     84          {
     85          #ifdef RSTC_CR_PERRST
     86          	RSTC->RSTC_CR = RSTC_CR_PERRST | RSTC_CR_PROCRST | RSTC_MR_KEY_PASSWD;
   \                     rstc_reset_processor_and_peripherals:
   \        0x0   0x....'....        B        ?Subroutine0
     87          #else
     88          	RSTC->RSTC_CR = RSTC_CR_PROCRST | RSTC_MR_KEY_PASSWD;
     89          #endif
     90          }

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?Subroutine0:
   \        0x0   0xE3A0'0005        MOV      R0,#+5
   \                     ??Subroutine0_0:
   \        0x4   0x....'....        LDR      R1,??DataTable6_1  ;; 0xfc068600
   \        0x8                      REQUIRE ??Subroutine2_0
   \        0x8                      ;; // Fall through to label ??Subroutine2_0
     91          
     92          #ifdef CONFIG_HAVE_RSTC_INDEPENDENT_RESET
     93          

   \                                 In section SOFTPACK, align 4, keep-with-next
     94          void rstc_reset_processor(void)
     95          {
     96          	RSTC->RSTC_CR = RSTC_CR_PROCRST | RSTC_MR_KEY_PASSWD;
   \                     rstc_reset_processor:
   \        0x0   0xE3A0'0001        MOV      R0,#+1
   \        0x4   0x....'....        B        ??Subroutine0_0
     97          }
     98          

   \                                 In section SOFTPACK, align 4, keep-with-next
     99          void rstc_reset_peripherals(void)
    100          {
    101          #ifdef RSTC_CR_PERRST
    102          	RSTC->RSTC_CR = RSTC_CR_PERRST | RSTC_MR_KEY_PASSWD;
   \                     rstc_reset_peripherals:
   \        0x0   0xE3A0'0004        MOV      R0,#+4
   \        0x4   0x....'....        B        ??Subroutine0_0
    103          #else
    104          	trace_warning("peripheral reset not supported\n\r");
    105          #endif
    106          }
    107          
    108          #endif /* CONFIG_HAVE_RSTC_INDEPENDENT_RESET */
    109          

   \                                 In section SOFTPACK, align 4, keep-with-next
    110          void rstc_reset_all(void)
    111          {
    112          	uint32_t cr = RSTC_CR_PROCRST | RSTC_CR_KEY_PASSWD;
    113          
    114          #ifdef RSTC_CR_PERRST
    115          	cr |= RSTC_CR_PERRST;
    116          #endif
    117          
    118          #ifdef RSTC_CR_EXTRST
    119          	cr |= RSTC_CR_EXTRST;
    120          #endif
    121          
    122          	RSTC->RSTC_CR = cr;
   \                     rstc_reset_all:
   \        0x0   0xE320'F000        Nop
   \        0x4                      REQUIRE ?Subroutine0
   \        0x4                      ;; // Fall through to label ?Subroutine0
    123          }
    124          

   \                                 In section SOFTPACK, align 4, keep-with-next
    125          bool rstc_get_nrst_level(void)
    126          {
    127          	return (RSTC->RSTC_SR & RSTC_SR_NRSTL) != 0;
   \                     rstc_get_nrst_level:
   \        0x0   0x....'....        LDR      R0,??DataTable6_2  ;; 0xfc068604
   \        0x4   0xE590'1000        LDR      R1,[R0, #+0]
   \        0x8   0xE1A0'2821        LSR      R2,R1,#+16
   \        0xC   0x....'....        B        ?Subroutine1
    128          }

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?Subroutine1:
   \        0x0   0xE202'0001        AND      R0,R2,#0x1
   \        0x4   0xE12F'FF1E        BX       LR               ;; return
    129          

   \                                 In section SOFTPACK, align 4, keep-with-next
    130          bool rstc_is_user_reset_detected(void)
    131          {
    132          	return (RSTC->RSTC_SR & RSTC_SR_URSTS) != 0;
   \                     rstc_is_user_reset_detected:
   \        0x0   0x....'....        LDR      R0,??DataTable6_2  ;; 0xfc068604
   \        0x4   0xE590'1000        LDR      R1,[R0, #+0]
   \        0x8   0xE201'0001        AND      R0,R1,#0x1
   \        0xC   0xE12F'FF1E        BX       LR               ;; return
    133          }
    134          

   \                                 In section SOFTPACK, align 4, keep-with-next
    135          bool rstc_is_busy(void)
    136          {
    137          	return (RSTC->RSTC_SR & RSTC_SR_SRCMP) != 0;
   \                     rstc_is_busy:
   \        0x0   0x....'....        LDR      R0,??DataTable6_2  ;; 0xfc068604
   \        0x4   0xE590'1000        LDR      R1,[R0, #+0]
   \        0x8   0xE1A0'28A1        LSR      R2,R1,#+17
   \        0xC                      REQUIRE ?Subroutine1
   \        0xC                      ;; // Fall through to label ?Subroutine1
    138          }
    139          

   \                                 In section SOFTPACK, align 4, keep-with-next
    140          uint32_t rstc_get_status(void)
    141          {
    142          	return RSTC->RSTC_SR;
   \                     rstc_get_status:
   \        0x0   0x....'....        LDR      R0,??DataTable6_2  ;; 0xfc068604
   \        0x4   0xE590'0000        LDR      R0,[R0, #+0]
   \        0x8   0xE12F'FF1E        BX       LR               ;; return
    143          }

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6:
   \        0x0   0xFC06'8608        DC32     0xfc068608

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_1:
   \        0x0   0xFC06'8600        DC32     0xfc068600

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable6_2:
   \        0x0   0xFC06'8604        DC32     0xfc068604

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   rstc_get_nrst_level
       0   rstc_get_status
       0   rstc_is_busy
       0   rstc_is_user_reset_detected
       0   rstc_reset_all
       0   rstc_reset_peripherals
       0   rstc_reset_processor
       0   rstc_reset_processor_and_peripherals
       0   rstc_set_user_reset_enable
       0   rstc_set_user_reset_interrupt_enable


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
      12  ??Subroutine2_0
       8  ?Subroutine0
       8  ?Subroutine1
      16  rstc_get_nrst_level
      12  rstc_get_status
      12  rstc_is_busy
      16  rstc_is_user_reset_detected
       4  rstc_reset_all
       8  rstc_reset_peripherals
       8  rstc_reset_processor
       4  rstc_reset_processor_and_peripherals
      24  rstc_set_user_reset_enable
      24  rstc_set_user_reset_interrupt_enable

 
 168 bytes in section SOFTPACK
 
 168 bytes of CODE memory

Errors: none
Warnings: none
