###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         24/Nov/2020  14:00:46
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode                        
#    Endian                       =  little
#    Source file                  =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\target\sama5d4\board_sama5d4-ek.c
#    Command line                 =
#        -f C:\Users\c40450\AppData\Local\Temp\EW4705.tmp
#        (C:\work\AtmelSoftPAck\atmel-software-package-2.17\target\sama5d4\board_sama5d4-ek.c
#        -D "SOFTPACK_VERSION=\"2.17\"" -D TRACE_LEVEL=5 -D VARIANT_SRAM -D
#        CONFIG_ARCH_ARMV7A -D CONFIG_ARCH_ARM -D CONFIG_SOC_SAMA5D4 -D
#        CONFIG_CHIP_SAMA5D44 -D CONFIG_BOARD_SAMA5D4_EK -D CONFIG_HAVE_AIC5 -D
#        CONFIG_HAVE_PIO3 -D CONFIG_HAVE_NFC -D CONFIG_HAVE_PIT -D
#        CONFIG_HAVE_SMC -D CONFIG_HAVE_SMC_SCRAMBLING -D CONFIG_HAVE_MPDDRC -D
#        CONFIG_HAVE_MPDDRC_DATA_PATH -D CONFIG_HAVE_MPDDRC_IO_CALIBRATION -D
#        CONFIG_HAVE_MPDDRC_DDR2 -D CONFIG_HAVE_MPDDRC_LPDDR2 -D
#        CONFIG_HAVE_ADC_LOW_RES -D CONFIG_HAVE_PMC_PLLADIV2 -D
#        CONFIG_HAVE_PMC_H32MXDIV -D CONFIG_HAVE_PMC_UPLL_BIAS -D
#        CONFIG_HAVE_SCKC -D CONFIG_HAVE_PWMC_SPREAD_SPECTRUM -D
#        CONFIG_HAVE_PWMC_FAULT_PROT_HIZ -D CONFIG_HAVE_PWMC_STEPPER_MOTOR -D
#        CONFIG_HAVE_PWMC_CMP_UNIT -D CONFIG_HAVE_PWMC_SYNC_MODE -D
#        CONFIG_HAVE_PWMC_OOV -D CONFIG_HAVE_PWMC_FMODE -D CONFIG_HAVE_PWMC_WP
#        -D CONFIG_HAVE_PWMC_DTIME -D CONFIG_HAVE_PWMC_ELINE -D
#        CONFIG_HAVE_L2CC -D CONFIG_HAVE_SAIC -D CONFIG_HAVE_XDMAC -D
#        CONFIG_HAVE_XDMAC_DATA_WIDTH_DWORD -D CONFIG_HAVE_SFC -D
#        CONFIG_HAVE_PWMC -D CONFIG_HAVE_SECURE_MATRIX -D
#        CONFIG_HAVE_DDR2_MT47H128M8 -D
#        CONFIG_HAVE_RSTC_CONFIGURABLE_USER_RESET -D
#        CONFIG_HAVE_RSTC_INDEPENDENT_RESET -D CONFIG_HAVE_TC_FAULT_MODE -D
#        CONFIG_HAVE_RTC_CALIBRATION -D CONFIG_HAVE_RTC_MODE_PERSIAN -D
#        CONFIG_HAVE_RTC_TAMPER -D CONFIG_HAVE_SHDWC -D CONFIG_HAVE_LED -D
#        CONFIG_HAVE_MMU -D CONFIG_HAVE_L1CACHE -D CONFIG_HAVE_L2CACHE -D
#        CONFIG_HAVE_DBGU -D CONFIG_HAVE_UART -D CONFIG_HAVE_USART -D
#        CONFIG_HAVE_USART_SPI_MODE -D CONFIG_HAVE_SERIALD_USART --preprocess
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sama5d4-ek\sram\List
#        -lC
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sama5d4-ek\sram\List
#        --diag_suppress Pa050 -o
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sama5d4-ek\sram\Obj
#        --debug --endian=little --cpu=Cortex-A5 -e --fpu=VFPv4_D16
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\arch\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\utils\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\target\common\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\target\sama5d4\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\drivers\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\lib\
#        --section .text=SOFTPACK --cpu_mode arm -Oh)
#    Locale                       =  C
#    List file                    =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sama5d4-ek\sram\List\board_sama5d4-ek.lst
#    Object file                  =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sama5d4-ek\sram\Obj\board_sama5d4-ek.o
#    Runtime model:                  
#      __SystemLibrary            =  DLib
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#
###############################################################################

C:\work\AtmelSoftPAck\atmel-software-package-2.17\target\sama5d4\board_sama5d4-ek.c
      1          /* ----------------------------------------------------------------------------
      2           *         SAM Software Package License
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2016, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30           /*----------------------------------------------------------------------------
     31           *        Headers
     32           *----------------------------------------------------------------------------*/
     33          
     34          #include "chip.h"
     35          #include "board_audio.h"
     36          #include "board_console.h"
     37          #include "board_eth.h"
     38          #include "board_isi.h"
     39          #include "board_lcd.h"
     40          #include "board_led.h"
     41          #include "board_spi.h"
     42          #include "board_twi.h"
     43          #include "compiler.h"
     44          
     45          #include "dma/dma.h"
     46          
     47          #include "board_support.h"
     48          
     49          /*----------------------------------------------------------------------------
     50           *        Exported functions
     51           *----------------------------------------------------------------------------*/
     52          

   \                                 In section SOFTPACK, align 4
     53          WEAK void board_init(void)
     54          {
   \                     board_init:
   \        0x0   0xE92D'5000        PUSH     {R12,LR}
     55          #ifdef VARIANT_DDRAM
     56          	bool ddram = false;
     57          #else
     58          	bool ddram = true;
     59          #endif
     60          
     61          #ifdef VARIANT_SRAM
     62          	bool clocks = true;
     63          #else
     64          	bool clocks = false;
     65          #endif
     66          
     67          	/* Configure misc low-level stuff */
     68          	board_cfg_lowlevel(clocks, ddram, true);
   \        0x4   0xE3A0'2001        MOV      R2,#+1
   \        0x8   0xE3A0'1001        MOV      R1,#+1
   \        0xC   0xE3A0'0001        MOV      R0,#+1
   \       0x10   0x....'....        BL       board_cfg_lowlevel
     69          
     70          	/* Configure console */
     71          	board_cfg_console(0);
   \       0x14   0xE3A0'0000        MOV      R0,#+0
   \       0x18   0x....'....        BL       board_cfg_console
     72          
     73          	/* DMA Driver init */
     74          	dma_initialize(false);
   \       0x1C   0xE3A0'0000        MOV      R0,#+0
   \       0x20   0x....'....        BL       dma_initialize
     75          
     76          #ifdef CONFIG_HAVE_SPI_BUS
     77          	/* Configure SPI bus */
     78          	board_cfg_spi_bus();
     79          #endif
     80          
     81          #ifdef CONFIG_HAVE_SPI_NOR
     82          	/* Configure SPI NOR flash memory */
     83          	board_cfg_spi_flash();
     84          #endif
     85          
     86          #ifdef CONFIG_HAVE_I2C_BUS
     87          	/* Configure TWI bus */
     88          	board_cfg_twi_bus();
     89          
     90          	/* Configure PMIC */
     91          	board_cfg_pmic();
     92          
     93          #ifdef CONFIG_HAVE_TWI_AT24
     94          	board_cfg_at24();
     95          #endif
     96          #endif
     97          
     98          #ifdef CONFIG_HAVE_LED
     99          	/* Configure LEDs */
    100          	board_cfg_led();
   \       0x24   0xE8BD'4001        POP      {R0,LR}
   \       0x28   0x....'....        B        board_cfg_led    ;; tailcall
    101          #endif
    102          
    103          #ifdef CONFIG_HAVE_ETH
    104          	board_cfg_net(0, NULL, true);
    105          	board_cfg_net(1, NULL, true);
    106          #endif
    107          
    108          #ifdef CONFIG_HAVE_LCDC
    109          	/* Configure LCD controller/display */
    110          	board_cfg_lcd();
    111          #endif
    112          
    113          #ifdef CONFIG_HAVE_ISI
    114          	/* Configure camera interface */
    115          	board_cfg_isi();
    116          #endif
    117          
    118          #ifdef CONFIG_HAVE_NAND_FLASH
    119          	/* Configure NAND flash */
    120          	board_cfg_nand_flash();
    121          #endif
    122          
    123          #ifdef CONFIG_HAVE_SSC
    124          #ifndef CONFIG_HAVE_ISI
    125          	board_cfg_ssc();
    126          #endif
    127          #endif
    128          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   board_init
         8   -> board_cfg_console
         0   -> board_cfg_led
         8   -> board_cfg_lowlevel
         8   -> dma_initialize


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      44  board_init

 
 44 bytes in section SOFTPACK
 
 0 bytes of CODE memory (+ 44 bytes shared)

Errors: none
Warnings: none
