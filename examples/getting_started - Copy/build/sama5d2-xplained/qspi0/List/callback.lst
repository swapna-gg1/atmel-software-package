###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         03/Nov/2020  20:09:05
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode                        
#    Endian                       =  little
#    Source file                  =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\utils\callback.c
#    Command line                 =
#        -f C:\Users\c40450\AppData\Local\Temp\EW2EED.tmp
#        (C:\work\AtmelSoftPAck\atmel-software-package-2.17\utils\callback.c -D
#        "SOFTPACK_VERSION=\"2.17\"" -D TRACE_LEVEL=5 -D VARIANT_QSPI0 -D
#        CONFIG_ARCH_ARMV7A -D CONFIG_ARCH_ARM -D CONFIG_SOC_SAMA5D2 -D
#        CONFIG_CHIP_SAMA5D27 -D CONFIG_PACKAGE_289PIN -D
#        CONFIG_BOARD_SAMA5D2_XPLAINED -D CONFIG_HAVE_AIC5 -D
#        CONFIG_HAVE_FLEXCOM -D CONFIG_HAVE_PIO4 -D CONFIG_HAVE_PIO4_SECURE -D
#        CONFIG_HAVE_NFC -D CONFIG_HAVE_PIT -D CONFIG_HAVE_SMC -D
#        CONFIG_HAVE_SMC_SCRAMBLING -D CONFIG_HAVE_GMAC_QUEUES -D
#        CONFIG_HAVE_MPDDRC -D CONFIG_HAVE_MPDDRC_DATA_PATH -D
#        CONFIG_HAVE_MPDDRC_IO_CALIBRATION -D CONFIG_HAVE_MPDDRC_DDR2 -D
#        CONFIG_HAVE_MPDDRC_LPDDR2 -D CONFIG_HAVE_MPDDRC_DDR3 -D
#        CONFIG_HAVE_MPDDRC_LPDDR3 -D CONFIG_HAVE_ADC_SETTLING_TIME -D
#        CONFIG_HAVE_ADC_DIFF_INPUT -D CONFIG_HAVE_ADC_SEQ_R2 -D
#        CONFIG_HAVE_PMC_FAST_STARTUP -D CONFIG_HAVE_PMC_GENERATED_CLOCKS -D
#        CONFIG_HAVE_PMC_AUDIO_CLOCK -D CONFIG_HAVE_PMC_PLLADIV2 -D
#        CONFIG_HAVE_PMC_H32MXDIV -D CONFIG_HAVE_PMC_UPLL_BIAS -D
#        CONFIG_HAVE_SCKC -D CONFIG_HAVE_PWMC_DMA -D
#        CONFIG_HAVE_PWMC_SPREAD_SPECTRUM -D CONFIG_HAVE_PWMC_EXTERNAL_TRIGGER
#        -D CONFIG_HAVE_PWMC_FAULT_PROT_HIZ -D CONFIG_HAVE_PWMC_STEPPER_MOTOR
#        -D CONFIG_HAVE_PWMC_CMP_UNIT -D CONFIG_HAVE_PWMC_SYNC_MODE -D
#        CONFIG_HAVE_PWMC_OOV -D CONFIG_HAVE_PWMC_FMODE -D CONFIG_HAVE_PWMC_WP
#        -D CONFIG_HAVE_PWMC_DTIME -D CONFIG_HAVE_PWMC_ELINE -D
#        CONFIG_HAVE_SFRBU -D CONFIG_HAVE_L2CC -D CONFIG_HAVE_SAIC -D
#        CONFIG_HAVE_XDMAC -D CONFIG_HAVE_XDMAC_DATA_WIDTH_DWORD -D
#        CONFIG_HAVE_SECUMOD -D CONFIG_HAVE_SFC -D CONFIG_HAVE_PWMC -D
#        CONFIG_HAVE_SECURE_MATRIX -D CONFIG_HAVE_DDR3_MT41K128M16 -D
#        CONFIG_HAVE_RSTC_CONFIGURABLE_USER_RESET -D CONFIG_HAVE_TC_FAULT_MODE
#        -D CONFIG_HAVE_TC_DMA_MODE -D CONFIG_HAVE_RTC_CALIBRATION -D
#        CONFIG_HAVE_RTC_MODE_PERSIAN -D CONFIG_HAVE_RTC_MODE_UTC -D
#        CONFIG_HAVE_RTC_TAMPER -D CONFIG_HAVE_SHDWC -D CONFIG_HAVE_TWI -D
#        CONFIG_HAVE_I2C_BUS -D CONFIG_HAVE_TWI_FIFO -D
#        CONFIG_HAVE_PMIC_ACT8945A -D CONFIG_HAVE_LED -D CONFIG_HAVE_MMU -D
#        CONFIG_HAVE_L1CACHE -D CONFIG_HAVE_L2CACHE -D CONFIG_HAVE_UART -D
#        CONFIG_HAVE_SERIALD_UART -D CONFIG_HAVE_USART -D
#        CONFIG_HAVE_USART_FIFO --preprocess
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sama5d2-xplained\qspi0\List
#        -lC
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sama5d2-xplained\qspi0\List
#        --diag_suppress Pa050 -o
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sama5d2-xplained\qspi0\Obj
#        --debug --endian=little --cpu=Cortex-A5 -e --fpu=VFPv4_D16
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\arch\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\utils\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\target\common\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\target\sama5d2\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\drivers\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\..\..\lib\
#        --section .text=SOFTPACK --cpu_mode arm -Oh)
#    Locale                       =  C
#    List file                    =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sama5d2-xplained\qspi0\List\callback.lst
#    Object file                  =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\getting_started\build\sama5d2-xplained\qspi0\Obj\callback.o
#    Runtime model:                  
#      __SystemLibrary            =  DLib
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#
###############################################################################

C:\work\AtmelSoftPAck\atmel-software-package-2.17\utils\callback.c
      1          /* ----------------------------------------------------------------------------
      2           *         SAM Software Package License
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2016, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /*----------------------------------------------------------------------------
     31           *         Headers
     32           *----------------------------------------------------------------------------*/
     33          
     34          #include <stdlib.h>
     35          
     36          #include "callback.h"
     37          #include "errno.h"
     38          
     39          /*----------------------------------------------------------------------------
     40           *         Public methods
     41           *----------------------------------------------------------------------------*/
     42          
     43          /**
     44           * \brief Define a callback
     45           *
     46           * \param cb     Pointer to a callback object
     47           * \param method Pointer to the callback function
     48           * \param arg    Pointer to a user argument for the callback
     49           */

   \                                 In section SOFTPACK, align 4, keep-with-next
     50          void callback_set(struct _callback* cb, callback_method_t method, void* arg)
     51          {
     52          	if (cb) {
   \                     callback_set:
   \        0x0   0xE350'0000        CMP      R0,#+0
     53          		cb->method = method;
   \        0x4   0x1580'1000        STRNE    R1,[R0, #+0]
     54          		cb->arg = arg;
   \        0x8   0x1580'2004        STRNE    R2,[R0, #+4]
     55          	}
     56          }
   \        0xC   0xE12F'FF1E        BX       LR               ;; return
     57          
     58          /**
     59           * \brief Copy a callback
     60           *
     61           * \param cb     Pointer to a callback object
     62           * \param orig   Pointer to the callback to copy in \cb
     63           */

   \                                 In section SOFTPACK, align 4, keep-with-next
     64          void callback_copy(struct _callback* cb, struct _callback* orig)
     65          {
     66          	if (cb) {
   \                     callback_copy:
   \        0x0   0xE350'0000        CMP      R0,#+0
   \        0x4   0x0A00'0005        BEQ      ??callback_copy_0
     67          		if (orig == NULL) {
   \        0x8   0xE351'0000        CMP      R1,#+0
     68          			cb->method = NULL;
     69          			cb->arg = NULL;
     70          		} else {
     71          			cb->method = orig->method;
   \        0xC   0x1591'2000        LDRNE    R2,[R1, #+0]
   \       0x10   0x0580'1000        STREQ    R1,[R0, #+0]
   \       0x14   0x1580'2000        STRNE    R2,[R0, #+0]
     72          			cb->arg = orig->arg;
   \       0x18   0x1591'1004        LDRNE    R1,[R1, #+4]
   \       0x1C   0xE580'1004        STR      R1,[R0, #+4]
     73          		}
     74          	}
     75          }
   \                     ??callback_copy_0:
   \       0x20   0xE12F'FF1E        BX       LR               ;; return
     76          

   \                                 In section SOFTPACK, align 4, keep-with-next
     77          int callback_call(struct _callback* cb, void* arg2)
     78          {
     79          	if (cb && cb->method)
   \                     callback_call:
   \        0x0   0xE350'0000        CMP      R0,#+0
   \        0x4   0x0A00'0003        BEQ      ??callback_call_0
   \        0x8   0xE590'2000        LDR      R2,[R0, #+0]
   \        0xC   0xE352'0000        CMP      R2,#+0
     80          		return cb->method(cb->arg, arg2);
   \       0x10   0x1590'0004        LDRNE    R0,[R0, #+4]
   \       0x14   0x112F'FF12        BXNE     R2               ;; tailcall
     81          	else
     82          		return -ENOSYS;
   \                     ??callback_call_0:
   \       0x18   0xE3E0'0036        MVN      R0,#+54
   \       0x1C   0xE12F'FF1E        BX       LR               ;; return
     83          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   callback_call
         0   -- Indirect call
       0   callback_copy
       0   callback_set


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      32  callback_call
      36  callback_copy
      16  callback_set

 
 84 bytes in section SOFTPACK
 
 84 bytes of CODE memory

Errors: none
Warnings: none
