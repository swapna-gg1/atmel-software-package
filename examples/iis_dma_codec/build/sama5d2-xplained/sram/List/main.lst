###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         10/Dec/2020  08:16:42
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode                    
#    Endian                   =  little
#    Source file              =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\iis_dma_codec\main.c
#    Command line             =
#        -f C:\Users\c40450\AppData\Local\Temp\EW9B57.tmp
#        (C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\iis_dma_codec\main.c
#        -D "SOFTPACK_VERSION=\"2.17\"" -D TRACE_LEVEL=5 -D VARIANT_SRAM -D
#        CONFIG_ARCH_ARMV7A -D CONFIG_ARCH_ARM -D CONFIG_SOC_SAMA5D2 -D
#        CONFIG_CHIP_SAMA5D27 -D CONFIG_PACKAGE_289PIN -D
#        CONFIG_BOARD_SAMA5D2_XPLAINED -D CONFIG_HAVE_AIC5 -D
#        CONFIG_HAVE_FLEXCOM -D CONFIG_HAVE_PIO4 -D CONFIG_HAVE_PIO4_SECURE -D
#        CONFIG_HAVE_NFC -D CONFIG_HAVE_PIT -D CONFIG_HAVE_SMC -D
#        CONFIG_HAVE_SMC_SCRAMBLING -D CONFIG_HAVE_GMAC_QUEUES -D
#        CONFIG_HAVE_MPDDRC -D CONFIG_HAVE_MPDDRC_DATA_PATH -D
#        CONFIG_HAVE_MPDDRC_IO_CALIBRATION -D CONFIG_HAVE_MPDDRC_DDR2 -D
#        CONFIG_HAVE_MPDDRC_LPDDR2 -D CONFIG_HAVE_MPDDRC_DDR3 -D
#        CONFIG_HAVE_MPDDRC_LPDDR3 -D CONFIG_HAVE_ADC_SETTLING_TIME -D
#        CONFIG_HAVE_ADC_DIFF_INPUT -D CONFIG_HAVE_ADC_SEQ_R2 -D
#        CONFIG_HAVE_PMC_FAST_STARTUP -D CONFIG_HAVE_PMC_GENERATED_CLOCKS -D
#        CONFIG_HAVE_PMC_AUDIO_CLOCK -D CONFIG_HAVE_PMC_PLLADIV2 -D
#        CONFIG_HAVE_PMC_H32MXDIV -D CONFIG_HAVE_PMC_UPLL_BIAS -D
#        CONFIG_HAVE_SCKC -D CONFIG_HAVE_PWMC_DMA -D
#        CONFIG_HAVE_PWMC_SPREAD_SPECTRUM -D CONFIG_HAVE_PWMC_EXTERNAL_TRIGGER
#        -D CONFIG_HAVE_PWMC_FAULT_PROT_HIZ -D CONFIG_HAVE_PWMC_STEPPER_MOTOR
#        -D CONFIG_HAVE_PWMC_CMP_UNIT -D CONFIG_HAVE_PWMC_SYNC_MODE -D
#        CONFIG_HAVE_PWMC_OOV -D CONFIG_HAVE_PWMC_FMODE -D CONFIG_HAVE_PWMC_WP
#        -D CONFIG_HAVE_PWMC_DTIME -D CONFIG_HAVE_PWMC_ELINE -D
#        CONFIG_HAVE_SFRBU -D CONFIG_HAVE_L2CC -D CONFIG_HAVE_SAIC -D
#        CONFIG_HAVE_XDMAC -D CONFIG_HAVE_XDMAC_DATA_WIDTH_DWORD -D
#        CONFIG_HAVE_SECUMOD -D CONFIG_HAVE_SFC -D CONFIG_HAVE_PWMC -D
#        CONFIG_HAVE_SECURE_MATRIX -D CONFIG_HAVE_DDR3_MT41K128M16 -D
#        CONFIG_HAVE_RSTC_CONFIGURABLE_USER_RESET -D CONFIG_HAVE_TC_FAULT_MODE
#        -D CONFIG_HAVE_TC_DMA_MODE -D CONFIG_HAVE_RTC_CALIBRATION -D
#        CONFIG_HAVE_RTC_MODE_PERSIAN -D CONFIG_HAVE_RTC_MODE_UTC -D
#        CONFIG_HAVE_RTC_TAMPER -D CONFIG_HAVE_AUDIO -D CONFIG_HAVE_SSC -D
#        CONFIG_HAVE_CLASSD -D CONFIG_HAVE_PDMIC -D CONFIG_HAVE_AUDIO_AD1934 -D
#        CONFIG_HAVE_SHDWC -D CONFIG_HAVE_SPI -D CONFIG_HAVE_SPI_FIFO -D
#        CONFIG_HAVE_MMU -D CONFIG_HAVE_L1CACHE -D CONFIG_HAVE_L2CACHE -D
#        CONFIG_HAVE_SPI_BUS -D CONFIG_HAVE_UART -D CONFIG_HAVE_SERIALD_UART -D
#        CONFIG_HAVE_USART -D CONFIG_HAVE_USART_FIFO -D CONFIG_HAVE_I2C_BUS -D
#        CONFIG_HAVE_I2SC -D CONFIG_HAVE_AUDIO_WM8731 --preprocess
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\iis_dma_codec\build\sama5d2-xplained\sram\List
#        -lC
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\iis_dma_codec\build\sama5d2-xplained\sram\List
#        --diag_suppress Pa050 -o
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\iis_dma_codec\build\sama5d2-xplained\sram\Obj
#        --debug --endian=little --cpu=Cortex-A5 -e --fpu=VFPv4_D16
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\iis_dma_codec\..\..\arch\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\iis_dma_codec\..\..\utils\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\iis_dma_codec\..\..\target\common\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\iis_dma_codec\..\..\target\sama5d2\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\iis_dma_codec\..\..\drivers\
#        -I
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\iis_dma_codec\..\..\lib\
#        --section .text=SOFTPACK --cpu_mode arm -Oh)
#    Locale                   =  C
#    List file                =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\iis_dma_codec\build\sama5d2-xplained\sram\List\main.lst
#    Object file              =
#        C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\iis_dma_codec\build\sama5d2-xplained\sram\Obj\main.o
#    Runtime model:              
#      __SystemLibrary        =  DLib
#      __dlib_file_descriptor =  0
#      __dlib_version         =  6
#      __iar_require _Printf  =  flags,widths
#
###############################################################################

C:\work\AtmelSoftPAck\atmel-software-package-2.17\examples\iis_dma_codec\main.c
      1          /* ----------------------------------------------------------------------------
      2           *         SAM Software Package License
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2015, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /**
     31           * \page  I2S Example
     32           *
     33           * \section Purpose
     34           *
     35           * The I2S example will help new users get familiar with Atmel's
     36           * microprocessors. This basic application shows the
     37           * usage of I2S and mikroElectronika audio codec proto board can play the 
     38           * demonstration music with speaker.
     39           *
     40           * \section Requirements
     41           *
     42           * This package can be used with SAM9X60-EK and SAMA5D2-XPLAINED.
     43           *
     44           * \section Description
     45           *
     46           * The demonstration program evaluates the I2S and its usage with the
     47           * mikroElectronica proto board.
     48           *
     49           *
     50           * \section Usage
     51           *
     52           * -# Build the program and download it inside the evaluation board. Please
     53           *    refer to the
     54           *    <a href="http://www.atmel.com/dyn/resources/prod_documents/6421B.pdf">
     55           *    SAM-BA User Guide</a>, the
     56           *    <a href="http://www.atmel.com/dyn/resources/prod_documents/doc6310.pdf">
     57           *    GNU-Based Software Development</a>
     58           *    application note or to the
     59           *    <a href="ftp://ftp.iar.se/WWWfiles/arm/Guides/EWARM_UserGuide.ENU.pdf">
     60           *    IAR EWARM User Guide</a>,
     61           *    depending on your chosen solution.
     62           * -# On the computer, open and configure a terminal application
     63           *    (e.g. HyperTerminal on Microsoft Windows) with these settings:
     64           *   - 115200 bauds
     65           *   - 8 bits of data
     66           *   - No parity
     67           *   - 1 stop bit
     68           *   - No flow control
     69           * -# Start the application.
     70           * -# In the terminal window, the following text should appear:
     71           *     \code
     72           *      -- I2S Audio Example xxx --
     73           *      -- SAMxxxxx-xx
     74           *      -- Compiled: xxx xx xxxx xx:xx:xx --
     75           *     \endcode
     76           * -# Connect the speaker to the A5D2 board first;
     77           * -# the demo audio music in softpack is 48K frame, 16bit and 2 channels;
     78           * -# Press one of the keys listed in the menu to perform the corresponding action;
     79           * -# Press key '1' to display the demo audio information, than press key '2' to
     80           * -# set the corresponding parameters to the Classd, press key '3' or key '4' to
     81           * -# increase or decrease the volume, at last press key '5' to play the music
     82           * -# without DMA or key '6' to play the music wit DMA.
     83           *
     84           * \section References
     85           * - classd/main.c
     86           * - classd.h
     87           * - classd.c
     88           */
     89          
     90          /** \file
     91           *
     92           *  This file contains all the specific code for the CLASSD example.
     93           *
     94           */
     95          
     96          /*----------------------------------------------------------------------------
     97           *        Headers
     98           *----------------------------------------------------------------------------*/
     99          
    100          #include <string.h>
    101          #include <stdio.h>
    102          #include <stdbool.h>
    103          
    104          #include "audio/i2sc.h"

  extern void i2sc_tx_stop(struct _classd_desc* desc);
                                  ^
"C:\work\AtmelSoftPAck\atmel-software-package-2.17\drivers\audio\i2sc.h",116  Warning[Pe231]: 
          declaration is not visible outside of function
    105          #include "board.h"
    106          #include "chip.h"
    107          #include "compiler.h"
    108          #include "dma/dma.h"
    109          #include "gpio/pio.h"
    110          #include "mm/cache.h"
    111          #include "peripherals/pmc.h"
    112          #include "serial/console.h"
    113          #include "timer.h"
    114          #include "trace.h"
    115          #include "audio/wm8731.h"
    116          #include "music_data.h"
    117          
    118          
    119          
    120          /*----------------------------------------------------------------------------
    121           *        Local variables
    122           *----------------------------------------------------------------------------*/
    123          
    124          /* ================== WM8904 definition ====================== */
    125          #define BOARD_WM8731_SLAVE_ADDR   0x1a
    126          #define BOARD_WM8731_TWI_BUS      BUS(BUS_TYPE_I2C, 0)      
    127          #define BOARD_WM8731_MCLK_PIN     PIN_PCK0
    128          #define BOARD_WM8731_MCLK_PCK_SRC PMC_PCK_CSS_SLOW_CLK
    129          #define BOARD_WM8731_MCLK_PCK     0   
    130          /** I2SC Configuration */

   \                                 In section .data, align 4
    131          static struct _i2sc_desc i2sc_desc = {
    132          	.addr = BOARD_I2S0_ADDR,
    133          	.sample_rate = 48000,
    134          	.mode = I2SC_MASTER,
    135                  .datalen = 16,
                                    ^
Warning[Pe188]: enumerated type mixed with another type
    136          };
    137          static struct _wm8731_desc wm8731 = {
    138          	.twi = {
    139          		.bus = BOARD_WM8731_TWI_BUS,
    140          		.addr = BOARD_WM8731_SLAVE_ADDR,
    141          	},
    142          	.input_path = 0,
    143          	.mclk_pck = BOARD_WM8731_MCLK_PCK,
    144          	.mclk_pck_src = BOARD_WM8731_MCLK_PCK_SRC,
    145          	//.mclk_pin = BOARD_WM8731_MCLK_PIN,
    146          };
    147          
    148          static uint8_t volume=30;
   \                     volume:
   \        0x0   0x1E               DC8 30
   \        0x1   0x00 0x00          DC8 0, 0, 0

   \              0x00
   \        0x4   0xF805'0000        DC32 0xf805'0000, 48'000

   \              0x0000'BB80
   \        0xC   0x00 0x10          DC8 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
   \       0x1E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
   \       0x2E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
   \       0x3E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
   \       0x4E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
   \       0x5E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
   \       0x6E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
   \       0x80   0x06 0x1A          DC8 6, 26, 0, 0

   \              0x00 0x00
   \       0x84   0x0000'0000        DC32 0, 0

   \              0x0000'0000
   \       0x8C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x00
    149          /*----------------------------------------------------------------------------
    150           *         Local functions
    151           *----------------------------------------------------------------------------*/
    152          
    153          /**
    154           * \brief Display main menu.
    155           */
    156          static void _display_menu(void)
    157          {
    158          	printf("\n\r");
    159          	printf("Select an option:\n\r");
    160          	printf("-----------------\n\r");
    161          	printf("1 -> Play the Demo Audio in DMA mode\n\r");
    162          #ifndef CONFIG_SOC_SAM9X60
    163          	printf("3 -> Output Audio PMC Clock to PCK1 IOS2\n\r");
    164          #endif
    165          	printf("+ -> Increase the volume (attenuation reduced by 3dB)\n\r");
    166          	printf("- -> Decrease the volume (attenuation increased by 3dB)\n\r");
    167          	printf("=>");
    168          }
    169          
    170          static void _configure_i2sc(void)
                             ^
Warning[Pe177]: function "_configure_i2sc" was declared but never referenced
    171          {
    172          	printf("Configuring I2SC..\n\r");
    173                  i2sc_configure(&i2sc_desc);
    174          	/*if (i2sc_configure(&i2sc_desc) == 0) {
    175          		classd_set_equalizer(&classd_desc, CLASSD_EQCFG_FLAT);
    176          		printf("ClassD configured\r\n");
    177          	} else {
    178          		printf("ClassD configuration failed!\r\n");
    179          	}*/
    180          }
    181          #ifndef CONFIG_SOC_SAM9X60
    182          static void _output_audio_pmc_clock_to_pck1(void)
    183          {
    184          	struct _pin pck1_pin = PIN_PCK1_IOS2;
    185          	pio_configure(&pck1_pin, 1);
    186          	pmc_configure_pck(1, PMC_PCK_CSS_AUDIO_CLK, 0);
    187          	pmc_enable_pck(1);
    188          }
    189          #endif

   \                                 In section SOFTPACK, align 4, keep-with-next
    190          static void _set_volume(uint8_t vol)
    191          {
   \                     _set_volume:
   \        0x0   0xE92D'4038        PUSH     {R3-R5,LR}
   \        0x4   0xE1A0'4000        MOV      R4,R0
    192          #if defined(CONFIG_HAVE_AUDIO_WM8904)
    193          	printf("Setting volume to %ddB\r\n", (signed)(vol-57));
    194          	wm8904_set_left_volume(&wm8904, vol);
    195          	wm8904_set_right_volume(&wm8904, vol);
    196          #elif defined(CONFIG_HAVE_AUDIO_WM8731)
    197          	printf("Setting volume to %ddB\r\n", (signed)(vol-73));
   \        0x8   0xE240'1049        SUB      R1,R0,#+73
   \        0xC   0x....'....        ADR      R0,?_9
   \       0x10   0x....'....        BL       printf
    198          	wm8731_set_left_volume(&wm8731, vol);
   \       0x14   0x....'....        LDR      R5,??DataTable14_2
   \       0x18   0xE1A0'1004        MOV      R1,R4
   \       0x1C   0xE285'0080        ADD      R0,R5,#+128
   \       0x20   0x....'....        BL       wm8731_set_left_volume
    199          	wm8731_set_right_volume(&wm8731, vol);
   \       0x24   0xE1A0'1004        MOV      R1,R4
   \       0x28   0xE285'0080        ADD      R0,R5,#+128
   \       0x2C   0xE8BD'4034        POP      {R2,R4,R5,LR}
   \       0x30   0x....'....        B        wm8731_set_right_volume  ;; tailcall
    200          #endif
    201          }
    202          
    203          
    204          /**
    205           *  \brief Audio TX callback
    206           */

   \                                 In section SOFTPACK, align 4, keep-with-next
    207          static int _i2sc_tx_transfer_callback(void* arg, void* arg2)
    208          {
   \                     _i2sc_tx_transfer_callback:
   \        0x0   0xE92D'5000        PUSH     {R12,LR}
    209          
    210                  printf("<Playback Done.. >\r\n");
   \        0x4   0x....'....        ADR      R0,?_10
   \        0x8   0x....'....        BL       printf
    211          	return 0;
   \        0xC   0xE3A0'0000        MOV      R0,#+0
   \       0x10   0xE8BD'8002        POP      {R1,PC}          ;; return
    212          }
    213          
    214          /*----------------------------------------------------------------------------
    215           *         Global functions
    216           *----------------------------------------------------------------------------*/

   \                                 In section .rodata, align 4
    217          volatile uint32_t* const i2sc_mr   = (uint32_t*) 0xF8050004;
   \                     i2sc_mr:
   \        0x0   0xF805'0004        DC32 0xf805'0004
    218          /**
    219           *  \brief classd Application entry point
    220           *  \return Unused (ANSI-C compatibility)
    221           */

   \                                 In section SOFTPACK, align 4, keep-with-next
    222          extern int main(void)
    223          {
   \                     main:
   \        0x0   0xE92D'4FF0        PUSH     {R4-R11,LR}
   \        0x4   0xE24D'D014        SUB      SP,SP,#+20
    224          	uint8_t key;
    225          
    226          	/* output example information */
    227          	console_example_info("I2SC Example");
   \        0x8   0x....'....        ADR      R0,?_11
   \        0xC   0x....'....        BL       console_example_info
    228                   printf("value of I2SC_MR = 0x%08x",*i2sc_mr);
   \       0x10   0x....'....        LDR      R5,??DataTable14_3  ;; 0xf8050004
   \       0x14   0x....'....        ADR      R4,?_12
   \       0x18   0xE595'1000        LDR      R1,[R5, #+0]
   \       0x1C   0xE1A0'0004        MOV      R0,R4
   \       0x20   0x....'....        ADR      R6,?_9
   \       0x24   0x....'....        ADR      R7,?_8
   \       0x28   0x....'....        BL       printf
    229                  *i2sc_mr = 0x5F030011;
   \       0x2C   0x....'....        LDR      R0,??DataTable14_4  ;; 0x5f030011
   \       0x30   0xE585'0000        STR      R0,[R5, #+0]
    230                  printf("value of I2SC_MR = 0x%08x",*i2sc_mr);
   \       0x34   0xE595'1000        LDR      R1,[R5, #+0]
   \       0x38   0xE1A0'0004        MOV      R0,R4
   \       0x3C   0x....'....        LDR      R4,??DataTable14_2
   \       0x40   0x....'....        ADR      R5,?_15
   \       0x44   0x....'....        BL       printf
    231                  
    232          	/* configure I2SC */
    233          	printf("Configuring I2SC..\n\r");
   \       0x48   0x....'....        ADR      R0,?_13
   \       0x4C   0x....'....        BL       printf
    234                  i2sc_configure(&i2sc_desc);
   \       0x50   0xE284'0004        ADD      R0,R4,#+4
   \       0x54   0x....'....        ADR      R8,?_16
   \       0x58   0x....'....        BL       i2sc_configure
    235          #if defined(CONFIG_HAVE_AUDIO_WM8904)
    236          	wm8904_configure(&wm8904);
    237          #elif defined(CONFIG_HAVE_AUDIO_WM8731)
    238          	wm8731_configure(&wm8731);
   \       0x5C   0xE284'0080        ADD      R0,R4,#+128
   \       0x60   0x....'....        LDR      R9,??DataTable14_5
   \       0x64   0x....'....        BL       wm8731_configure
    239          #endif
    240                  _set_volume(volume);
   \       0x68   0xE5D4'0000        LDRB     R0,[R4, #+0]
   \       0x6C   0x....'....        ADR      R10,??DataTable14  ;; 0x0A, 0x0D, 0x00, 0x00
   \       0x70   0x....'....        BL       _set_volume
   \       0x74   0xEA00'000A        B        ??main_0
    241          #if 1
    242          
    243          	while (1) {
    244          		_display_menu();
    245          		key = console_get_char();
    246          		printf("%c\r\n", key);
    247          		if (key == '1') {
    248          			i2sc_enable_transmitter(&i2sc_desc);
    249                                  struct _callback _cb;
    250          			callback_set(&_cb, _i2sc_tx_transfer_callback, NULL);
    251          			struct _buffer _tx = {
    252          				//.data = (uint8_t*)music_data,
    253          				//.size = ARRAY_SIZE(music_data) / sizeof(uint8_t),
    254          				.attr = I2SC_BUF_ATTR_WRITE,
    255          			};
    256          
    257          			i2sc_transfer(&i2sc_desc, &_tx, &_cb);
    258                                  while (!i2sc_tx_transfer_is_done(&i2sc_desc));
    259          
    260          
    261          #ifndef CONFIG_SOC_SAM9X60
    262          		} else if (key == '3') {
    263          			_output_audio_pmc_clock_to_pck1();
   \                     ??main_1:
   \       0x78   0xE897'100E        LDM      R7,{R1-R3,R12}
   \       0x7C   0xE1A0'000D        MOV      R0,SP
   \       0x80   0xE880'100E        STM      R0,{R1-R3,R12}
   \       0x84   0xE3A0'1001        MOV      R1,#+1
   \       0x88   0x....'....        BL       pio_configure
   \       0x8C   0xE3A0'2000        MOV      R2,#+0
   \       0x90   0xE3A0'1005        MOV      R1,#+5
   \       0x94   0xE3A0'0001        MOV      R0,#+1
   \       0x98   0x....'....        BL       pmc_configure_pck
   \       0x9C   0xE3A0'0001        MOV      R0,#+1
   \       0xA0   0x....'....        BL       pmc_enable_pck
    264          #endif
    265          		} else if (key == '+') {
   \                     ??main_0:
   \       0xA4   0xE1A0'000A        MOV      R0,R10
   \       0xA8   0x....'....        BL       printf
   \       0xAC   0x....'....        ADR      R0,?_5
   \       0xB0   0x....'....        BL       printf
   \       0xB4   0x....'....        ADR      R0,?_6
   \       0xB8   0x....'....        BL       printf
   \       0xBC   0xE1A0'0009        MOV      R0,R9
   \       0xC0   0x....'....        BL       printf
   \       0xC4   0xE289'0028        ADD      R0,R9,#+40
   \       0xC8   0x....'....        BL       printf
   \       0xCC   0xE289'0054        ADD      R0,R9,#+84
   \       0xD0   0x....'....        BL       printf
   \       0xD4   0xE289'008C        ADD      R0,R9,#+140
   \       0xD8   0x....'....        BL       printf
   \       0xDC   0x....'....        ADR      R0,??DataTable14_1  ;; 0x3D, 0x3E, 0x00, 0x00
   \       0xE0   0x....'....        BL       printf
   \       0xE4   0x....'....        BL       console_get_char
   \       0xE8   0xE1A0'B000        MOV      R11,R0
   \       0xEC   0x....'....        ADR      R0,?_14
   \       0xF0   0xE1A0'100B        MOV      R1,R11
   \       0xF4   0x....'....        BL       printf
   \       0xF8   0xE35B'0031        CMP      R11,#+49
   \       0xFC   0x1A00'0011        BNE      ??main_2
   \      0x100   0xE284'0004        ADD      R0,R4,#+4
   \      0x104   0x....'....        BL       i2sc_enable_transmitter
   \      0x108   0xE3A0'2000        MOV      R2,#+0
   \      0x10C   0x....'....        ADR      R1,_i2sc_tx_transfer_callback
   \      0x110   0xE1A0'000D        MOV      R0,SP
   \      0x114   0x....'....        BL       callback_set
   \      0x118   0xE898'000E        LDM      R8,{R1-R3}
   \      0x11C   0xE28D'0008        ADD      R0,SP,#+8
   \      0x120   0xE880'000E        STM      R0,{R1-R3}
   \      0x124   0xE1A0'200D        MOV      R2,SP
   \      0x128   0xE28D'1008        ADD      R1,SP,#+8
   \      0x12C   0xE284'0004        ADD      R0,R4,#+4
   \      0x130   0x....'....        BL       i2sc_transfer
   \                     ??main_3:
   \      0x134   0xE284'0004        ADD      R0,R4,#+4
   \      0x138   0x....'....        BL       i2sc_tx_transfer_is_done
   \      0x13C   0xE350'0000        CMP      R0,#+0
   \      0x140   0x0AFF'FFFB        BEQ      ??main_3
   \      0x144   0xEAFF'FFD6        B        ??main_0
   \                     ??main_2:
   \      0x148   0xE35B'0033        CMP      R11,#+51
   \      0x14C   0x0AFF'FFC9        BEQ      ??main_1
   \      0x150   0xE35B'002B        CMP      R11,#+43
   \      0x154   0x1A00'0012        BNE      ??main_4
    266          			if (volume < 63) {
   \      0x158   0xE5D4'0000        LDRB     R0,[R4, #+0]
   \      0x15C   0xE350'003F        CMP      R0,#+63
   \      0x160   0xAA00'000C        BGE      ??main_5
    267                                          volume += 3;
   \      0x164   0xE280'B003        ADD      R11,R0,#+3
    268                                          _set_volume(volume);
   \                     ??main_6:
   \      0x168   0xE6EF'007B        UXTB     R0,R11
   \      0x16C   0xE5C4'B000        STRB     R11,[R4, #+0]
   \      0x170   0xE240'1049        SUB      R1,R0,#+73
   \      0x174   0xE1A0'0006        MOV      R0,R6
   \      0x178   0x....'....        BL       printf
   \      0x17C   0xE6EF'107B        UXTB     R1,R11
   \      0x180   0xE284'0080        ADD      R0,R4,#+128
   \      0x184   0x....'....        BL       wm8731_set_left_volume
   \      0x188   0xE6EF'107B        UXTB     R1,R11
   \      0x18C   0xE284'0080        ADD      R0,R4,#+128
   \      0x190   0x....'....        BL       wm8731_set_right_volume
    269                                  } else {
   \      0x194   0xEAFF'FFC2        B        ??main_0
    270          				printf("Volume is already at Max\r\n");
   \                     ??main_5:
   \      0x198   0xE1A0'0005        MOV      R0,R5
   \      0x19C   0x....'....        BL       printf
   \      0x1A0   0xEAFF'FFBF        B        ??main_0
    271          			}
    272          		} else if (key == '-') {
   \                     ??main_4:
   \      0x1A4   0xE35B'002D        CMP      R11,#+45
   \      0x1A8   0x1AFF'FFBD        BNE      ??main_0
    273          			if (volume > 1) {
   \      0x1AC   0xE5D4'0000        LDRB     R0,[R4, #+0]
   \      0x1B0   0xE350'0002        CMP      R0,#+2
   \      0x1B4   0xBAFF'FFF7        BLT      ??main_5
    274                                          volume -= 3;
   \      0x1B8   0xE240'B003        SUB      R11,R0,#+3
    275                                          _set_volume(volume);
   \      0x1BC   0xEAFF'FFE9        B        ??main_6
    276                                  } else {
    277          				printf("Volume is already at Max\r\n");
    278          			}
    279          		}
    280          	}
    281          #endif
    282          }

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_16:
   \        0x0   0x0000'0000        DC32 0x0, 0, 1

   \              0x0000'0000  

   \              0x0000'0001

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable14:
   \        0x0   0x0A 0x0D          DC8      0x0A, 0x0D, 0x00, 0x00

   \              0x00 0x00

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable14_1:
   \        0x0   0x3D 0x3E          DC8      0x3D, 0x3E, 0x00, 0x00

   \              0x00 0x00

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable14_2:
   \        0x0   0x....'....        DC32     volume

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable14_3:
   \        0x0   0xF805'0004        DC32     0xf8050004

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable14_4:
   \        0x0   0x5F03'0011        DC32     0x5f030011

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable14_5:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x31 0x20          DC8 "1 -> Play the Demo Audio in DMA mode\012\015"

   \              0x2D 0x3E    

   \              0x20 0x50    

   \              0x6C 0x61    

   \              0x79 0x20    

   \              0x74 0x68    

   \              0x65 0x20    

   \              0x44 0x65    

   \              0x6D 0x6F    

   \              0x20 0x41    

   \              0x75 0x64    

   \              0x69 0x6F    

   \              0x20 0x69    

   \              0x6E 0x20    

   \              0x44 0x4D    

   \              0x41 0x20    

   \              0x6D 0x6F    

   \              0x64 0x65    

   \              0x0A 0x0D    

   \              0x00
   \       0x27   0x00               DC8 0
   \       0x28   0x33 0x20          DC8 "3 -> Output Audio PMC Clock to PCK1 IOS2\012\015"

   \              0x2D 0x3E    

   \              0x20 0x4F    

   \              0x75 0x74    

   \              0x70 0x75    

   \              0x74 0x20    

   \              0x41 0x75    

   \              0x64 0x69    

   \              0x6F 0x20    

   \              0x50 0x4D    

   \              0x43 0x20    

   \              0x43 0x6C    

   \              0x6F 0x63    

   \              0x6B 0x20    

   \              0x74 0x6F    

   \              0x20 0x50    

   \              0x43 0x4B    

   \              0x31 0x20    

   \              0x49 0x4F    

   \              0x53 0x32    

   \              0x0A 0x0D    

   \              0x00
   \       0x53   0x00               DC8 0
   \       0x54   0x2B 0x20          DC8 0x2B, 0x20, 0x2D, 0x3E, 0x20, 0x49, 0x6E, 0x63

   \              0x2D 0x3E    

   \              0x20 0x49    

   \              0x6E 0x63
   \       0x5C   0x72 0x65          DC8 0x72, 0x65, 0x61, 0x73, 0x65, 0x20, 0x74, 0x68

   \              0x61 0x73    

   \              0x65 0x20    

   \              0x74 0x68
   \       0x64   0x65 0x20          DC8 0x65, 0x20, 0x76, 0x6F, 0x6C, 0x75, 0x6D, 0x65

   \              0x76 0x6F    

   \              0x6C 0x75    

   \              0x6D 0x65
   \       0x6C   0x20 0x28          DC8 0x20, 0x28, 0x61, 0x74, 0x74, 0x65, 0x6E, 0x75

   \              0x61 0x74    

   \              0x74 0x65    

   \              0x6E 0x75
   \       0x74   0x61 0x74          DC8 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x72, 0x65

   \              0x69 0x6F    

   \              0x6E 0x20    

   \              0x72 0x65
   \       0x7C   0x64 0x75          DC8 0x64, 0x75, 0x63, 0x65, 0x64, 0x20, 0x62, 0x79

   \              0x63 0x65    

   \              0x64 0x20    

   \              0x62 0x79
   \       0x84   0x20 0x33          DC8 0x20, 0x33, 0x64, 0x42, 0x29, 0x0A, 0x0D, 0

   \              0x64 0x42    

   \              0x29 0x0A    

   \              0x0D 0x00
   \       0x8C   0x2D 0x20          DC8 0x2D, 0x20, 0x2D, 0x3E, 0x20, 0x44, 0x65, 0x63

   \              0x2D 0x3E    

   \              0x20 0x44    

   \              0x65 0x63
   \       0x94   0x72 0x65          DC8 0x72, 0x65, 0x61, 0x73, 0x65, 0x20, 0x74, 0x68

   \              0x61 0x73    

   \              0x65 0x20    

   \              0x74 0x68
   \       0x9C   0x65 0x20          DC8 0x65, 0x20, 0x76, 0x6F, 0x6C, 0x75, 0x6D, 0x65

   \              0x76 0x6F    

   \              0x6C 0x75    

   \              0x6D 0x65
   \       0xA4   0x20 0x28          DC8 0x20, 0x28, 0x61, 0x74, 0x74, 0x65, 0x6E, 0x75

   \              0x61 0x74    

   \              0x74 0x65    

   \              0x6E 0x75
   \       0xAC   0x61 0x74          DC8 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x69, 0x6E

   \              0x69 0x6F    

   \              0x6E 0x20    

   \              0x69 0x6E
   \       0xB4   0x63 0x72          DC8 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x64, 0x20

   \              0x65 0x61    

   \              0x73 0x65    

   \              0x64 0x20
   \       0xBC   0x62 0x79          DC8 0x62, 0x79, 0x20, 0x33, 0x64, 0x42, 0x29, 0x0A

   \              0x20 0x33    

   \              0x64 0x42    

   \              0x29 0x0A
   \       0xC4   0x0D 0x00          DC8 0x0D, 0
   \       0xC6   0x00 0x00          DC8 0, 0

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_5:
   \        0x0   0x53 0x65          DC8 "Select an option:\012\015"

   \              0x6C 0x65    

   \              0x63 0x74    

   \              0x20 0x61    

   \              0x6E 0x20    

   \              0x6F 0x70    

   \              0x74 0x69    

   \              0x6F 0x6E    

   \              0x3A 0x0A    

   \              0x0D 0x00

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_6:
   \        0x0   0x2D 0x2D          DC8 "-----------------\012\015"

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x0A    

   \              0x0D 0x00

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_4:
   \        0x0   0x0A 0x0D          DC8 "\012\015"

   \              0x00
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_7:
   \        0x0   0x3D 0x3E          DC8 "=>"

   \              0x00
   \        0x3   0x00               DC8 0

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_8:
   \        0x0   0x02 0x00          DC8 2, 0, 0, 0

   \              0x00 0x00
   \        0x4   0x0800'0000        DC32 134'217'728
   \        0x8   0x02 0x00          DC8 2, 0, 0, 0

   \              0x00 0x00
   \        0xC   0x0000'0000        DC32 0

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_9:
   \        0x0   0x53 0x65          DC8 "Setting volume to %ddB\015\012"

   \              0x74 0x74    

   \              0x69 0x6E    

   \              0x67 0x20    

   \              0x76 0x6F    

   \              0x6C 0x75    

   \              0x6D 0x65    

   \              0x20 0x74    

   \              0x6F 0x20    

   \              0x25 0x64    

   \              0x64 0x42    

   \              0x0D 0x0A    

   \              0x00
   \       0x19   0x00 0x00          DC8 0, 0, 0

   \              0x00

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_10:
   \        0x0   0x3C 0x50          DC8 "<Playback Done.. >\015\012"

   \              0x6C 0x61    

   \              0x79 0x62    

   \              0x61 0x63    

   \              0x6B 0x20    

   \              0x44 0x6F    

   \              0x6E 0x65    

   \              0x2E 0x2E    

   \              0x20 0x3E    

   \              0x0D 0x0A    

   \              0x00
   \       0x15   0x00 0x00          DC8 0, 0, 0

   \              0x00

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_11:
   \        0x0   0x49 0x32          DC8 "I2SC Example"

   \              0x53 0x43    

   \              0x20 0x45    

   \              0x78 0x61    

   \              0x6D 0x70    

   \              0x6C 0x65    

   \              0x00
   \        0xD   0x00 0x00          DC8 0, 0, 0

   \              0x00

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_12:
   \        0x0   0x76 0x61          DC8 "value of I2SC_MR = 0x%08x"

   \              0x6C 0x75    

   \              0x65 0x20    

   \              0x6F 0x66    

   \              0x20 0x49    

   \              0x32 0x53    

   \              0x43 0x5F    

   \              0x4D 0x52    

   \              0x20 0x3D    

   \              0x20 0x30    

   \              0x78 0x25    

   \              0x30 0x38    

   \              0x78 0x00
   \       0x1A   0x00 0x00          DC8 0, 0

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_13:
   \        0x0   0x43 0x6F          DC8 "Configuring I2SC..\012\015"

   \              0x6E 0x66    

   \              0x69 0x67    

   \              0x75 0x72    

   \              0x69 0x6E    

   \              0x67 0x20    

   \              0x49 0x32    

   \              0x53 0x43    

   \              0x2E 0x2E    

   \              0x0A 0x0D    

   \              0x00
   \       0x15   0x00 0x00          DC8 0, 0, 0

   \              0x00

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_14:
   \        0x0   0x25 0x63          DC8 "%c\015\012"

   \              0x0D 0x0A    

   \              0x00
   \        0x5   0x00 0x00          DC8 0, 0, 0

   \              0x00

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ?_15:
   \        0x0   0x56 0x6F          DC8 "Volume is already at Max\015\012"

   \              0x6C 0x75    

   \              0x6D 0x65    

   \              0x20 0x69    

   \              0x73 0x20    

   \              0x61 0x6C    

   \              0x72 0x65    

   \              0x61 0x64    

   \              0x79 0x20    

   \              0x61 0x74    

   \              0x20 0x4D    

   \              0x61 0x78    

   \              0x0D 0x0A    

   \              0x00
   \       0x1B   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   _i2sc_tx_transfer_callback
         8   -> printf
      16   _set_volume
        16   -> printf
        16   -> wm8731_set_left_volume
         0   -> wm8731_set_right_volume
      56   main
        56   -> _set_volume
        56   -> callback_set
        56   -> console_example_info
        56   -> console_get_char
        56   -> i2sc_configure
        56   -> i2sc_enable_transmitter
        56   -> i2sc_transfer
        56   -> i2sc_tx_transfer_is_done
        56   -> pio_configure
        56   -> pmc_configure_pck
        56   -> pmc_enable_pck
        56   -> printf
        56   -> wm8731_configure
        56   -> wm8731_set_left_volume
        56   -> wm8731_set_right_volume


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_2
       4  ??DataTable14_3
       4  ??DataTable14_4
       4  ??DataTable14_5
     200  ?_0
      24  ?_10
      16  ?_11
      28  ?_12
      24  ?_13
       8  ?_14
      28  ?_15
      12  ?_16
       4  ?_4
      20  ?_5
      20  ?_6
       4  ?_7
      16  ?_8
      28  ?_9
      20  _i2sc_tx_transfer_callback
      52  _set_volume
       4  i2sc_mr
     448  main
     156  volume
          i2sc_desc
          wm8731

 
 156 bytes in section .data
 212 bytes in section .rodata
 768 bytes in section SOFTPACK
 
 768 bytes of CODE  memory
 212 bytes of CONST memory
 156 bytes of DATA  memory

Errors: none
Warnings: 3
